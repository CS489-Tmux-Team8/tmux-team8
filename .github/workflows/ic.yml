name: Build and Test

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Install dependencies for Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -qq
          sudo apt-get -y install bison \
              autotools-dev \
              libncurses5-dev \
              libevent-dev \
              pkg-config \
              libutempter-dev \
              build-essential
          if [ "${{ matrix.build }}" == "musl" ] || [ "${{ matrix.build }}" == "musl-static" ]; then
            sudo apt-get -y install musl-dev \
                        musl-tools
          fi
          
      # Add steps for other operating systems if needed, similar to the Linux steps above.

      - name: Build tmux
        run: |
          sh autogen.sh
          ./configure
          make

      # Explicitly declare an array of scripts to execute
      - name: Build tmux
        run: |
          declare -a scripts=(
            "am-terminal.sh"
            "capture-pane-hyperlink.sh"
            "combine-test.sh"
            "command-order.sh"
            "conf-syntax.sh"
            "control-client-sanity.sh"
            "cursor-test1.sh"
            "cursor-test2.sh"
            "cursor-test3.sh"
            "cursor-test4.sh"
            "has-session-return.sh"
            "if-shell-error.sh"
            "if-shell-nested.sh"
            "if-shell-TERM.sh"
            "input-keys.sh"
            "kill-session-process-exit.sh"
            "new-session-base-index.sh"
            "new-window-command.sh"
            "osc-11colours.sh"
            "style-trim.sh"
            "control-client-size.sh"
            "new-session-no-client.sh"
            "new-session-size.sh"
            "new-session-command.sh"
            "copy-mode-test-emacs.sh"
        )

      # Add additional steps for running tests if applicable.
      - name: Run Tests
        working-directory: ./regress
        run: |
          for script in "${scripts[@]}"; do
            chmod +x "$script"
            sh "$script"
          done
        ##  chmod +x tty-keys.sh
        ##  sh tty-keys.sh
        ##  chmod +x format-strings.sh
        ##  sh format-strings.sh
        ##  chmod +x copy-mode-test-vi.sh
        ##  sh copy-mode-test-vi.sh
        ##  chmod +x new-session-environment.sh
        ##  sh new-session-environment.sh

      

      

