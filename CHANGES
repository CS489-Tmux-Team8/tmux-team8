CHANGES FROM to v1.0.0

* [SKIP-RELEASE-TESTS] fix tagged-release.yml

* Revert "[SKIP-RELEASE-TESTS] Modify DEVELOPER.md to contain info about code-reviewers"

* [SKIP-RELEASE-TESTS] Modify DEVELOPER.md to contain info about code-reviewers

* Merge pull request #15 from CS489-Tmux-Team8/judie_fix

* fix all2

* fix all

* Merge pull request #14 from CS489-Tmux-Team8/judie

* fix test.yml and DEVELOEPR.md and emacs.sh

* Merge pull request #12 from CS489-Tmux-Team8/tagged-release

* Merge pull request #13 from CS489-Tmux-Team8/shrey-docs

* work

* Merge pull request #10 from CS489-Tmux-Team8/judie_branch

* Create Continuous Delivery GitHub Workflow

* fix all pr comment

* fix pr comment

* update ic.yml with script

* update ic.yml with script

* update ic.yml with script

* update ic.yml with script

* update ic.yml with script

* update ic.yml with script

* workflow

* update ic.yml with script

* update ic.yml with script

* update ic.yml with script

* update ic.yml with script

* remove some comment in test-emacs

* modify test-emacs with printf2

* modify test-emacs with printf

* modify test-emacs and update ic.yml

* add error count

* update ic.yml to my branch

* add linter workflow

* Update ISSUE_TEMPLATE.md

* Update doc_review_reminder.yml

* Update doc_review_reminder.yml

* Update doc_review_reminder.yml

* Update doc_review_reminder.yml

* Update doc_review_reminder.yml

* Update doc_review_reminder.yml

* Update doc_review_reminder.yml

* Update doc_review_reminder.yml

* Update doc_review_reminder.yml

* Update doc_review_reminder.yml

* Delete .github/ISSUE_TEMPLATE/documentation_review.md

* Update doc_review_reminder.yml

* Merge pull request #2 from CS489-Tmux-Team8/shrey-add-schedule-for-doc-reviews

* Add a new workflow for doc reviews

* Merge branch 'obsd-master'

* Make the attach-session description clearer - do not mention creating a client which is not important, explicitly say the session must exist, and mention new-session and new-session -A. Prompted by Theo.

* Merge branch 'obsd-master'

* Update lock.yml.

* Check for the right flag to fix split-window -p, from Bryan Childs.

* Add missing headers, from Marvin Schmidt.

* next-3.5

* 3.4.

* Merge branch 'obsd-master'

* Update CHANGES.

* Add two new values for the destroy-unattached option to destroy sessions only if they are not members of sessions groups, from Mark Huang, GitHub issue 3806.

* Do not allow paste into panes which have exited, from Romain Francoise in GitHub issue 3830.

* Merge branch 'obsd-master'

* Increase buffer size to avoid truncating styles, GitHub issue 3809 from Ricardo Bittencourt.

* Remove existing defines.

* Need htonll and ntohll.

* htobe is not portable.

* Update imsg.

* Merge branch 'obsd-master'

* Use imsg_get_fd() instead of direct access to imsg.fd

* Merge branch 'obsd-master'

* Assignment should be inside SIXEL.

* Only wrap pattern in *s if using a regular expression.

* Remove flags from the prefix before comparing with the received key so that modifier keys with flags work correctly, GitHub issue 3764.

* groff apparently generates broken output for some common characters in mdoc, so escaped versions have to be used instead. From Alexis Hildebrandt in GitHub issue 3762.

* Always initialize screen mode, GitHub issue 3750 from Ding Fei.

* Do not use NULL window, GitHub issue 3747.

* Correctly handle window ops with no pane, GitHub issue 3747.

* Merge branch 'obsd-master'

* Don't strdup NULL filename.

* Merge branch 'obsd-master'

* Handle NULL client (in config file) when showing a status message; also copy the file when processing if-shell since it may be freed. GitHub issue 3746.

* Use SM 2026 for Sync which is more widely supported now.

* Merge branch 'obsd-master'

* next-prompt can have 1 argument.

* Allow attributes to have only two parameters, from Tim Culverhouse.

* Do not allow combined UTF-8 characters that are too long, GitHub issue 3729.

* Unzoom window at start of destroy so it doesn't happen later (when destroying panes) after the layout has been freed, GitHub issue 3717.

* Switch to tiparm_s (added in ncurses 6.4-20230424) instead of tparm, which allows ncurses to validate the capabilities correctly.

* Merge branch 'obsd-master'

* Fix a couple of mouse mode flag names.

* Add combined character test.

* Restore utf8proc code.

* Reply to SMGRAPHICS.

* Merge branch 'obsd-master'

* Remove next- and previous-prompt added in error. GitHub issue 3696.

* Change UTF-8 combining to inspect the previous character at the cursor position rather than keeping the last character from the input stream, this is how most terminals work and fixes problems with displaying these characters in vim. GitHub issue 3600.

* Merge branch 'obsd-master'

* Add -t to source-file, GitHub issue 3473.

* Merge branch 'obsd-master'

* Reset combine flag only if text is actually processed.

* Merge branch 'obsd-master'

* On second thoughts, do check DA2 for DECFRA and DECSLRM since that will catch terminals that say they are VT520 even if we can't use DA1 (because of VTE).

* Use DECSLRM and DECFRA only at level 4 rather than checking the terminal id.

* Only remove images if reverse index actually scrolls.

* Shut autoconf up.

* Merge branch 'obsd-master'

* Use DECSLRM and DECFRA on terminals pretending to be VT520 or VT525 as well as VT420.

* Merge branch 'obsd-master'

* Accept 65 for VT525 as well.

* Merge branch 'obsd-master'

* Skip wrapped lines in top level search loop because they will be combined in the inner loop (in window_copy_search_rl_regex and the others), avoids searching the same text multiple times. Also add a line length limit for regex searches. GitHub issue 3675.

* Merge branch 'obsd-master'

* Request terminal colours again on SIGWINCH but at most once every 30 seconds, GitHub issue 3582.

* Merge branch 'obsd-master'

* Setulc only does RGB colour so add Setulc1 to do non-RGB colours, GitHub issue 3627.

* Set visited flag on last windows when linking session.

* Merge branch 'obsd-master'

* Only compare the actual size of the UTF-8 character, not all of it.

* Use %05X not %08X.

* Add missing -T to getopt string.

* makefile: fixup bad merge

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Clear combine flag when a non-UTF-8 set of characters is encountered.

* Rewrite combined character handling to be more consistent and to support newer Unicode combined characters (which we have to "know" are combined since they are not width zero). GitHub issue 3600.

* Expand name before looking for window with -S, GitHub issue 3670.

* Bump width and height to 10000.

* Add detach-on-destroy previous and next, mostly from Alexis Hildebrandt.

* Fix merge error, from Jakub ≈Åukasiewicz.

* portable: fixup merge

* Merge branch 'obsd-master'

* Add -c to run-shell to set working directory, from someone in GitHub issue 3661.

* Improve logging of SIXEL parsing errors.

* Log what input_dcs_dispatch does with the input data.

* Merge SIXEL branch.

* Merge branch 'obsd-master'

* Add a session, pane and user mouse range types for the status line and add format variables for mouse_status_line and mouse_status_range so they can be associated with different commands in the key bindings. GitHub issue 3652.

* Merge branch 'obsd-master'

* Add meta bindings for status line menus as well as the existing pane one for terminals which steal the mouse menu button.

* Merge branch 'obsd-master'

* Add an option menu-selected-style to configure the currently selected menu item, from Alexis Hildebrandt.

* Merge branch 'obsd-master'

* Do not crash if in buffer mode and the last buffer is deleted using the command.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Add flag to next-prompt/previous-prompt to go to command output instead, from Magnus Gross.

* Add options and flags for menu styles similar to those existing for popups, from Alexis Hildebrandt. GitHub issue 3650.

* Extend the menu drawing function to support custom characters and styles, from Alexis Hildebrandt.

* Fix a couple of rounded border characters, from Alexis Hildebrandt.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Free title earlier, from Alexis Hildebrandt.

* Trim can generate strings longer than the original if there are many #s, so create a bigger buffer. Reported by Robert Morris.

* Merge branch 'obsd-master'

* Correct visited flag when the last window list is rebuilt by renumbering windows, appears to fix hang reported by Mark Kelly.

* Merge branch 'obsd-master'

* Set extended keys flag again after reset, from Eric T Johnson.

* Merge branch 'obsd-master'

* Use 8 for underscore colour defaults instead of 0 which is less confusing, and fix writing tge default colour. GitHub issue 3627.

* Merge branch 'obsd-master'

* Remove Ns and Li and change Nm to Ic, suggested by jmc.

* Merge branch 'obsd-master'

* Add descriptions of copy mode commands, from Michael Bianco.

* Merge branch 'obsd-master'

* It should no longer be necessary to ignore SIGCHLD because it is now blocked around daemon(), and doing so causes trouble with newer libevent (it cannot restore the original handler). Reported by Azat Khuzhin in GitHub issue 3626.

* Merge branch 'obsd-master'

* Loop around waitpid in client, from Azat Khuzhin.

* Use a stack for last panes line windows, from Thomas Bertschinger in GitHub issue 3588.

* Merge branch 'obsd-master'

* Call closefrom after removing signals because newer libevent doesn't like its signal fd being closed Azat Khuzhin.

* Merge branch 'obsd-master'

* Add support for marking lines with a shell prompt based on the OSC 133 extension, from Munif Tanjim in GitHub issue 3596.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Do not risk writing over the end of the buffer when it ends in # (because strchr \0 will be non-NULL), reported by Robert Morris in GitHub issue 3610.

* Another warning fix for GCC from Thomas Klausner.

* Merge branch 'obsd-master'

* Change a few types to fix warnings, from Thomas Klausner.

* Merge branch 'obsd-master'

* Get rid of some warnings with GCC 10, from Thomas Klausner.

* Add libterminfo for NetBSD, from Thomas Klausner.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* When exiting alternate screen, there is no need to reflow when going back to old size since the contents will be overwritten. GitHub issue 3510.

* Add "us" to styles for underscore colour, GitHub issue 3589.

* Merge branch 'obsd-master'

* SGR 0 should not end hyperlink, reported by Lucas Trzesniewski.

* Merge branch 'obsd-master'

* Check fdopen return value, from Christian Menges.

* Merge branch 'obsd-master'

* Fix mismatch between function prototype and definition, from Anindya Mukherjee.

* Try utf8proc with pkg-config, from Alex Wu.

* Merge branch 'obsd-master'

* Add format for server_sessions, from Magnus Gross.

* Merge branch 'obsd-master'

* Reorder struct grid_cell_entry

* Merge branch 'obsd-master'

* Cast both strings for tparm.

* Add options to change the confirm key and default behaviour of confirm-before. From Elias Assaf in GitHub issue 3548; prompted by an earlier change from Yutaro Yoshii in GitHub issue 3496.

* Do not fatal if tparm fails, instead just log it (not working sequences are better than exiting).

* Use ncurses' new tparm_s function (added in 6.4-20230424) instead of tparm so it does not object to string arguments in capabilities it doesn't already know.

* Merge branch 'obsd-master'

* Set default lock command to vlock on Linux if present at build time, from Josh Boyer in GitHub issue 3527.

* Include NCURSES_VERSION_PATCH in the log.

* Tidy tparm wrapper functions to have more obvious names and check tparm return value.

* Invalidate cached tty state after changing features since they may change what the terminal can do and need mouse sequences or similar to be sent again, GitHub issue 3513.

* Ignore the user keys range when checking if a key is Unicode.

* It seems silly to use progname for version, just always say tmux.

* Make the check if printing is allowed the same as writing which is less confusing.

* Discard mouse sequences that have the right form but actually are invalid (for example have column zero rather than one).

* Add support for spawning panes in separate cgroups with systemd and a configure flag to disable. From Eric T Johnson yut23 AT gvljohnsons DOT com in GitHub issue 3514.

* Clarify text for new -A slightly, GitHub issue 3508.

* Add a format to show if there are unseen changes while in a mode, from Dan Aloni in GitHub issue 3498.

* For passthrough, don't write to clients attached to different sessions, based on a fix from Sergei Grechanik.

* Merge branch 'obsd-master'

* Do not leak screen in popups, GitHub issue 3492.

* Merge branch 'obsd-master'

* Fix command prompt not to always append argument but only if there has actually been expansion. GitHub issue 3493.

* Merge branch 'obsd-master'

* Fix cursor position after zero width space, GitHub issue 3469.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Remove old buffer when renaming rather than complaining, GitHub issue 3467 from Jean-Philippe Paradis.

* Add an L modifier like P, W, S to loop over clients. Also fix some long lines in tmux(1).

* Merge branch 'obsd-master'

* Add -f to list-clients like the other list commands, from Andy Walker in GitHub issue 3449.

* portable: remove vis.h

* Merge branch 'obsd-master'

* Do not allow multiple line separators in a row.

* Extend display-message to work for control clients. GitHub issue 3449.

* Merge branch 'obsd-master'

* Add a missing error message which causes an invalid layout name to crash.

* Tweak note for D key binding, from Clark Wang.

* Merge branch 'obsd-master'

* Too many \s in example, GitHub issue 3445.

* Merge branch 'obsd-master'

* Add a flag to display-menu to select the manu item chosen first, GitHub issue 3442.

* Merge branch 'obsd-master'

* Support -1 without -N for list-keys.

* Merge branch 'obsd-master'

* Update palette when moving a pane, GitHub issue 3437.

* Merge branch 'obsd-master'

* Mark keys sent by command and skip paste handling for them.

* Merge branch 'obsd-master'

* Have tmux recognise pasted texts wrapped in bracket paste sequences, rather than only forwarding them to the program inside. From Andrew Onyshchuk in GitHub issue 3431.

* Merge branch 'obsd-master'

* Fix behaviour with \007 (used the wrong tree for last change).

* Merge branch 'obsd-master'

* Accept \007 as terminator to OSC 10 or 11.

* Merge branch 'obsd-master'

* Fix parsing of optional arguments so that and accept a - starting an argument.

* portable: fixup merge with utf8.c

* Merge branch 'obsd-master'

* Have client return 1 if process is interrupted to an input pane.

* Restore code to handle wcwidth failure so that unknown codepoints still do the most likely right thing. GitHub issue 3427, patch based on an diff from Jesse Luehrs in GitHub issue 3003.

* Restore code to handle wcwidth failure so that unknown codepoints still do the most likely right thing. GitHub issue 3427, patch based on an diff from Jesse Luehrs in GitHub issue 3003.

* Quotes are now required in select-layout example.

* Missing #endif.

* Merge branch 'obsd-master'

* If a pane is killed, cancel reading from the file. GitHub issue 3422.

* Query the client terminal for foreground and background colours and if OSC 10 or 11 is received but no colour has been set inside tmux, return the colour from the first attached client (probably most people will have all light or or all dark terminals).

* spelling fixes; from paul tagliamonte amendments to his diff are noted on tech

* Denote multiple arguments with 'arg ...' not 'args'

* Allow send-keys without a client again, reported by Stefan Hagen.

* Do not escape tabs in output (iTerm2 needs them). GitHub issue 3414.

* Make U+FE0F VARIATION SELECTOR-16 change the width from 1 to 2. GitHub issue 3409.

* Add send-keys -K to handle keys directly as if typed (so look up in key table). GitHub issue 3361.

* No vis.h in portable.

* Merge branch 'obsd-master'

* Process escape sequences in show-buffer, GitHub issue 3401.

* Merge branch 'obsd-master'

* Add key regression tests from Aaron Jensen.

* Tweak previous to set and log the feature instead of just setting the flag.

* Parse primary device attributes as well as secondary and add a SIXEL flag (not used yet), from Anindya Mukherjee.

* Document alternative delimiters for substitution, from Jim Wisniewski.

* Merge branch 'obsd-master'

* - sort options; from josiah frentsos ok nicm

* Merge branch 'obsd-master'

* Fix C-S-Tab without extended keys, from Aaron Jensen.

* Merge branch 'obsd-master'

* Unescape the string for the literal operator (l:) so special characters work.

* Merge branch 'obsd-master'

* If there are no buffers, reset mode as soon as any key pressed. Fixes crash reported by Gaoyang Zhang in GitHub issue 3373.

* Add a -l flag to display-message to disable format expansion, from Aaron Jensen. GitHub issue 3372.

* Merge branch 'obsd-master'

* Instead of always setting the extended flag, set it only when searching. Allows send-keys to work. From Aaron Jensen.

* Merge branch 'obsd-master'

* Add modified Tab key sequences, from Aaron Jensen, GitHub issue 3368.

* Use active pane in target window not current window for +/-. GitHub issue 3370.

* Merge branch 'obsd-master'

* Add paste-buffer-deleted notification and fix name of paste-buffer-changed.

* Merge branch 'obsd-master'

* Initialize context before testing it.

* Merge branch 'obsd-master'

* Fix a memory leak, from Japin Li in GitHub issue 3358.

* Do not fire redraw callback if NULL.

* Do not attempt to connect to the socket as a client if systemd is active, from Julien Moutinho in GitHub issue 3345.

* Merge branch 'obsd-master'

* Preserve marked pane when renumbering windows.

* Merge branch 'obsd-master'

* Add scroll-top and scroll-bottom commands to scroll so cursor is at top or bottom. From Anindya Mukherjee, GitHub issue 3334.

* Add a -T flag to capture-pane to stop at the last used cell instead of the full width. Restore the previous behaviour by making it default to off unless -J is used (the only time it matters). Fixes mosh unit tests; GitHub issue 3339.

* Merge branch 'obsd-master'

* Add headers and fix type, from Marvin Schmidt. GitHub issue 3332.

* Don't use options from pane if pane is NULL.

* Use correct option name.

* Add message-line option to control where message and prompt go, from Varun Kumar E in GitHub issue 3324.

* Regress typos.

* Merge branch 'obsd-master'

* Fix window size report, from Vincent Bernat.

* Merge branch 'obsd-master'

* Check for NULL returns from bufferevent_new.

* Merge branch 'obsd-master'

* Add scroll-middle copy mode command to make cursor line in the middle, from Varun Kumar E in GitHub issue 3307.

* Fix fallback implementaion of getpeereid, from Pino Toscano.

* Merge branch 'obsd-master'

* Notify when a paste buffer is deleted, GitHub issue 3302 from George Nachman.

* Add a Nobr terminfo capability to tell tmux the terminal does not use bright colours for bold (makes a difference to how tmux applies palette differences). From Damien Tardy-Panis in GitHub issue 3301.

* Add some const, from Markus F X J Oberhumer.

* Don't stop at first match when updating environment.

* Merge branch 'obsd-master'

* vi(1) Home/End bindings, from Markus F X J  Oberhumer.

* Merge branch 'obsd-master'

* Fix check of home directory (&& not ||), from Markus F X J Oberhumer, GitHub issue 3297.

* Merge branch 'obsd-master'

* Change g and G to go to top and bottom of menu, GitHub issue 3286.

* Merge branch 'obsd-master'

* Do not crash when searching for .* with extremely long lines. Reported by Torbjorn Lonnemark, GitHub issue 3272.

* Merge branch 'obsd-master'

* Add a third state "all" to allow-passthrough to work even in invisible panes, from Sergei Grechanik in GitHub issue 3274.

* Merge branch 'obsd-master'

* Check for $YACC, from Wei Shih in GitHub issue 3267.

* Fix validation of missing percentage arguments.

* -u is no longer equivalent to -TUTF-8 so don't say it is.

* Merge branch 'obsd-master'

* Clear marks when the search string changes. From Anindya Mukherjee, GitHub issue 3255.

* Merge branch 'obsd-master'

* Do not ignore the "off" flag when checking if a pane should be stopped, GitHub issue 3250.

* Add permissions for workflow, GitHub issue 3202.

* Process modifiers as bits rather than using a switch, from Koichi Murase.

* Include curses properly for hyperlinks ifdef, from chrysn at fsfe dot org.

* Fix memory leak, from Gabriel Souza Franco.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Errors are now displayed on attach so use control mode to test instead.

* Show config errors on attach if they were not shown when the session was created.

* Add hyperlink test, from Jeff Chiang.

* Remove debugging code.

* Defer reading from control client until the command line command has completed.

* Mention whether time is creation/activity for sort orders.

* Support hyperlinks with capture-pane -e and add a mouse_hyperlink format, GitHub issue 3247 from Jeff Chiang.

* Merge branch 'obsd-master'

* Sort panes by index not by ID, GitHub issue 3249.

* Do not set Hls for hyperlinks on ncurses older than 5.9 (for example macOS).

* hyperlinks: remove vis.h

* Merge branch 'obsd-master'

* Add support for OSC 8 hyperlinks (a VTE extension now supported by other terminals such as iTerm2). Originally written by me then extended and completed by first Will Noble and later Jeff Chiang. GitHub issues 911, 2621, 2890, 3240.

* Merge branch 'obsd-master'

* Tweak previous - find end of style correctly.

* Do not expand single character format aliases inside #[] since they interfere with colours. GitHub issue 3239 from Magnus Gross.

* Merge branch 'obsd-master'

* Store time lines are scrolled into history and display in copy mode.

* Merge branch 'obsd-master'

* Do not display configuration file errors in a pane when in control mode, instead report them with a %config-error notification. GitHub issue 3193.

* Merge branch 'obsd-master'

* Check cursor options when a pane is created, not just when they are changed.

* Merge branch 'obsd-master'

* Keep cursor on selected item on menu (useful for blind people), GitHub issue 3225.

* Typos from Bastian Venthur.

* Merge branch 'obsd-master'

* kf* terminfo capabilities are poorly defined and rxvt uses them in a different way from xterm, so add a feature flag for rxvt to make tmux ignore the capabilities and instead rely on its builtin definitions.

* Merge branch 'obsd-master'

* Fix size of flags output buffer.

* Merge branch 'obsd-master'

* Ignore OSC if the first argument is not properly terminated.

* Merge tag '3.3a'

* 3.3a.

* Remove extra definition of getpeereid. From Eric N Vander Weele in GitHub issue 3209.

* Do not attempt to use client in config file (it will be NULL), GitHub issue 3206.

* Do not unintentionally turn off all mouse mode when button is also present.

* Merge branch 'obsd-master'

* If an application gives the first parameter to OSC 52, validate and pass on to outside terminal. GitHub issue 3192.

* Merge branch 'obsd-master'

* Expand arguments to some commands where it makes sense, GitHub issue 3204 from Anindya Mukherjee.

* Merge branch 'obsd-master'

* When picking a buffer because one isn't specified by the user, ignore named buffers. GitHub issue 3212 from David le Blanc.

* Merge branch 'obsd-master'

* Do not unintentionally turn off all mouse mode when button is also present.

* Merge branch 'obsd-master'

* Do not attempt to use client in config file (it will be NULL), GitHub issue 3206.

* Remove extra definition of getpeereid. From Eric N Vander Weele in GitHub issue 3209.

* When deleting or renaming a buffer and a buffer name is specified, complain if the buffer doesn't exist instead of silently deleting or renaming the most recent buffer. GitHub issue 3205.

* Merge branch 'obsd-master'

* If escape-time is 0, force to 1 instead - not waiting at all is asking for problems on some platforms.

* Now back to 3.4.

* Update CHANGES.

* Set version to 3.3.

* Merge branch 'obsd-master'

* Add a missing space.

* Merge branch 'obsd-master'

* Trim menu item text correctly, GitHub issue 3197.

* Merge branch 'obsd-master'

* Remove duplicates from completion list, GitHub issue 3178.

* Add pane_start_path to match start_command.

* Set PWD so shells have a hint about the real path (this was done before but lost in a merge). GitHub issue 3186.

* Fix property name from Sergei Dyshel, and a typo from imcusg at gmail dot com.

* Check if args_strtonum argument is NULL or not a string, from Anindya Mukherjee.

* Do not allow pipe-pane on dead panes, from Anindya Mukherjee, GitHub issue 3174.

* If a mouse position was above the maximum supported by the normal mouse protocol (223), tmux was allowing it to wrap around. However, since tmux was not correctly handling this on input, other programs also do not handle it correctly, and the alternative SGR mouse mode is now widespread, this seems unnecessary, so remove this feature. Also define some constants to make it clearer what the numbers mean. Mostly from Leonid S Usov in GitHub issue 3165.

* Add a way for lines added to copy mode to be passed through the parser to handle escape sequences and use it for run-shell, GitHub issue 3156.

* iTerm2 has OSC 7, from Gregory Anders.

* Spacing/style nits.

* Emit window-layout-changed on swap-pane, from George Nachman.

* Better error reporting when applying custom layouts.

* Add an ACL list for users connecting to the tmux socket. Users may be forbidden from attaching, forced to attach read-only, or allowed to attach read-write. A new command, server-access, configures the list. tmux gets the user using getpeereid(3) of the client socket. Users must still configure file system permissions manually. From Dallas Lyons and others.

* Fix property name, from Sergei Dyshel.

* Remove duplicates from completion list, GitHub issue 3178.

* Add pane_start_path to match start_command.

* Set PWD so shells have a hint about the real path (this was done before but lost in a merge). GitHub issue 3186.

* Typos, from imcusg at gmail dot com.

* Check if args_strtonum argument is NULL or not a string, from Anindya Mukherjee.

* Do not allow pipe-pane on dead panes, from Anindya Mukherjee, GitHub issue 3174.

* Merge branch 'obsd-master'

* If a mouse position was above the maximum supported by the normal mouse protocol (223), tmux was allowing it to wrap around. However, since tmux was not correctly handling this on input, other programs also do not handle it correctly, and the alternative SGR mouse mode is now widespread, this seems unnecessary, so remove this feature. Also define some constants to make it clearer what the numbers mean. Mostly from Leonid S Usov in GitHub issue 3165.

* Add a way for lines added to copy mode to be passed through the parser to handle escape sequences and use it for run-shell, GitHub issue 3156.

* iTerm2 has OSC 7, from Gregory Anders.

* Fix clearphist alias, from Jacqueline Jolicoeur via jmc@.

* On platforms with no way to get peer UID, use getuid(), also fix some failure checks.

* Some style nits.

* Emit window-layout-changed on swap-pane, from George Nachman.

* Better error reporting when applying custom layouts.

* Do not send focus sequences when focus is enabled or disabled by the application if it is turned off. GitHub issue 3142.

* Add an ACL list for users connecting to the tmux socket. Users may be forbidden from attaching, forced to attach read-only, or allowed to attach read-write. A new command, server-access, configures the list. tmux gets the user using getpeereid(3) of the client socket. Users must still configure file system permissions manually.

* Fix version.

* Merge remote-tracking branch 'origin/3.3-rc'

* Merge tag '3.3-rc'

* Add to CHANGES.

* Preserve CRLF flag when respawning.

* man pages: add missing commas between subordinate and main clauses

* Capture up to used size not available size for each line.

* Report error if creating socket fails with -D.

* Add support for systemd socket activation (where systemd creates the Unix domain socket for tmux rather than tmux creating it). Build with --enable-systemd. From Julien Moutinho in GitHub issue 3119.

* Fix exit message if creating socket fails.

* Add unit (milliseconds) to escape-time, show unset colours as "none" rather than "invalid" and don't show the same text twice for user options in customize mode.

* Add a capability for OSC 7 and use it similarly to how the title is set (and controlled by the same set-titles option). GitHub issue 3127.

* Check scroll-on-clear for ED also.

* Add an option (scroll-on-clear) to control if tmux scrolls into history on clear, from Robert Lange in GitHub issue 3121.

* Add an option to set the character used for unused areas of the terminal, GitHub issue 3110.

* With -f use percentages of window size not pane size, GitHub issue 2866.

* Fix user hooks (which are strings not arrays).

* Add remain-on-exit-format to set text shown when pane is dead.

* Add argument to refresh-client -l to forward clipboard to a pane. GitHub issue 3068.

* Add formats for client and server UID and user (for multiuser setups).

* Use getpeerucred if available (not tested).

* Need a declaration for getpeereid also.

* Add getpeerid compat.

* Remove unnecessary declarations.

* Pass client when adding menu item, GitHub issue 3103.

* Allow optional arguments.

* Don't convert codes for special keys (Tab, Enter, Escape).

* Use PATH_MAX instead of MAXPATHLEN.

* Exit on SIGHUP before attach also, GitHub issue 3084.

* Map control keys back to an ASCII uppercase letter when passing them on as extended keys.

* MAXCOMLEN is no longer needed in these programs, so remove the annotation from sys/param.h include lines, or remove the include lines entirely if it this was the least requirement. ok millert

* Do not attempt to update focus (and crash) when there is no previous window.

* Add next_session_id format with the next session ID, GitHub issue 3078.

* Initialize copy_width before adjusting it, GitHub issue 3079.

* Use correct size for screen when popup is created without borders.

* Add a window-resized hook which is fired when the window is actually resized which may be later than the client resize, GitHub issue 2995.

* Support more mouse buttons when the terminal sends them, GitHub issue 3055.

* No not allow static linking on macOS.

* Add an option (default off) to control the passthrough escape sequence. Like set-clipboard and allow-rename it is safer to forbid this by default.

* Do not create a buffer from an OSC 52 response if we have not sent a query.

* Do not return error with -q, GitHub issue 3065.

* Use ACS for pane border indicators so they work with different line types, from Thomas Adam.

* Adjust size given to resize-pane for pane status line, GitHub issue 3050.

* Merge branch 'obsd-master' into master

* Preserve CRLF flag when respawning.

* Merge branch 'obsd-master' into master

* man pages: add missing commas between subordinate and main clauses

* Merge branch 'obsd-master' into master

* Capture up to used size not available size for each line.

* Merge branch 'obsd-master' into master

* Add support for systemd socket activation (where systemd creates the Unix domain socket for tmux rather than tmux creating it). Build with --enable-systemd. From Julien Moutinho in GitHub issue 3119.

* Report error if creating socket fails with -D.

* Merge branch 'obsd-master' into master

* Fix exit message if creating socket fails.

* Merge branch 'obsd-master' into master

* Add unit (milliseconds) to escape-time, show unset colours as "none" rather than "invalid" and don't show the same text twice for user options in customize mode.

* Merge branch 'obsd-master' into master

* Add a capability for OSC 7 and use it similarly to how the title is set (and controlled by the same set-titles option). GitHub issue 3127.

* Merge branch 'obsd-master' into master

* Check scroll-on-clear for ED also.

* Add an option (scroll-on-clear) to control if tmux scrolls into history on clear, from Robert Lange in GitHub issue 3121.

* Merge branch 'obsd-master' into master

* Add an option to set the character used for unused areas of the terminal, GitHub issue 3110.

* Merge branch 'obsd-master' into master

* With -f use percentages of window size not pane size, GitHub issue 2866.

* Fix user hooks (which are strings not arrays).

* Merge branch 'obsd-master' into master

* Add remain-on-exit-format to set text shown when pane is dead.

* Merge branch 'obsd-master' into master

* Add argument to refresh-client -l to forward clipboard to a pane. GitHub issue 3068.

* Use getpeerucred if available (not tested).

* Add formats for client and server UID and user (for multiuser setups).

* Need a declaration for getpeereid also.

* Add getpeerid compat.

* Remove unnecessary declarations.

* Merge branch 'obsd-master' into master

* Pass client when adding menu item, GitHub issue 3103.

* Merge branch 'obsd-master' into master

* Allow optional arguments.

* Merge branch 'obsd-master' into master

* Don't convert codes for special keys (Tab, Enter, Escape).

* Merge pull request #3093 from topcat001/pathfix

* Use PATH_MAX instead of MAXPATHLEN.

* Merge branch 'obsd-master' into master

* Merge branch 'obsd-master' into master

* Exit on SIGHUP before attach also, GitHub issue 3084.

* Map control keys back to an ASCII uppercase letter when passing them on as extended keys.

* Merge branch 'obsd-master' into master

* MAXCOMLEN is no longer needed in these programs, so remove the annotation from sys/param.h include lines, or remove the include lines entirely if it this was the least requirement. ok millert

* Merge branch 'obsd-master' into master

* Merge branch 'obsd-master' into master

* Do not attempt to update focus (and crash) when there is no previous window.

* Add next_session_id format with the next session ID, GitHub issue 3078.

* Initialize copy_width before adjusting it, GitHub issue 3079.

* Use correct size for screen when popup is created without borders.

* Merge branch 'obsd-master' into master

* Add a window-resized hook which is fired when the window is actually resized which may be later than the client resize, GitHub issue 2995.

* Merge branch 'obsd-master' into master

* Support more mouse buttons when the terminal sends them, GitHub issue 3055.

* No not allow static linking on macOS.

* Merge branch 'obsd-master' into master

* Add an option (default off) to control the passthrough escape sequence. Like set-clipboard and allow-rename it is safer to forbid this by default.

* Do not create a buffer from an OSC 52 response if we have not sent a query.

* Merge branch 'obsd-master' into master

* Do not return error with -q, GitHub issue 3065.

* Merge branch 'obsd-master' into master

* Use ACS for pane border indicators so they work with different line types, from Thomas Adam.

* Merge branch 'obsd-master' into master

* Merge branch 'master' into 3.3-rc

* Merge branch 'obsd-master' into master

* Adjust size given to resize-pane for pane status line, GitHub issue 3050.

* Use format_draw for command prompt prefix to allow styles, GitHub issue 3054.

* Merge branch 'obsd-master' into master

* Merge branch 'obsd-master' into master

* 3.3-rc.

* Update CHANGES.

* Update focus when active pane changes after pane destroyed.

* Add a key in copy mode to toggle position indicator.

* Merge branch 'obsd-master' into master

* A menu must be shown on a client, so always give the client when adding the items. Also fix mode menus.

* Merge branch 'obsd-master' into master

* Add option to show arrows for active pane indicator, GitHub issue 3022 from Marcel Partap.

* Merge branch 'obsd-master' into master

* Mention that if-shell and #() use /bin/sh.

* Do not overflow width when not enough space.

* Merge branch 'obsd-master' into master

* Do not try to strdup NULL, from seL4 at disroot dot org in GitHub issue 3038.

* Merge branch 'obsd-master' into master

* Mention alternate config files, from Daniel Augusto in GitHub issue 3023.

* Ignore windows without a size set (may be used for pane only), from Anindya Mukherjee.

* Merge branch 'obsd-master' into master

* Try to turn on less-capable mouse modes when turning on more-capable, to increase the chances we get something even if the terminal doesn't support the one we really want. GitHub issue 3020.

* Merge branch 'obsd-master' into master

* Support underscore style with capture-pane -e, GitHub issue 2928.

* Merge branch 'obsd-master' into master

* ARM's Morello CHERI architecture does not support pointers in packed structures, so remove the packed attribute on struct grid_line and reorder the members to eliminate unnecessary padding. From Jessica Clarke in GitHub issue 3012.

* Merge branch 'obsd-master' into master

* Do not crash on a zero size character.

* Merge branch 'obsd-master' into master

* Make pane-border-format a pane option, GitHub issue 2999.

* Merge branch 'obsd-master' into master

* Merge branch 'obsd-master' into master

* Missed unlinked control notifications, GitHub issue 2996.

* Mention XParseColor(3) for the cursor colour escape sequence.

* Add a NOBLOCK flag rather than adding amount to wait for when dealing with potentially-long sequences. GitHub issue 3001.

* Merge branch 'obsd-master' into master

* Respond to OSC 4 query.

* sys/signal.h (or some master include) must happen before sys/proc.h, which is not standalone. This problem is being hidden by a sys/param.h which cannot be deleted yet.

* Use PATH_MAX (the standard name) rather than MAXPATHLEN (from BSD sys/param.h)

* Remove fallback for wcwidth failure, GitHub issue 3003.

* Fix g/G keys to be in line with copy mode.

* Do not dereference NULL window when resizing client, GitHub issue 2982.

* Bump response timer to three seconds, GitHub issue 2984.

* Fix user option lookup ordering.

* Leave the hardware cursor at the position of the selected line in choose modes and current editing position and at the command prompt. It is invisible but this is helpful for people using screen readers. GitHub issue 2970.

* If automatic-rename is off, allow the escape sequence to set an empty window name, GitHub issue 2964.

* If trimming menu item text, show key if it would take up less than a quarter of the space; from Alexis Hildebrandt.

* OS X -> macOS, from J Lewis Muir.

* Fix mandoc HTML rendering for command aliases

* Merge branch 'obsd-master' into master

* Add a cursor-style option, from Alexis Hildebrandt in GitHub issue 2960.

* Merge branch 'obsd-master' into master

* fatalx on unknown enum members in a couple of places, from Ben Boeckel.

* Merge branch 'obsd-master' into master

* Merge branch 'obsd-master' into master

* Add a cursor-colour option, from Alexis Hildebrandt in GitHub issue 2959.

* Fix a comparison, from Ben Boeckel, and a crash when opening completion menu, from Anindya Mukherjee.

* Spelling, from someone in GitHub issue 2958.

* Merge branch 'obsd-master' into master

* Do not force the cursor to move if it is in the automargin space at EOL and that is where we want it to be, GitHub issue 2956.

* Allow detach even if suspend flag set, GitHub issue 2932.

* Expand command as a format, GitHub issue 2920.

* Merge branch 'obsd-master' into master

* Accept some emacs control keys in vi normal mode, from Alexis Hildebrandt in GitHub issue 2922.

* Do not allow inline styles to replace mode-style for the selected item, from Alexis Hildebrandt in GitHub issue 2946.

* Merge branch 'obsd-master' into master

* Add a way to force a colour to RGB and a format to display it.

* Missing Pp, from Alexis Hildebrandt.

* Merge branch 'obsd-master' into master

* Add -s and -S to display-popup to set popup and border style, from Alexis Hildebrandt in GitHub issue 2931.

* Instead of setting the popup default colours in the draw callback, set it up in popup_display and follow the same routine as panes in the draw and init_ctx callbacks - use the palette if the option value is default. Allows application-set fg and bg to work in panes again.

* Merge branch 'obsd-master' into master

* For open/openat, if the flags parameter does not contain O_CREAT, the 3rd (variadic) mode_t parameter is irrelevant.  Many developers in the past have passed mode_t (0, 044, 0644, or such), which might lead future people to copy this broken idiom, and perhaps even believe this parameter has some meaning or implication or application. Delete them all. This comes out of a conversation where tb@ noticed that a strange (but intentional) pledge behaviour is to always knock-out high-bits from mode_t on a number of system calls as a safety factor, and his bewilderment that this appeared to be happening against valid modes (at least visually), but no sorry, they are all irrelevant junk.  They could all be 0xdeafbeef. ok millert

* Merge branch 'obsd-master' into master

* Remove key and trim text if menu cannot fit in available space, based on a change from Alexis Hildebrandt.

* Merge branch 'obsd-master' into master

* Correctly adjust the end pointer for a two character terminator before decoding OSC 52 response, from Daniel Ekloef in GitHub issue 2942.

* Show error if user option doesn't exist, GitHub issue 2938.

* Merge branch 'obsd-master' into master

* Remove a TODO comment.

* Add -T to set a popup title, from Alexis Hildebrandt in GitHub issue 2941.

* Merge branch 'obsd-master' into master

* Same as -N, don't send if 0 arguments and -R.

* Merge branch 'obsd-master' into master

* Fix menu width containing disabled items, from Alexis Hildebrandt in GitHub issue 2935.

* Spacing fixes from Alexis Hildebrandt.

* Remove duplicate options, spotted by Ricky Cintron.

* Merge branch 'obsd-master' into master

* Do not send any key if -N flag is given even if no other arguments, fixes problem with repeat in copy mode reported by tb@.

* Merge branch 'obsd-master' into master

* Add popup-border-lines option to set popup line style, from Alexis Hildebrandt, GitHub issue 2930.

* Merge branch 'obsd-master' into master

* When checking ranges in tty_cmd_cells, cannot use the tty cursor position and tty_cursor because it may be at the final invisible cursor position on automargin terminals. The text to be drawn is confined to the pane, so use the pane cursor position for the checks instead. Fix from Anindya Mukherjee, redraw problem reported by naddy@.

* Merge branch 'obsd-master' into master

* Add popup-style and popup-border-style options, from Alexis Hildebrandt in GitHub issue 2927.

* Merge branch 'obsd-master' into master

* Make positions hidden by overlays range-based rather than character-based, from Anindya Mukherjee.

* Merge branch 'obsd-master' into master

* Add -e flag to set environment for popup, from Alexis Hildebrandt in GitHub issue 2924.

* Merge branch 'obsd-master' into master

* remove extra .El;

* Merge branch 'obsd-master' into master

* Add tags for command aliases

* Merge branch 'obsd-master' into master

* Add a missing El, from Alexis Hildebrandt in GitHub issue 2918.

* Handle splitw -I correctly when used from an attached client, GitHub issue 2917.

* Merge branch 'obsd-master' into master

* Do not reset cursor to default if it has never been changed, fixes problem reported by naddy.

* Merge branch 'obsd-master' into master

* Fix some warnings.

* Merge branch 'obsd-master' into master

* Set mouse_x and mouse_y on the status line, GitHub issue 2913.

* Merge branch 'obsd-master' into master

* Make send-keys without any arguments send the key it is bound to (if any). GitHub issue 2904.

* Separate "very visible" flag from blinking flag, it should not affect DECSCUSR. GitHub issue 2891.

* Do not try to use NULL time values.

* Merge branch 'obsd-master' into master

* Do not call recalculate_sizes while clearing a client session because it needs to loop over the clients, instead do it after all clients are cleared. Fixes a crash reported by martijn@ when a session with multiple clients attached is destroyed, but there are other sessions so tmux does not entirely exit. ok deraadt

* Merge branch 'obsd-master' into master

* Fix command prompt with multiple prompts (add the result onto the list again as we go along). ok deraadt

* Remove duplicate.

* Crosscompiling defaults from  Romain Francoise.

* Update obsolete autoconf macros, from "kylo252" GitHub issue 2900.

* Merge branch 'obsd-master' into master

* Do not destroy sessions twice, GitHub issue 2889.

* Merge branch 'obsd-master' into master

* Fix run-shell -d with no command, GitHub issue 2885.

* Merge tag '3.3-rc'

* Next is 3.4.

* Missing header.

* 3.3-rc.

* Those were already there...

* And more CHANGES.

* Update CHANGES.

* Merge branch 'obsd-master' into master

* For the moment, restore if-shell and run-shell to parsing at the last moment (when the shell command completes) rather than when first invoked, GitHub issue 2872.

* Mention FAQ, from Illia Bobyr.

* Merge branch 'obsd-master' into master

* Do fatal/fatalx a different way so the compiler trick to avoid warnings becomes unnecessary, prompted by theo.

* Get rid of the last two warnings by turning them off around the problem statements, if the compiler supports it.

* Icons, from someone on GitHub in issue 2870.

* Merge branch 'obsd-master' into master

* Disable aliases inside aliases for the moment.

* Merge branch 'obsd-master' into master

* Keep -? as usage.

* Merge branch 'obsd-master' into master

* Turn on both button and all mouse modes for menus since some terminals only support the former.

* Merge branch 'obsd-master' into master

* Expand argument to run-shell again.

* Merge branch 'obsd-master' into master

* Fix parsing of aliases again (GitHub issue 2842), also make argument parsing a bit simpler and fix the names of some client flags.

* Merge branch 'obsd-master' into master

* Change copying arguments to that flags without arguments are inserted correctly and empty arguments lists do not crash. Fixes crash reported by & ok mpi@.

* Regress conf from https://raw.githubusercontent.com/lacygoill/config/master/.config/tmux/tmux.conf.

* Update CHANGES.

* Merge branch 'obsd-master' into master

* Replace %% in command lists (by copying them) for template arguments , this means they can be used with {} as well. Also make argument processing from an existing vector preserve commands. GitHub issue 2858.

* Allow control mode clients to set a hard limit on the window width and height, GitHub issue 2594.

* Merge branch 'obsd-master' into master

* Improve some logging.

* Ignore client creating session when working out size if it is a control client.

* Fix test.

* bind-key needs to allow commands for any argument for the moment.

* Merge branch 'obsd-master' into master

* Validate command argument types (string or command list) and give more useful error messages.

* setupterm needs char * not const char * on some platforms.

* Disable a couple of warnings on macOS.

* Fix up some printflike attributes.

* Start inputs as NULL so not freeing random stack garbage, GitHub issue 2852.

* Merge branch 'obsd-master' into master

* args_make_commands_now needs to take an extra reference to the returned command list since it will be freed already.

* Merge branch 'obsd-master' into master

* Move command argument parsing common functions and don't bother to parse again if given a command rather than a string.

* Key bindings steal a reference to the command instead of adding their own, it was correct not to add a reference when parsing, but the bind-key then needs to add one.

* Revert one of previous, for some reason it is being freed.

* Fix a few memory leaks.

* Limit width and height to tty correctly, GitHub issue 2843.

* Merge branch 'obsd-master' into master

* Fix style regress test.

* Fix handling of leading #s when working out width.

* Merge branch 'obsd-master' into master

* Do not double free expanded path in source-file, also remove some unnecessary assignments.

* Insert alias in the right place, GitHub issue 2842.

* Merge branch 'obsd-master' into master

* Free value properly.

* Preserve argument type in command and convert to string on demand.

* Merge branch 'obsd-master' into master

* Pass typed arguments out of the parser into the arguments list and let it convert them into strings.

* Use new syntax for default key bindings.

* Stop caring about empty commands, just treat as a null command.

* Merge branch 'obsd-master' into master

* Remove some members of struct cmd which are no longer used.

* Preserve command group when moving temporary list to current list being buit.

* Merge branch 'obsd-master' into master

* Rename a member to match what it will be in future.

* Add args parsing callback for some future work, currently unused.

* Wrap command argument definitions in their own struct.

* Merge branch 'obsd-master' into master

* A couple more spacing fixes.

* Spacing tweaks.

* Hide struct args behind a couple of accessor functions.

* Add a couple of const and fix some warnings.

* Remove some unnecessary blank lines.

* Merge branch 'obsd-master' into master

* Expose args_value struct (will be needed soon) and add some missing frees.

* Add a way to create an empty arguments set.

* Remove stray spaces after function names.

* Fill colour palette correctly from option for new panes, GitHub issue 2831.

* Regress fixes.

* Add zeraphel complex binding to regress.

* Merge branch 'obsd-master' into master

* Actually parse contents of {} as a command and then convert to a string instead of just copying arguments around as strings.

* Merge branch 'obsd-master' into master

* Update a regress conf for new syntax.

* Fix format test for new behaviour.

* Add a helper function for actually parsing the command.

* Merge branch 'obsd-master' into master

* Need to flatten arguments for aliases.

* Merge branch 'obsd-master' into master

* Push the conversion of {} to string up out of the parser and into the command builder.

* Merge branch 'obsd-master' into master

* Treat a pane that has died the same as no pane when sending data to control mode clients, GitHub issue 2828.

* Fix pipe-pane usage.

* Do not block with incremental command prompt.

* Merge branch 'obsd-master' into master

* Set the right session if detach-on-destroy is off.

* Merge branch 'obsd-master' into master

* calloc for confirm-before data since the item needs to start NULL.

* Merge branch 'obsd-master' into master

* Be more sophisticated about enabling synchronized updates when there is an overlay and treat it like the active pane (use for commands which move the cursor only). When there is an overlay also use it for all panes and not just the active pane. GitHub issue 2826.

* Revert previous; this is not how it should work.

* Start sync before drawing popup.

* Needs fcntl.h.

* Fuzzer needs some other bits it seems.

* Minor cleanups, GitHub issue 2824.

* Merge branch 'obsd-master' into master

* Some other missing palette NULL checks, from oss-fuzz.

* Merge branch 'obsd-master' into master

* Do not use NULL palette when clearing.

* Merge branch 'obsd-master' into master

* Missing argument specifier for -c.

* Merge branch 'obsd-master' into master

* Merge branch 'obsd-master' into master

* Tweak how mouse works on popup: only Meta alone resizes or moves, not Meta with other modifiers; button 2 on the left or top border opens menu, right or bottom resizes; button 1 on any border moves.

* Check callback needs to only return 0 (text should be suppressed) if menu returns 0, otherwise it should check the popup also.

* Fill in some other bits on new panes.

* Add menu options to convert a popup into a pane.

* Adjust overlay check callback before drawing data from pty.

* Add a menu when a popup is present (mouse only for now).

* Add -B flag to remove border from popup.

* Fix fuzzer wrapper.

* Break message type stuff out into its own header.

* Change focus to be driven by events rather than walking all panes at end of event loop, this way the ordering of in and out can be enforced. GitHub issue 2808.

* Set return code for confirm-before and make command-prompt also block, GitHub issue 2822.

* Merge branch 'obsd-master' into master

* Merge branch 'obsd-master' into master

* Make newline a style delimiter as well so they can cross multiple lines for readability.

* Now that styles can contain formats, they need to be expanded when inserted into the status line.

* Use COLOUR_DEFAULT not hardcoded 8.

* Evaluate styles with the pane variables.

* Merge branch 'obsd-master' into master

* Restore saved cursor position after a ZWJ rather than recalculating it.

* Merge branch 'obsd-master' into master

* Do not dereference pane when it is NULL, fixes a crash when creating a hook from the config, GitHub issue 2820.

* Move hook format setup earlier and add a hook_client, GitHub issue 2809.

* Merge branch 'obsd-master' into master

* Break the colour palette into a struct rather than just a single array and use that to support the OSC palette-setting sequences in popups. Also add a pane-colours array option to specify the defaults. GitHub issue 2815.

* Add pipe variants of the line copy commands. While here make the command list less unreadable. GitHub issue 2813.

* Merge branch 'obsd-master' into master

* Return to applying pane-border-style to the area outside panes, GitHub issue 2816.

* Merge branch 'obsd-master' into master

* Make confirm-before optionally block the invoking client like run-shell, GitHub issue 2819.

* OSC 52 can be long enough to make tmux think the output buffer is too big, so treat it as a redraw. GitHub issue 2814.

* Tweak comment about logs.

* Merge branch 'obsd-master' into master

* Change copy-line and copy-end-of-line not to cancel and add -and-cancel variants, like the other copy commands. GitHub issue 2799.

* Merge branch 'obsd-master' into master

* Add basic support for zero width joiners, GitHub issues 1605 and 2784.

* Add client focus hooks.

* Merge branch 'obsd-master' into master

* Another minor fix - do not draw positions that are under the popup with spaces, from Anindya Mukherjee. Also a typo fix from Linus Arver.

* Merge branch 'obsd-master' into master

* Tweak previous not to replace complete characters with spaces.

* Correctly draw wide characters that are partially obscured.

* Merge branch 'obsd-master' into master

* Do not freeze output in panes when a popup is open, let them continue to redraw. From Anindya Mukherjee .

* Merge branch 'obsd-master' into master

* Do not configure on macOS without the user making a choice about utf8proc.

* Add a client-active hook, from ncfavier in GitHub issue 2803.

* Merge branch 'obsd-master' into master

* Make window-linked and window-unlinked window options, GitHub issue 2790.

* Merge branch 'obsd-master' into master

* Do not add height twice when calculating popup_mouse_top, from M Kelly.

* Do not close popups on resize, instead adjust them to fit, from Anindya Mukherjee.

* Merge branch 'obsd-master' into master

* Need all of the TAILQ bits.

* Pick default-terminal from the first of tmux-256color, tmux, screen-256color, screen that is available on the build system.

* Move default value for TERM into tmux.h.

* Merge branch 'obsd-master' into master

* Give #() commands a one second grace period where the output is empty before telling the user they aren't doing anything. GitHub issue 2774.

* Merge branch 'obsd-master' into master

* Only use client for sizing when not detached, GitHub issue 2772.

* Merge branch 'obsd-master' into master

* Fix mouse_word format now word-separators has no space and position of menu if too close to the bottom.

* Merge branch 'obsd-master' into master

* Improve error reporting when the tmux /tmp directory cannot be created or used, GitHub issue 2765 from Uwe Kleine-Koenig.

* Forbid empty session names, GitHub issue 2758.

* Fix crosscompiling, Marco A L Barbosa.

* Merge branch 'obsd-master' into master

* Mention %1 under choose-tree also.

* Minor fixes to option descriptions.

* Pass Ctrl keys through as is when given as hex, GitHub issue 2724.

* Fix incorrect option name, from Gregory Pakosz.

* Once a day.

* fix some formatting errors;

* Tweak.

* Move lock.yml.

* Merge branch '3.2a'

* Update CHANGES.

* Update CHANGES.

* Do not clear region based on current cursor position, this is not necessary anymore and causes problems, GitHub issue 2735.

* Feature for the mouse since FreeBSD termcap does not have kmous.

* Fix rectangle selection, from Anindya Mukherjee, GitHub issue 2709.

* Bump FORMAT_LOOOP_LIMIT and add a log message when hit, GitHub issue 2715.

* Er, fix it properly.

* Fix <= operator.

* Do not use NULL client when source-file finishes, GitHub issue 2707.

* Do not expand the file given with -f so it can contain :s.

* Looks like evports on SunOS are broken also, disable them. GitHub issue 2702.

* Remove old shift function keys which interfere with xterm keys now. GitHub issue 2696.

* Fire check callback after cleaning up event so it does not get stuck, from Jeongho Jang in GitHub issue 2695.

* Fix warnings, from Jan Tache in GitHub issue 2692.

* Ctrl keys are < 0x7f, not Unicode.

* Move "special" keys into the Unicode PUA rather than making them high a top bit set, some compilers cannot handle enums that are larger than int. GitHub issue 2673.

* Change resize timers and flags into one timer and a queue to fix problems with vim when resized multiple times. GitHub issue 2677.

* Mention S- for Shift, GitHub issue 2683.

* Do not count client if no window.

* Three changes to fix problems with xterm in VT340 mode, reported by Thomas Sattler.

* Include current client in size calcultion for new sessions, GitHub issue 2662.

* Add an "always" value to the extended-keys option to always forward these keys to applications inside tmux.

* Minor CHANGES and tmux.1 fixed, from Daniel Hahler, GitHub issue 2664.

* Add another couple of keys needed for extended keys, GitHub issue 2658.

* Use = not ==, from Leonardo Taccari.

* back-to-indentation fixes, from Anindya Mukherjee.

* Fix display-menu -xR, from Alexis Hildebrandt.

* Apple have broken strtonum so check it works, from Teubel Gyorgy.

* Adjust latest client when a client detaches, GitHub issue 2657.

* Handle modifier 9 as Meta, GitHub issue 2647.

* Add crosscompiling fallbacks, from Hasso Tepper.

* %begin now has three arguments, not two. GitHubs issue 2646.

* Include modifiers when looking up an individual key.

* Change how extended ctrl keys are processed to fix C-S-Tab and C-;.

* 3.2a version.

* Update CHANGES.

* Do not clear region based on current cursor position, this is not necessary anymore and causes problems, GitHub issue 2735.

* Feature for the mouse since FreeBSD termcap does not have kmous.

* Fix rectangle selection, from Anindya Mukherjee, GitHub issue 2709.

* Bump FORMAT_LOOOP_LIMIT and add a log message when hit, GitHub issue 2715.

* Fix <= operator.

* More accurate vi(1) word navigation in copy mode and on the status line. This changes the meaning of the word-separators option - setting it to the empty string is equivalent to the previous behavior. From Will Noble in GitHub issue 2693.

* Do not use NULL client when source-file finishes, GitHub issue 2707.

* Add -F for command-prompt and use it to fix "Rename" on the window menu, GitHub issue 2699.

* Do not expand the file given with -f so it can contain :s.

* Remove old shift function keys which interfere with xterm keys now. GitHub issue 2696.

* Fire check callback after cleaning up event so it does not get stuck, from Jeongho Jang in GitHub issue 2695.

* Add different command historys for different types of prompts ("command", "search" etc). From Anindya Mukherjee.

* Fix warnings, from Jan Tache in GitHub issue 2692.

* Improve logging of screen mode changes.

* Move "special" keys into the Unicode PUA rather than making them top bit set, some compilers do not allow enums that are larger than int. GitHub issue 2673.

* Change cursor style handling so tmux understands which sequences contain blinking and sets the flag appropriately, means that it works whether cnorm disables blinking or not. GitHub issue 2682.

* Change resize timers and flags into one timer and a queue which is simpler and fixes problems with vim when resized multiple times. GitHub issue 2677.

* Do not count client (and crash) if no window.

* Three changes to fix problems with xterm in VT340 mode, reported by Thomas Sattler.

* Include current client in size calculation for new sessions, GitHub issue 2662.

* Add an "always" value to the extended-keys option to always forward these keys to applications inside tmux.

* back-to-indentation fixes, from Anindya Mukherjee.

* Fix display-menu -xR, from Alexis Hildebrandt.

* Adjust latest client when a client detaches, GitHub issue 2657.

* Add another couple of keys needed for extended keys, GitHub issue 2658.

* Fix empty format strings, from Jean-Philippe Menil.

* Do not clear region based on current cursor position, this is not necessary anymore and causes problems, GitHub issue 2735.

* Feature for the mouse since FreeBSD termcap does not have kmous.

* Fix rectangle selection, from Anindya Mukherjee, GitHub issue 2709.

* Bump FORMAT_LOOOP_LIMIT and add a log message when hit, GitHub issue 2715.

* Er, fix it properly.

* Fix <= operator.

* More accurate vi(1) word navigation in copy mode and on the status line. This changes the meaning of the word-separators option - setting it to the empty string is equivalent to the previous behavior. From Will Noble in GitHub issue 2693.

* Do not use NULL client when source-file finishes, GitHub issue 2707.

* Add -F for command-prompt and use it to fix "Rename" on the window menu, GitHub issue 2699.

* Do not expand the file given with -f so it can contain :s.

* Looks like evports on SunOS are broken also, disable them. GitHub issue 2702.

* Remove old shift function keys which interfere with xterm keys now. GitHub issue 2696.

* Fire check callback after cleaning up event so it does not get stuck, from Jeongho Jang in GitHub issue 2695.

* Add different command historys for different types of prompts ("command", "search" etc). From Anindya Mukherjee.

* Fix warnings, from Jan Tache in GitHub issue 2692.

* Improve logging of screen mode changes.

* Ctrl keys are < 0x7f, not Unicode.

* Move "special" keys into the Unicode PUA rather than making them high a top bit set, some compilers cannot handle enums that are larger than int. GitHub issue 2673.

* Change cursor style handling so tmux understands which sequences contain blinking and sets the flag appropriately, means that it works whether cnorm disables blinking or not. GitHub issue 2682.

* Change resize timers and flags into one timer and a queue to fix problems with vim when resized multiple times. GitHub issue 2677.

* Mention S- for Shift, GitHub issue 2683.

* Revert "Revert "Add crosscompiling fallbacks, from Hasso Tepper.""

* Do not count client if no window.

* Three changes to fix problems with xterm in VT340 mode, reported by Thomas Sattler.

* Include current client in size calcultion for new sessions, GitHub issue 2662.

* Add an "always" value to the extended-keys option to always forward these keys to applications inside tmux.

* Minor CHANGES and tmux.1 fixed, from Daniel Hahler, GitHub issue 2664.

* Add another couple of keys needed for extended keys, GitHub issue 2658.

* Use = not ==, from Leonardo Taccari.

* back-to-indentation fixes, from Anindya Mukherjee.

* Fix display-menu -xR, from Alexis Hildebrandt.

* Apple have broken strtonum so check it works, from Teubel Gyorgy.

* Adjust latest client when a client detaches, GitHub issue 2657.

* Revert "Add crosscompiling fallbacks, from Hasso Tepper."

* Handle modifier 9 as Meta, GitHub issue 2647.

* Merge branch 'obsd-master' into master

* Add crosscompiling fallbacks, from Hasso Tepper.

* %begin now has three arguments, not two. GitHubs issue 2646.

* Merge branch 'obsd-master' into master

* Include modifiers when looking up an individual key.

* Merge branch 'obsd-master' into master

* Change how extended ctrl keys are processed to fix C-S-Tab and C-;.

* Merge branch '3.2-rc'

* Move mode set/reset after sync so cursor doesn't flicker, from Avi Halachmi.

* Handle C-Tab correctly with extended keys, GitHub issue 2642.

* Merge branch 'obsd-master' into master

* Update CHANGES.

* Merge branch 'master' into 3.2-rc

* Move mode set/reset after sync so cursor doesn't flicker, from Avi Halachmi.

* Handle C-Tab correctly with extended keys, GitHub issue 2642.

* Merge branch 'obsd-master' into master

* Add a flag to disable keys to close a message, GitHub issue 2625.

* Merge branch 'obsd-master' into master

* Permit shortcut keys in buffer, client, tree modes to be configured with a format; the default remains the line number. GitHub issue 2636.

* Merge branch 'obsd-master' into master

* Change a type to fix a warning with some compilers.

* Merge branch 'obsd-master' into master

* Log the key written to the terminal as well as tmux's idea of what it is.

* Merge branch 'obsd-master' into master

* Restore previous behaviour so that C-X remains the same as C-x. Instead, translate incoming extended keys so that they are consistent.

* Merge branch 'obsd-master' into master

* Add a current_file format for the config file being parsed. Originally suggested by kn@, also GitHub issue 2638.

* When display-message used in config file, show the message after the config file finishes. GitHub issue 2637.

* Merge branch 'obsd-master' into master

* Fixes for extended keys: 1) allow C-x and C-X to be bound separately since some terminals report them differently 2) use the "backspace" option to translate backspace 3) map ctrl which are have the ctrl implied (such as C-x) properly when the terminal reports both the key and the modifier.

* Merge branch 'obsd-master' into master

* Move client-detached into server_client_lost so it is fired even if a client is closed unexpectedly.

* Merge branch 'obsd-master' into master

* Fix a couple of edge cases with the jump-back-xxx commands, and also update back-to-indentation to use grid_reader, thereby fixing line wrapping issues. From Anindya Mukherjee, GitHub issue 2633.

* Merge branch 'obsd-master' into master

* Change search-again with vi keys to work like actual vi(1), also some other fixes. From Aaron Jensen with help from Anindya Mukherjee.

* Missing commas, from Vipul Kumar.

* Merge branch 'obsd-master' into master

* Do not exit if cannot write to normal log file, GitHub issue 2630.

* Remove queue.h, from Simon Holesch.

* Merge branch 'obsd-master' into master

* Add client-detached notification in control mode, from Mohsin Kaleem.

* Merge branch 'obsd-master' into master

* Do not crash if there is no item to show command error, from Anindya Mukherjee.

* Merge branch 'obsd-master' into master

* Fix so tmux correctly sends the cvvis (cursor very visible) capability rather than sending it and then immediately undoing it with cnorm. Also turn it off when the cursor shape is changed like xterm.

* Merge branch 'master' into 3.2-rc

* malloc_trim is itself very poor and gets slower and slower as the heap becomes more fragmented. Run it only once an hour. GitHub issue 2551.

* Merge branch 'obsd-master' into master

* Tidy old jobs every hour instead of every 30 seconds.

* Add an "absolute-centre" alignment to use the centre of the total space instead of only the available space. From Magnus Gross in GitHub issue 2578.

* Add split-window -Z to start the pane zoomed, GitHub issue 2591.

* Merge branch 'obsd-master' into master

* Allow cursor to be just after match if copying, GitHub issue 2602.

* Merge branch 'obsd-master' into master

* Copy mode improvements from Anindya Mukherjee:

* Update version.

* Merge branch 'master' into 3.2-rc

* Remove compat.h again.

* 3.3.

* No sys/queue.h.

* Merge branch 'master' into 3.2-rc

* paths.h is compat.

* Merge branch 'master' into 3.2-rc

* Update CHANGES.

* Merge branch 'obsd-master' into master

* Do not use NULL active window; also do not leak window name. GitHub issue 2590 from Chester Liu.

* Drop support for popups where the content is provided directly to tmux (which does not have many practical uses) and only support running a program in the popup. display-popup is now simpler and can accept multiple arguments to avoid escaping problems (like the other commands).

* Merge branch 'obsd-master' into master

* Merge branch 'obsd-master' into master

* escape quotes and remove some unneccessary Pp; ok nicm

* Reinstate del_curterm ifdef bits.

* There is no need to call del_curterm in the server anymore.

* Add some text with examples of ; as a separator, GitHub issues 2522 and 2580.

* Merge branch 'obsd-master' into master

* Handle NULL term_type.

* Merge branch 'obsd-master' into master

* Check session, window, pane in the right order when working out format type.

* Merge branch 'obsd-master' into master

* Add a couple of format variables for active and last window index.

* Merge branch 'obsd-master' into master

* Correct client_prefix so it returns 1 if in prefix, not 0.

* Merge branch 'obsd-master' into master

* expand_paths needs the global environment to be set up, do that first.

* Merge branch 'obsd-master' into master

* Fix regex searching with wrapped lines, from Anindya Mukherjee; GitHub issue 2570.

* Move config file path expansion much earlier, keep the list of paths around rather than freeing later, and add a config_files format variable containing it. Suggested by kn@ a while back.

* Merge branch 'obsd-master' into master

* There are many format variables now so allocating all the default ones each time a tree is created is too expensive. Instead, convert them all into callbacks and put them in a static table so they only allocate on demand. The tree remains for the moment for extra (non-default) variables added by for example copy mode or popups. Also reduce expensive calls to localtime_r/strftime. GitHub issue 2253.

* Move jump commands to grid reader, make them UTF-8 aware, and tidy up, from Anindya Mukherjee.

* Merge branch 'obsd-master' into master

* Check return value of chdir() to stop a silly warning with some compilers, GitHub issue 2573.

* Merge branch 'obsd-master' into master

* Reduce len when moving past spaces in OSC 11 parameter.

* Merge branch 'obsd-master' into master

* Merge branch 'obsd-master' into master

* Move the call to setupterm() into the client and have it pass the results to the server over imsg, means the server does not need to enter ncurses or read terminfo db. Old clients will not work with a new server.

* Log missing keys when extended keys is on rather than fatal().

* In the end UTF-8 did not become a terminal feature, should not be listed in man page.

* Make SGR 6 (rapid blink) the same as SGR 5 (blink) and make SGR 21 to the same as SGR 4:2, it is an old alternative. GitHub issue 2567.

* OSC 11 test.

* Support X11 colour names and some other variations for OSC 10/11, also add OSC 110 and 111. GitHub issue 2567.

* Do not care about the server socket closing if exiting anyway.

* Add a couple of helper functions, and flush imsgs on exit.

* O_TRUNC is needed in case file exists.

* Move file handling protocol stuff all into file.c so it can be reused more easily.

* Restore utf8proc bits that went missing, GitHub issue 2564.

* Merge branch 'obsd-master' into master

* Use ~/.tmux.conf as an example rather than /etc/passwd, suggested by deraadt@.

* Merge branch 'obsd-master' into master

* Do not expand times and #() inside #().

* Merge branch 'obsd-master' into master

* Add "pipe" variants of the "copy-pipe" commands which do not copy, from Christian Zangl.

* Merge branch 'obsd-master' into master

* Include "focused" in client flags, from Dan Aloni in GitHub issue 2558.

* Merge branch 'obsd-master' into master

* In the end UTF-8 did not become a terminal feature, should not be listed in man page.

* Merge branch 'obsd-master' into master

* Send Unicode directional isolate characters around horizontal pane borders if the terminal support UTF-8 and an extension terminfo(5) capability "Bidi" is present. On terminals with BiDi support (ie, VTE) this seems to be enough to display right-to-left text acceptably enough to be usable (with some caveats about the mouse position). Requested by and with help from Mahmoud Elagdar in GitHub issue 2425.

* Add a -S flag to new-window to make it select the existing window if one with the given name already exists rather than failing with an error. Also add a format to check if a window or session name exists which allows the same with other commands. Requested by and discussed with kn@.

* Add compat clock_gettime for older macOS. GitHub issue 2555.

* Merge branch 'obsd-master' into master

* Redraw status line and borders on pane enable/disable, GitHub issue 2554.

* Merge branch 'obsd-master' into master

* Fix popup mouse position.

* Merge branch 'obsd-master' into master

* article fixes; from eddie youseph

* Merge branch 'obsd-master' into master

* Add a no-detached choice to detach-on-destroy which detaches only if there are no other detached sessions to switch to, from Sencer Selcuk in GitHub issue 2553.

* Merge branch 'obsd-master' into master

* Trim output overwritten by later text or clears completely rather than only in a few cases. This means we can better track when a line should wrap. GitHub issue 2537.

* Merge branch 'obsd-master' into master

* Flush pending output before entering or exiting alternate screen rather than leaking it, oss-fuzz issue 29959.

* Merge branch 'obsd-master' into master

* Always resize the original screen before copying when exiting the alternate screen, GitHub issue 2536.

* Merge branch 'obsd-master' into master

* Merge branch 'obsd-master' into master

* Revert clear changes to writing as they don't work properly, better change to come.

* Add rectangle-on and rectangle-off copy mode commands, GitHub isse 2546 from author at will dot party.

* Fix some cursor movement commands, from Anindya Mukherjee.

* Merge branch 'obsd-master' into master

* Change so that window_flags escapes # automatically which means configs will not have to change. A new format window_raw_flags contains the old unescaped version.

* Merge branch 'obsd-master' into master

* Merge branch 'obsd-master' into master

* Add -Wno-format-y2k.

* Hide some warnings on newer GCC versions, GitHUb issue 2525.

* Extra result message.

* There is no need to clear every line entirely before drawing to it, this means moving the cursor and messes up wrapping. Better to just clear the sections that aren't written over. GitHub issue 2537.

* PKG_CHECK_MODULES needs to be separate.

* Show config.log on failure.

* Revert "Set CFLAGS also."

* Set CFLAGS also.

* Fix yes/no for b64_ntop check.

* Merge branch 'obsd-master' into master

* Fix SEARCH_LIBS.

* +compat.h

* Look for libevent2 differently from libevent for platforms with both.

* Add -N flag to never start server even if command would normally do so, GitHub issue 2523.

* Merge branch 'obsd-master' into master

* Missed from last commit.

* Merge branch 'obsd-master' into master

* With incremental search, start empty and only repeat the previous search if the user tries to search again with an empty prompt. This matches emacs behaviour more closely.

* Merge branch 'obsd-master' into master

* Insert joined pane before the target pane with -b, like for split. From Takeshi Banse.

* Remove unused variable, from Ben Boeckel.

* Merge branch 'obsd-master' into master

* Add a variant of remain-on-exit that only keeps the pane if the program failed, GitHub issue 2513.

* Merge branch 'obsd-master' into master

* Add a -C flag to run-shell to use a tmux command rather than a shell command.

* Merge branch 'obsd-master' into master

* Use right format for session loop, GitHub issue 2519.

* Merge branch 'obsd-master' into master

* Do not list user options with show-hooks.

* Remove current match indicator which can't work anymore since we only search the visible region. From Anindya Mukherjee, GitHub issue 2508.

* Makefile.am: add grid-reader.c

* Merge branch 'obsd-master' into master

* Break cursor movement in grid into a common set of functions that can handle line wrapping and so on in one place and use them for the obvious copy mode commands. From Anindya Mukherjee.

* Merge branch 'obsd-master' into master

* Make synchronize-panes a pane option and add -U flag to set-option to unset an option on all panes. GitHub issue 2491 from Rostislav Nesin.

* Include compat.h after system headers, GitHub issue 2492.

* Merge branch 'obsd-master' into master

* Do not include the status line size when working out the character for the pane status line. GitHub issue 2493.

* Do not clear the wrapped flag on linefeeds if it is already set - this does not appear to be what applications want. GitHub issue 2478 and 2414.

* Merge branch 'obsd-master' into master

* Redraw any visible modes when status line changes so that formats like the pane title are updated. GitHub issue 2487. Also a man page fix from jmc.

* Merge branch 'obsd-master' into master

* Leave newlines inside multiline quotes.

* Merge branch 'obsd-master' into master

* Make replacement of ##s consistent when drawing formats, whether followed by [ or not. Add a flag (e) to the q: format modifier to double up #s and use it for the window_flags format variable so it doesn't end up escaping any following text. GitHub issue 2485.

* Merge branch 'obsd-master' into master

* Ignore running command when checking for no-hooks flag if it is blocked. GitHub issue 2483.

* Merge branch 'obsd-master' into master

* Fix check for vertical centre.

* Merge branch 'obsd-master' into master

* Add -N flag to display-panes to ignore keys, GitHub issue 2473.

* Update closefrom from OpenSSH for macOS code which is now needed.

* Update closefrom from OpenSSH for macOS code which is now needed.

* Merge branch 'obsd-master' into master

* Log missing keys when extended keys is on rather than fatal().

* Merge branch 'obsd-master'

* Allow previous-word to scroll onto the first line, noticed by Anindya Mukherjee.

* Scaffold for oss-fuzz, from Sergey Nizovtsev.

* Merge branch 'obsd-master'

* If mouse bits change, clear them all and set again to avoid problems with some bits implying others. GitHub issue 2458.

* Merge branch 'obsd-master'

* Change how escaping is processed for formats so that ## and # can be used in styles. Also add a 'w' format modifier for the width. From Chas J Owens IV in GitHub issue 2389.

* Add support for Haiku, from David Carlier. GitHub issue 2453.

* Remove some old debug logging.

* Merge branch 'obsd-master'

* Back to 3.3.

* Update to 3.2-rc3, bring in all the changes from master.

* Merge branch 'master' into 3.2-rc

* Expand menu and popup -x and -y as a format, from teo_paul1 at yahoo dot com in GitHub issue 2442.

* Merge branch 'obsd-master'

* Add numeric comparisons for formats, from teo_paul1 at yahoo dot com in GitHub issue 2442.

* Merge branch 'obsd-master'

* With csh, a tmux client gets SIGTERM before SIGCONT when killed with "kill %%", so when the client tells the server it got SIGCONT, don't use bits that may already have been freed when it got SIGTERM. Also don't print anything on exit if we get SIGTERM while suspended. Reported by Theo.

* Merge branch 'obsd-master'

* Update CHANGES.

* Do not allow disabled items to be selected.

* Limit range of repeat to avoid silly high numbers causing delays, from Sergey Nizovtsev.

* Do not leak path when freeing screen, from Sergey Nizovtsev.

* Merge branch 'obsd-master'

* Style trim test (currently failing).

* There is no reason not to fire focus events when a pane is in a mode, GitHub issue 2372.

* Add a -O flag to display-menu to change the mouse behaviour and not close the menu when the mouse is released, from teo_paul1 at yahoo dot com.

* Do not write after the end of the array and overwrite the stack when colon-separated SGR sequences contain empty arguments. Reported by Sergey Nizovtsev.

* Merge branch 'obsd-master'

* Do not write after the end of the array and overwrite the stack when colon-separated SGR sequences contain empty arguments. Reported by Sergey Nizovtsev.

* Do not require that there be no other clients before loading the config, being the first client is enough. GitHub issue 2438.

* Merge branch 'obsd-master'

* Set RGB flag if capabilities are present, GitHub issue 2418.

* Fix note for "previous-window" default key binding, from Sebastian Falbesoner.

* Client could be NULL in select-window (for example in .tmux.conf), do not set latest session if so. GitHub issue 2429 from Han Boetes.

* SIGQUIT handler needs to be cleared before fork like the others, reported by Simon Andersson.

* Do not require that there be no other clients before loading the config, being the first client is enough. GitHub issue 2438.

* Merge branch 'obsd-master'

* SIGQUIT handler needs to be cleared before fork like the others, reported by Simon Andersson.

* Merge branch 'obsd-master'

* Client could be NULL in select-window (for example in .tmux.conf), do not set latest session if so. GitHub issue 2429 from Han Boetes.

* Merge branch 'obsd-master'

* Fix note for "previous-window" default key binding, from Sebastian Falbesoner.

* Merge branch 'obsd-master'

* Set RGB flag if capabilities are present, GitHub issue 2418.

* Merge branch 'obsd-master'

* Escape ! in Ql

* Merge branch 'obsd-master'

* Add compat for getdtablesize, GitHub issue 2406.

* Allow fnmatch(3) wildcards in update-environment, GitHub issue 2397.

* Merge branch 'obsd-master'

* Fix a last minute change in previous.

* Add a state struct to store working state during format expansion instead of modiyfing the format tree.

* glibc's malloc is very bad about returning memory from the kernel, add a call to its malloc_trim to prompt it to do so. Reported by Sarunas Valaskevicius.

* Merge branch 'obsd-master'

* Trim "s from process names; also fix a default format in man page.

* Merge branch 'obsd-master'

* Tidy the resize code, merge some common bits and add some comments. From "Mike" in GitHub issue 2392.

* Use the setal capability as well as (tmux's) Setulc.

* Link to install wiki page.

* Correct break-pane default format, from Gregory Pakosz.

* Next version.

* Merge tag '3.2-rc' into master

* Fix some warnings, GitHub issue 2382.

* Old Terminal.app versions do not respond correctly to secondary DA, instead responding with the primary DA response. Ignore it. Reported by Dave Vandervies.

* Trim "s from process names, from Gregory Pakosz.

* Escape+Up and the other arrow keys should be kept as Escape+Up and not converted to M-Up. Do not give them the implied meta flag so they don't match the M-Up entry in the output key tree. Fixes problem with vi reported by jsing@.

* Check if UNIX 03 is needed for CMSG_DATA, for newer Solaris. From Eric N Vander Weele.

* Also pkg-config.

* Mention build dependencies, based on a change from Mateusz Urbanek.

* Trim "s from process names, from Gregory Pakosz.

* Check if UNIX 03 is needed for CMSG_DATA, for newer Solaris. From Eric N Vander Weele.

* Also pkg-config.

* Mention build dependencies, based on a change from Mateusz Urbanek.

* Merge branch 'obsd-master'

* Escape+Up and the other arrow keys should be kept as Escape+Up and not converted to M-Up. Do not give them the implied meta flag so they don't match the M-Up entry in the output key tree. Fixes problem with vi reported by jsing@.

* Merge branch 'obsd-master'

* Move a sentence to the right command.

* Merge branch 'obsd-master'

* Do not wrap at end of text when positioning at end of match because the length may include trailing spaces.

* Merge branch 'obsd-master'

* Resize screen to the correct size (borders need to be taken off).

* Fix warnings on some platforms with %llx and add a new message to handle 64-bit client flags.

* Merge branch 'obsd-master'

* Free buffer earlier to avoid confusing some compilers, GitHub issue 2382.

* Some other warnings, GitHub issue 2382.

* Merge branch 'obsd-master'

* Add -q flag to unbind-key to hide errors, GitHub issue 2381.

* Merge branch 'obsd-master'

* Fix some warnings, GitHub issue 2382.

* Merge branch 'obsd-master'

* Allow -N without a command to change or add a note to an existing key.

* Merge branch 'obsd-master'

* calloc cb data so the client is NULL.

* Hide warnings due to Apple's stupidity with __dead, reported by Kurtis Rader.

* Merge branch 'obsd-master'

* Do not free old session working directory until after expanding the new one because it may be needed.

* Merge branch 'obsd-master'

* Check started flag before looking for capability.

* Merge branch 'obsd-master'

* Add a -w flag to set- and load-buffer to send to clipboard using OSC 52. GitHub issue 2363.

* Merge branch 'obsd-master'

* Add -F to set-environment and source-file; GitHub issue 2359.

* Only print below number when there is enough space.

* Merge branch 'obsd-master'

* Add pane_last format, GitHub issue 2353.

* Merge branch 'obsd-master'

* Allow colour to be spelt as color, from Boris Verkhovsky. GitHub issue 2317.

* Merge branch 'obsd-master'

* Old Terminal.app versions do not respond correctly to secondary DA, instead responding with the primary DA response. Ignore it. Reported by Dave Vandervies.

* Do not run off end of string when stripping delays, reported by Dave Vandervies.

* Merge branch 'obsd-master'

* Add n: modifier to get length of a format, also automatically expand variable name arguments again if they contain a #{.

* Merge branch 'obsd-master'

* Set alert flag for the current window if the session is unattached. GitHub issues 1182 and 2299. From Eric Garver.

* Respond to colour requests if a colour is available, from Michal Goral.

* Merge branch 'obsd-master'

* Do not force line width to grid width because it may need to be larger to accomodate a wide character. GitHub issue 2336.

* Merge branch 'obsd-master'

* Change searching to behave more like emacs and so that regex searching doesn't overlap when searching forwards.

* Merge branch 'obsd-master'

* Also ignore SIGQUIT so it can't be used to kill the client when locked.

* Merge branch 'obsd-master'

* Trim newline from ctime, from Thomas Adam.

* Merge branch 'obsd-master'

* Add a -d option to display-message to set delay, from theonekeyg at gmail dot com in GitHub issue 2322.

* Merge branch 'obsd-master'

* 3.2-rc version.

* Add a hook when the pane title changed.

* Merge branch 'obsd-master'

* Check all lists if option not found already.

* Merge branch 'obsd-master'

* Correct checks for window borders.

* Merge branch 'obsd-master'

* Fix show-buffer when run from inside tmux, GitHub issue 2314.

* Merge branch 'obsd-master'

* Properly escape a backslash.

* Merge branch 'obsd-master'

* Renumber after killing windows for choose-tree.

* Merge branch 'obsd-master'

* Handle padding cells correctly when searching, GitHub issue 2301.

* Merge branch 'obsd-master'

* Do not dereference NULL environment variable value, GitHub issue 2304.

* Merge branch 'obsd-master'

* Clarify /tmp permissions and use, GitHub issue 2300.

* Update version.

* Pull 3.2-rc up to master.

* Merge branch 'obsd-master'

* Do not eliminate redundant clears, the code is wrong and doing it correctly wouldn't be worth it. GitHub issue 2298.

* Add a way for control mode clients to subscribe to a format and be notified of changes rather than having to poll. GitHub issue 2242.

* Merge branch 'obsd-master'

* Always send xterm-style keys for M-Left and M-Right. GitHub issue 2296.

* Merge branch 'obsd-master'

* kill-window -a cannot just walk the list of windows because if renumber-windows is on, the window it wants to keep could be moved. Change to renumber afterwards and also behave better if the window is linked into the session twice. GitHub issue 2287.

* Fix version.

* Merge branch '3.2-rc'

* Missing word, from annihilannic at hotmail dot com, GitHub issue 2288.

* Check if client is NULL before using it, GitHub issue 2295.

* Replace TAILQ concatenation loop with TAILQ_CONCAT

* Merge branch 'obsd-master'

* Missing word, from annihilannic at hotmail dot com, GitHub issue 2288.

* Check if client is NULL before using it, GitHub issue 2295.

* Merge branch 'obsd-master'

* Replace TAILQ concatenation loop with TAILQ_CONCAT

* Check for no pane border status line separately from top/bottom.

* Fix 0x Unicode character parsing, GitHub issue 2286.

* Silently ignore -a or -b if the window index doesn't exist and create using that index (this is how it used to work), reported by Romain Francoise.

* Merge branch 'obsd-master'

* Check for no pane border status line separately from top/bottom.

* Fix 0x Unicode character parsing, GitHub issue 2286.

* Merge branch 'obsd-master'

* Silently ignore -a or -b if the window index doesn't exist and create using that index (this is how it used to work), reported by Romain Francoise.

* Correctly redraw pane border bottom line when the status line is on and at the bottom, reported by Kaushal Modi.

* Use xvasprintf not vasprintf.

* Merge branch 'obsd-master'

* Correctly redraw pane border bottom line when the status line is on and at the bottom, reported by Kaushal Modi.

* Merge branch 'obsd-master'

* Use xvasprintf not vasprintf.

* 3.2-rc.

* Add to CHANGES.

* Add getline compat.

* Fix regress test for am.

* Merge branch 'obsd-master'

* The redraw callback could be fired with a NULL pane if it updates while in a mode, problem reported by Martin Vahlensieck.

* Add a flag to make a client wait for an empty line before exiting in control mode to avoid stray commands ending up in the shell.

* Merge branch 'obsd-master'

* d and D keys to reset to default in customize mode.

* Correctly move to previous line when looking for previous word, from Derry Jing.

* Merge branch 'obsd-master'

* Add -b flags to insert a window before (like the existing -a for after) to break-pane, move-window, new-window. GitHub issue 2261.

* Merge branch 'obsd-master'

* Do not wait on shutdown for commands started with run -b.

* Merge branch 'obsd-master'

* Check if a pane needs to be paused when output is written rather than just when it is queued.

* move-pane also defaults to marked pane now, reported by Ben Challenor.

* Fix quoting with newlines and single quotes.

* Merge branch 'obsd-master'

* Add some formats for search in copy mode (search_present, search_match). GitHub issue 2268.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Fix a crash when completing sessions, from Anindya Mukherjee.

* Add a -A option to pause a pane manually.

* Merge branch 'obsd-master'

* Instead of a buffer size limit on each pane, set a limit of 300 seconds of data for each client in control mode.

* Merge branch 'obsd-master'

* When the pause-after flag is set, send an alternative %extended-output form instead of %output with the age of the output.

* Merge branch 'obsd-master'

* Include width in error message.

* Merge branch 'obsd-master'

* It is not sensible to store pointers into an array we are going to realloc (duh), use two trees instead.

* Merge branch 'obsd-master'

* Use bitshifts instead of a union for encoding UTF-8 into 32 bits, which is more friendly to GCC3.

* Add to CHANGES.

* Merge branch 'obsd-master'

* Change how panes are resized so that the code is clearer and if the pane is resized multiple times during one event loop, it is forced to resize at the end. Also don't zoom/unzoom in switch-client if the pane hasn't changed. GitHub issue 2260.

* Merge branch 'obsd-master'

* Do not take the address of a potentially unaligned member.

* Fix various confusion about am vs xenl.

* Merge branch 'obsd-master'

* Now that we mostly only search visible text, the rate limit on repeating search does not seem to be necessary, remove it for the moment.

* Add support for pausing a pane when the output buffered for a control mode client gets too far behind. The pause-after flag with a time is set on the pane with refresh-client -f and a paused pane may be resumed with refresh-client -A. GitHub issue 2217.

* Merge branch 'obsd-master'

* Reset wrapped flag when clearing or moving lines, GitHub issue 2215.

* Search marks outside the visible text are not useful, so there is no point in allocating a big buffer to store them - just allocate the visible text size, and ignore any outside.

* Merge branch 'obsd-master'

* Some improvements to performance of searching:

* Merge branch 'obsd-master'

* A } can go on the same line as a command.

* Merge branch 'obsd-master'

* Update CHANGES.

* Shorten some long lines.

* Correct respawn-* - they don't always use the creation command.

* Make the -no-clear command variants not clear the search marks either.

* Merge branch 'obsd-master'

* Allow strings to span multiple lines - newlines and any leading whitespace are removed, as well as any following comments that couldn't be part of a format. This allows long formats or other strings to be annotated and indented.

* Instead of using a custom parse function to process {}, treat it as a set of statements and parse with yacc, then convert back to a string as the last step. This means the rules are consistent inside and outside {}, %if and friends work at the right time, and the final result isn't littered with unnecessary newlines.

* Merge branch 'obsd-master'

* Make paste -p the default for ], GitHub issue 2248.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Move the code to set up a padding cell into grid.c.

* Allow UTF-8 characters of width 0 to be stored, it is useful to be able to put padding cells in as width 0.

* Missing ; in previous.

* Fire copy-pipe command even if there is no text, means it works if it has side effects.

* Merge branch 'obsd-master'

* UTF-8 keys need to be big endian so the size bits are at the top.

* Merge branch 'obsd-master'

* Fail rather than fatal on UTF-8 width 0.

* Merge branch 'obsd-master'

* Use CLOCK_MONOTONIC for timer measurement and add a timestamp to control mode %output blocks.

* Remove blocks from queue when pane disappears.

* Check the right thing for maximum client buffer size.

* Change format callback to return value rather than storing it in the entry.

* Merge branch 'obsd-master'

* Try without cursor/keypad flags if a key doesn't exist, and limit ctrl key translation to ASCII keys. Fixes send-keys, GitHub issue 2247.

* Merge branch 'obsd-master'

* Instead of sending all data to control mode clients as fast as possible, add a limit of how much data will be sent to the client and try to use it for panes with some degree of fairness. GitHub issue 2217, with George Nachman.

* Merge branch 'obsd-master'

* Add -i to find-window to ignore case.

* utf8proc_unicode_version is too new.

* Merge branch 'obsd-master'

* Fix ASCII keys with send-keys -l.

* Merge branch 'obsd-master'

* Make padding cell a valid character.

* Merge branch 'obsd-master'

* Tweak some out of date bits, reported by bcgraham.

* Merge branch 'obsd-master'

* Return new character properly when converting to data.

* Apply -n when only one pane in the window.

* Remove leftover debug logging and fix comparison.

* Do not try to use the last marked pane if it is invalid.

* Pass the stdout file descriptor from the client as well as stdin and use them for control clients directly instead of passing everything via the client.

* Remove bad merge.

* Put the fix back for wcwidth() failing.

* Merge branch 'obsd-master'

* Set IUTF8 again when it exists.

* Use the internal representation for UTF-8 keys instead of wchar_t and drop some code only needed for that.

* Fix definition of padding cells so they are not extended cells.

* Tidy up new UTF-8 code and make it more generic.

* Fix some error strings, from Kris Katterjohn.

* Merge branch 'obsd-master'

* Make some data types consistent.

* Merge branch 'obsd-master'

* Do not attempt to divide by zero when working out copy position.

* Include title for the width of the menu.

* Merge branch 'obsd-master'

* Instead of storing all UTF-8 characters in the extended cell which means that 14 bytes are wasted for each character in the BMP, only store characters of three bytes or less in the cell itself and store others (outside the BMP or with combining characters) in a separate global tree. Can reduce grid memory use for heavy Unicode users by around 30%.

* Merge branch 'obsd-master'

* Remove leftover call to control_free_offsets and do not use for non-control clients.

* Merge branch 'obsd-master'

* Give control code its own state struct.

* Now the tty has a pointer back to the client there is no point (and a bit confusing) in it keeping a copy of the fd as well. Remove it.

* Merge branch 'obsd-master'

* Put headers back how they were.

* Maybe this is better.

* Think Solaris needs term.h here.

* And tweak again.

* Fix utf8proc version logging.

* Log ncurses and utf8proc versions.

* FocusIn keys can also update the latest client, like normal keys.

* xterm* can have focus too.

* Merge branch 'obsd-master'

* Move client offset stuff into control.c since only control clients will need it.

* spawn.c: fix up bad merge

* Merge branch 'obsd-master'

* Support code for control mode flow control: allow clients to have separate offsets (used and acknowleged) into the pane buffers; turn off reading from panes when no clients can accept the data; and add a -A flag to refresh-client to let clients turn receiving a pane on and off.

* Fix a regression test, size is not updated until end of event loop.

* Merge branch 'obsd-master'

* Fix a couple more places where the key flags need to be masked off.

* Merge branch 'obsd-master'

* Remove a redundant if statement.

* Key strings need to include the cursor and keypad flags now since the output key lookup expects them already set.

* Merge branch 'obsd-master'

* Add FreeBSD CI, from Jan Beich.

* Some other ctrl keys need to be translated with extended keys on.

* No paths.h.

* remove vis.h: portable doesn't need this

* Merge branch 'obsd-master'

* Move lazy resize from the pane to the window, there is no point in resizing the window unless it is the current window, and if we do and don't resize the pane until later there are problems if the size changes from A to B then back to A.

* On select-window, make this client the latest client for the window.

* Add a terminal feature for enable/disable extended keys (supported by xterm and mintty) and add an option to make tmux send it. Only forward extended keys if the application has requested them, even though we use the CSI u sequence and xterm uses CSI 27 ~ - this is what mintty does as well.

* Separate key flags and modifiers, log key flags, make the "xterm" flag more explicit and fix M- keys with a leading escape.

* Add an option to set the pane border lines style from a choice of single lines (ACS or UTF-8), double or heavy (UTF-8), simple (plain ASCII) or number (the pane numbers). Lines that won't work on a non-UTF-8 terminal are translated back into ACS when they are output.

* Add screen write flags instead of individual bits and fix line length calculation with padding.

* Add a client flag 'active-pane' which stores the active pane in the client and allows it to be changed independently from the real active pane stored in the window. This is can be used with session groups which allow an independent current window (although it would be nice to have a flag for this too and remove session groups). The client active pane is only really useful interactively, many things (hooks, window-style, zooming) still use the window active pane.

* Expand target from client and use it to expand the prompt.

* Move editor stuff to common code in popup.c.

* Add a mark in copy mode. Set with set-mark command (bound to 'X') by default and the mark and cursor position are swapped with 'jump-to-mark' (bound to M-x). The line containing the mark is shown in copy-mode-mark-style with the horizontal position in reverse.

* Add a -D flag to ask tmux not to daemonize, useful both for running a debugger (lldb does not have follow-fork-mode) and for running with a managed supervisor init system. GitHub issue 2190.

* Do not loop forever when search finds an empty match, GitHub issue 2203.

* Fix next-matching-bracket logic, from Chris Barber.

* Add a customize mode where keys and options may be browsed and changed, includes adding a brief description of each option. Bound to "C" by default.

* Support embedded styles in the display-message message, GitHub issue 2206.

* Store and restore cursor position when copy mode is resized, from Anindya Mukherjee.

* Allow a custom time format to be given to the t format modifier.

* Change message log to be per server rather than per client and include every command that is run.

* Add M-+ and M-- to expand and collapse all items in tree mode.

* Change the existing client flags for control mode to apply for any client, use the same mechanism for the read-only flag and add an ignore-size flag.

* Only redraw popup on the client it belongs to.

* Export TERM_PROGRAM and TERM_PROGRAM_VERSION like various other terminals.

* Add formats for after hook command arguments.

* Try to search the entire history first for up to 200 ms so a search count can be shown. If it takes too long, search the visible text only.

* Do not need to work out status line offset, we already have it.

* Use VIS_CSTYLE for paste buffers also.

* Do not hoke into struct window_pane from the tty code and instead set everything up in tty_ctx. Provide a way to initialize the tty_ctx from a callback and use it to let popups draw directly through input_parse in the same way as panes do, rather than forcing a full redraw on every change.

* Rename and tidy some stuff in struct tty_ctx.

* Add -e for new-session to set environment variables.

* Add 'e' key in buffer mode to open the buffer in an editor.

* Use formats for status-style and message-style.

* Complete partial window indexes properly.

* Add -W and -T flags to command-prompt to only complete a window and a target, also complete aliases.

* Copy mode search improvements:

* Improve command prompt completion:

* Drop having a separate type for style options and make them all strings, which allows formats to be expanded. Any styles without a '#{' are still validated when they are set but any with a '#{' are not. Formats are not expanded usefully in many cases yet, that will be changed later.

* Call format_defaults_window for panes as well.

* Use a grid cell not a style for the pane style.

* Instead of forbidding invalid session names, sanitize them like window names.

* Instead of having a default set of terminals in terminal-overrides that get XT added and using that as a marker for xterm(1)-like, assume that if the terminfo(5) entry already has XT or the clear capability starts with CSI then the terminal is VT100-like and it should be safe to send DA requests. The DA responses trigger additional features being added.

* Do not redraw or update mode if nothing has changed.

* Add feature and capabilities for focus reporting. Also document AX and XT even though they aren't tmux's, and add some bits for rxvt.

* Move terminal features into a single file.

* Build list of paths and weed out duplicates before loading configs, and add TMUX_SOCK like TMUX_PATH for the socket directory.

* Add extension terminfo(5) capabilities for margins.

* Response is iTerm2 not not ITerm2.

* Remove support for iTerm2's DSR 1337 extension and use the CSI > q extension now supported by a few different terminals.

* Add an attribute for ACS.

* Tweak the default choose modes formats:

* Move lazy resize from the pane to the window, there is no point in resizing the window unless it is the current window, and if we do and don't resize the pane until later there are problems if the size changes from A to B then back to A.

* If the application has not requested extended keys, then C-1 sends 1 not nothing.

* Need to update features after all the sequences come in.

* On select-window, make this client the latest client for the window.

* List needs to be sorted.

* XTerm not xterm.

* Er, misread this and it is not needed.

* Translate special CSI u keys on input.

* Get == and != the right way round.

* Only send XDA on 0.

* Fix default values for new escape sequences.

* Only forward extended keys if the application has requested them, even though we use the CSI u sequence and xterm uses CSI 27 ~ - this is what mintty does as well.

* Mask off flags bits in menu keys.

* Add a terminal feature for enable/disable extended keys (supported by xterm and mintty) and add an option to make tmux send it.

* C-M-S keys need the implied flag also.

* Stop at end of buffer.

* Send conventional \033 sequences for keys with just Meta even if they came in as an extended CSI u key sequence. It is much more useful for applications that don't understand CSI u to receive \033> for M-S-. rather than \033[62;3u.

* Send CSI u sequences for any keys that do not have a defined sequence already - this should only be similar sequences sent by the terminal outside tmux if enabled.

* Separate key flags and modifiers, log key flags, make the "xterm" flag more explicit and fix M- keys with a leading escape.

* Rename KEYC_ESCAPE to KEYC_META.

* Always set xterm flag.

* Recognise extended key sequences on input (both the forms xterm offers).

* xterm-keys has been on by default for 5 years and all other modern terminals use these key sequences by default. Merge the code into the main tty and input tree processing (convering the latter to use a tree rather than a table at the same time) and make the option a no-op.

* Draw outside correctly with pane numbers.

* Check if outside the window before checking if on the border so that cells that are outside in one direction but not the other are not given the wrong type.

* Add an option to set the pane border lines style from a choice of single lines (ACS or UTF-8), double or heavy (UTF-8), simple (plain ASCII) or number (the pane numbers). Lines that won't work on a non-UTF-8 terminal are translated back into ACS when they are output.

* Tweak CHANGES.

* Update CHANGES.

* Add screen write flags instead of individual bits and fix line length calculation with padding.

* Add a client flag 'active-pane' which stores the active pane in the client and allows it to be changed independently from the real active pane stored in the window. This is can be used with session groups which allow an independent current window (although it would be nice to have a flag for this too and remove session groups). The client active pane is only really useful interactively, many things (hooks, window-style, zooming) still use the window active pane.

* Expand target from client and use it to expand the prompt.

* Use safe loop for freeing client files.

* Add -Z to customize-mode binding.

* Tidy up border redrawing, fix some errors in how the window border connects with panes.

* Move editor stuff to common code in popup.c.

* Add a mark in copy mode. Set with set-mark command (bound to 'X') by default and the mark and cursor position are swapped with 'jump-to-mark' (bound to M-x). The line containing the mark is shown in copy-mode-mark-style with the horizontal position in reverse.

* Merge branch 'master' of github.com:tmux/tmux

* Merge branch 'obsd-master'

* Do not log NULL text.

* Show default key bindings in customize mode.

* Include key bindings in customize mode.

* Support embedded styles in the display-message message, GitHub issue 2206.

* Add to CHANGES.

* Fix comparison of tty name.

* Add a -D flag to ask tmux not to daemonize, useful both for running a debugger (lldb does not have follow-fork-mode) and for running with a managed supervisor init system. GitHub issue 2190.

* Do not loop forever when search finds an empty match, GitHub issue 2203.

* Fix next-matching-bracket logic, from Chris Barber.

* Initialize return code in case something mysterious happens.

* Wrap all lines in customize mode, not just the description.

* Remove unused variables.

* Fix some warnings, from Jan Polensky.

* Fix some customize mode drawing nits.

* Add a customize mode where options may be browsed and changed, includes adding a brief description of each option. Bound to "C" by default.

* imsg.h needs uio.h, pointed out by deraadt

* Allow a custom time format to be given to the t format modifier.

* Fix pretty time function to actually work and allow time format to be applied to any string that is suitable.

* Do not use client if NULL, from Thomas Adam.

* Update CHANGES.

* Change message log to be per server rather than per client and include every command that is run.

* Add M-+ and M-- to expand and collapse all items in tree mode.

* Change the existing client flags for control mode to apply for any client, use the same mechanism for the read-only flag and add an ignore-size flag.

* Remove an extra space in clients output.

* Wrap a line.

* pane_path is not #T, from Chris Rawnsley.

* Store and restore cursor position when copy mode is resized, from Anindya Mukherjee.

* Only redraw popup on the client it belongs to.

* Export TERM_PROGRAM and TERM_PROGRAM_VERSION like various other terminals.

* Add formats for after hook command arguments.

* Turn off cursor in menus again.

* Merge branch '3.1b-rc'

* Add to CHANGES.

* Try to search the entire history first for up to 200 ms so a search count can be shown. If it takes too long, search the visible text only.

* Use the cursor position not the current position when working out which marks are current.

* Need musl-gcc for static also.

* Add musl builds.

* Ugh, enable not with.

* Use termcap instead.

* Try w/o database.

* Better ncurses URL and some other fixes.

* Add build of everything.

* Add more stuff.

* Fix exclude.

* Add static build.

* Merge branch '3.1b-rc'

* Portable does not need sys/queue.h.

* Do not need to work out status line offset, we already have it.

* Clamping to area needs to use the offset without the status line, since that is where the window offsets are based.

* menu_mode_cb needs to return a screen also.

* Update CHANGES.

* Use VIS_CSTYLE for paste buffers also.

* Turn off overlay check when we know we are inside.

* Get the whole overlay screen not just the mode so cursor changes are included.

* Do not hoke into struct window_pane from the tty code and instead set everything up in tty_ctx. Provide a way to initialize the tty_ctx from a callback and use it to let popups draw directly through input_parse in the same way as panes do, rather than forcing a full redraw on every change.

* Rename tty_pane_full_width to tty_full_width.

* Move size to tty_ctx.

* Rename some tty_ctx members.

* Add -e for new-session.

* Solaris at least does not have _PATH_VI.

* Typo in man page.

* Add 'e' key in buffer mode to open the buffer in an editor.

* Merge branch 'obsd-master'

* Merge tag '3.1b'

* Do not remove the automatic-rename option from the global set, only from the window (it must stay in the global set or tmux will crash). GitHub issue 2188.

* Allow formats for message-style.

* Use format for status-style.

* Do not remove the automatic-rename option from the global set, only from the window (it must stay in the global set or tmux will crash). GitHub issue 2188.

* Complete partial window indexes properly.

* Add -W and -T flags to command-prompt to only complete a window and a target.

* Complete aliases as well as commands.

* Add to CHANGES.

* Copy mode search improvements:

* Handle cells outside any pane correctly.

* Did not mean to commit this bit.

* Close menu on backspace with TAB flag.

* Do not want -O0 by default.

* Update CHANGES.

* Improve command prompt completion:

* Remove an unnecessary comma.

* Need to redraw borders now when some things change. Also change default so that the active border colour is different in a mode or with synchronize-panes on.

* Apply format to pane status line also.

* Apply a format when redrawing pane borders.

* Start with style initialized to default.

* Drop having a separate type for style options and make them all strings, which allows formats to be expanded. Any styles without a '#{' are still validated when they are set but any with a '#{' are not. Formats are not expanded usefully in many cases yet, that will be changed later.

* Call format_defaults_window for panes as well.

* Use a grid cell not a style for the pane style.

* Add some additional format helper functions.

* Merge branch 'obsd-master'

* Merge branch '3.1a-rc'

* Update CHANGES.

* Do not close stdout file descriptor in control mode since it will be needed for printing the exit messages.

* Do not close the stdout file descriptor in control mode as it will be needed for printing the exit messages. Fixes a bug when detaching with iTerm2.

* Do not close stdout file descriptor in control mode since it will be needed for printing the exit messages.

* CUD is not a requirement and tweak some comments.

* Instead of forbidding invalid session names, sanitize them.

* Instead of having a default set of terminals in terminal-overrides that get XT added and using that as a marker for xterm(1)-like, assume that if the terminfo(5) entry already has XT or the clear capability starts with CSI then the terminal is VT100-like and it should be safe to send DA requests. The DA responses trigger additional features being added.

* rxvt needs XT also for the moment.

* Focus reporting no longer under XT.

* Do not update mode until actually drawing something.

* Do not redraw at all if nothing has changed.

* tmux 3.1.

* All of this stuff can be const.

* Add feature and capabilities for focus reporting. Also document AX and XT even though they aren't tmux's.

* Add a feature for bracketed paste.

* Add a feature for strikethrough.

* Move terminal features into a single file.

* Merge branch 'obsd-master'

*  ce examples of "Ar arg Ar arg" with "Ar arg arg" and stop the spread;

* Update CHANGES.

* Add TMUX_SOCK like TMUX_PATH for the socket directory.

* Build list of paths and weed out duplicates before loading configs.

* Add XDG_CONFIG home to the configuration search paths.

* time.h is needed.

* Add extension terminfo(5) capabilities for margins.

* Response is iTerm2 not not ITerm2.

* Merge branch 'obsd-master'

* Overrides need to be applied both before and after features in case they change flags used to detect a feature.

* Remove support for iTerm2's DSR 1337 extension and use the CSI > q extension now supported by a few different terminals.

* Merge branch 'obsd-master'

* Add an attribute for ACS.

* Fix a couple of memory leaks, one when creating a new pane and one when adding formats onto the queue item.

* Fix a couple of memory leaks, one when creating a new pane and one when adding formats onto the queue item.

* Tweak the default choose modes formats:

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Improve join-pane, move-pane and break-pane:

* Improve join-pane, move-pane and break-pane:

* Merge branch 'obsd-master'

* Indicate the marked pane in choose mode in reverse and add key to set and clear it (m and M) and a key to jump to the starting pane (H).

* Indicate the marked pane in choose mode in reverse and add key to set and clear it (m and M) and a key to jump to the starting pane (H).

* Add a session_marked format like window_marked.

* Merge branch 'obsd-master'

* Merge branch '3.1-rc'

* Update CHANGES.

* Update CHANGES.

* Nope, OS X kqueue is still broken...

* Call the event_init wrapper again.

* Merge branch 'obsd-master'

* Update the cursor position when deleting lines from screens without history, GitHub issue 2173.

* Update the cursor position when deleting lines from screens without history, GitHub issue 2173.

* Change so main-pane-width and height can be given as a percentage.

* Change so main-pane-width and height can be given as a percentage.

* Merge branch 'obsd-master'

* Move the background colour to clear with (if any) up as well as the data when scrolling, redraw problem reported by sthen@.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* 256 and RGB features can imply AX (for aixterm colours).

* 256 and RGB features can imply AX (for aixterm colours).

* Merge branch 'obsd-master'

* Turn off the block flag to reset the state or the cursor will not be moved back to the right place.

* Turn off the block flag to reset the state or the cursor will not be moved back to the right place.

* Do not clear client pane redraw flags until the redraw actually happens.

* Do not clear client pane redraw flags until the redraw actually happens.

* xterm* needs XT also.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Always start sync for output in panes that are not the active pane.

* Apply terminal-overrides after terminal detection, it always takes precedence.

* Change how sync works to always send the end sequence after all output is done when we are returning to the event loop (since we always move the cursor at that point). Also a man fix from jmc.

* Change the Sync capability to be a string instead of a flag.

* Tidy up the terminal detection and feature code and add named sets of terminal features, each of which are defined in one place and map to a builtin set of terminfo(5) capabilities. Features can be specified based on TERM with a new terminal-features option or with the -T flag when running tmux. tmux will also detect a few common terminals from the DA and DSR responses.

* Merge branch 'obsd-master'

* Also redraw panes which aren't pane 0. Problem reported by tb@.

* Merge branch 'obsd-master'

* Only trim blank lines when the source pane is not the target pane, otherwise the cursor moves which is a bit strange.

* Need to check for pane redrawing even if just the window flag is set (the pane flag may not have been previously set to avoid looping the windows).

* Merge branch 'obsd-master'

* The PANE_REDRAW flag bit might be needed by other panes so we can't clear it on the first redraw, and it can't be set when we are finished or they would be redrawn again, so if the redraw is deferred for a client, copy the redraw flag into a separate set of bits just for that client.

* Merge branch 'obsd-master'

* A resize can realloc so cannot cache the value of the list pointer.

* Merge branch 'obsd-master'

* Reset background colour on scrolled line.

* There is no point in keeping a bunch of different text buffers for each line when writing, we only need one as big as the line width - there can't be any more text than that since newer will overwrite older.

* Merge branch 'obsd-master'

* Use size_t not u_int for the bytes counters and fix a const missing.

* Merge branch 'obsd-master'

* Apple appear to have fixed kqueue in some OS X version (will wonder never cease!) so use it since it appears to be faster.

* Merge branch 'obsd-master'

* Use peek line function instead of hoking in the array directly.

* Bring back previons fix to only redraw panes that need it after a redraw is deferred, but clear the pane flags when they are actually redrawn rather than every time.

* Add formats for pane written/skipped bytes for debugging.

* Merge branch 'obsd-master'

* Only update mode when actually going to redraw something.

* Add a flag to protect against nested syncs and add some extra logging to redrawing.

* Revert previous, there is still a problem.

* When a redraw is deferred because the terminal hasn't finished reading the data from the last one, other panes could update while waiting, so we set the flag to redraw them all when the new redraw actually happened. But this means a lot of redrawing panes unnecessarily if they haven't changed - so instead set a flag to say "at least one pane needs to be redrawed" then look at the invidual pane flags to see which ones need it.

* Merge branch 'obsd-master'

* Set mode properly before and after redrawing, and don't bother calculating cursor position if it won't be used.

* Do not move the cursor to the existing y position if it is invalid, go home instead.

* Merge branch 'obsd-master'

* There is no point allocating a new item and putting it on the list when the whole line is cleared line, there is never any point in doing it more than once. Instead store the background colour alone.

* Merge branch 'obsd-master'

* Make sure the cursor position is still on screen after we have trimmed empty lines. Also improve some log messages.

* Merge branch 'obsd-master'

* Support the application escape sequence mintty (means tmux doesn't have to delay to wait for Escape).

* Merge branch 'obsd-master'

* Add a copy-command option and change copy-pipe and friends to pipe to it if used without arguments, allows all copy key bindings to be changed to pipe with one option.

* Merge branch 'obsd-master'

* Return to sending sync around clears.

* Do not need to set up a tty context for clearing lines now.

* Collect up line clears like text within the available data so we don't need to flush everything.

* Merge branch 'obsd-master'

* Log what caused a flush for better visibility on what could be improved.

* Start menu with top item selected if no mouse, GitHub issue 2169.

* Merge branch 'obsd-master'

* Only start and stop sync for operations like clear and scroll where there is a better chance more data will be on the way.

* Send secondary device attributes instead of primary which gives us a bit more useful information on some terminals.

* Merge branch 'obsd-master'

* Move the UTF-8 flag to terminal flags.

* Add a helper function to get the terminal flags.

* Add support for the iTerm2 sychronized updates escape sequence which drastically reduces flickering.

* Fix sys_signame check.

* Check for sys_signame.

* Merge branch 'obsd-master'

* Show signal name when process exits rather than number.

* Merge branch 'obsd-master'

* Don't miss the last line off the screen when writing after resize, from Anindya Mukherjee.

* Merge branch 'obsd-master'

* Clear the selection and repeat the search on refresh same as resize.

* Merge branch 'obsd-master'

* Instead of fixing with the cursor position when the copied screen is created, resize it and let the resize/reflow code fix it up and return it. Solves various problems with cursor position and resizing when in copy mode. With Anindya Mukherjee.

* Merge branch 'obsd-master'

* Use mode-style for selected items, like choose modes. GitHub issue 2166.

* Merge branch 'obsd-master'

* Use grid_empty_line rather than memset when adding new lines on resize. Also remove some old test code.

* Do not use the command if the kernel didn't return the full size.

* Merge branch 'obsd-master'

* Leave the cursor above empty lines.

* Adjust cursor and scroll positions when entering copy mode so that the cursor line is still visible even if the source and target panes are different heights.

* Merge branch 'obsd-master'

* Send keys when they are complete not before (!= vs ==).

* Merge branch 'obsd-master'

* Provide an accessor for the running queue item and use it to not let hooks recurse.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Missed a few warnings in previous.

* Make client -c and -t handling common in cmd-queue.c and try to be clearer about whether the client is the target client (must have a session) or not.

* Add helpers for the simple case of parse string and add to command queue.

* Merge branch 'obsd-master'

* When parsing strings, put all commands in one group even if there are newlines. This means that for example bind q { a \n b } and bind q "a ; b" are the same. Also log commands in different groups separated by ;; rather than ; (a command list like this should never be user visible).

* When adding a list of commands to the queue, instead of automatically creating a new state for each group of commands, require the caller to create one and use it for all the commands in the list. This means the current target works even with list with multiple groups (which can happen if they are defined with newlines).

* Merge branch 'obsd-master'

* Move cmdq_state into cmd-queue.c.

* Rename cmdq_shared to cmdq_state which will better reflect what it is (going to be) used for.

* Store a key event not a mouse event in the shared data.

* Move the NOHOOKS flag into the shared flags.

* Merge branch 'obsd-master'

* Also move cmdq_item and cmdq_list into cmd-queue.c (this is to make its use more clearly defined and preparation for some future work).

* Merge branch 'obsd-master'

* Make struct cmd local to cmd.c and move it out of tmux.h.

* Change so that the appropriate hooks for windows and panes belong to pane/window options rather than all being session options. This is useful for example to create a pane that is automatically closed on some condition. From Anindya Mukherjee.

* Print empty arguments properly.

* Mention RGB, pointed out by Jody Frankowski.

* Add a -f filter argument to the list commands like choose-tree.

* Add a -f filter argument to the list commands like choose-tree.

* Clarify a couple of style options.

* Remove unused define, also a man fix from jmc.

* Now that copy mode copies the pane content rather than keeping a reference to it, it isn't necessary that the pane in copy mode is the same as the one copying from. Add a -s flag to copy-mode to specify a different pane for the source content. This means it is possible to view two places in a pane's history at the same time in different panes, or copy from a pane's history into an editor or shell in the same pane.

* More style nits.

* Merge branch 'obsd-master'

* Fix history-bottom to use the right line when working out the length.

* Some minor style nits.

* Tweak how the default size is worked out so it is more obvious.

* A couple of other redundant checks/assignments.

* Do not try to use the client if the item containing it is NULL.

* Some more, and use of wp->window before wp NULL check in format.c.

* Some unnecessary assignments and unused variables.

* Pass correct flags to fnmatch.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Wait until the initial command sequence is done before sending a device attributes request and other bits that prompt a reply from the terminal. This means that stray relies are not left on the terminal if the command has attached and then immediately detached and tmux will not be around to receive them. Prompted by a problem report from espie@.

* Mention paste at same place as copy, suggested by John Boyle.

* Restore pane_current_path format from portable tmux, it is no longer used by default and is very useful.

* Pass the cmd item to format expansion so that mouse formats work.

* Merge branch 'obsd-master'

* Do not restore history flag if it was never set.

* Do not send mouse events if the program has not requested them.

* Limit size to 1x1 (total size 3x3).

* Merge branch 'obsd-master'

* Change copy mode to make copy of the pane history so it does not need to freeze updates (which does not play nicely with some applications, a longstanding problem) and will allow some other changes later. From Anindya Mukherjee.

* Merge branch '3.1-rc'

* job_run needs fewer arguments.

* Various fixes for copy mode from master.

* Check previous line rather than an extra line, from Anindya Mukherjee.

* Only search the visible part of the history when marking (highlighting) search terms, much faster than searching the whole history.

* Add a 10 second timeout to prevent searches taking too much time, from Anindya Mukherjee.

* Stop logging the entire command queue every time we add something, spotted by tb & sthen.

* Add an argument to list-commands to show only a single command.

* Use new window and new pane as well for -P to new-session or new-window.

* Merge branch 'obsd-master'

* Add an argument to list-commands to show only a single command.

* Use new window and new pane as well for -P to new-session or new-window.

* Stop logging the entire command queue every time we add something, spotted by tb & sthen.

* Check previous line rather than an extra line, from Anindya Mukherjee.

* Merge branch 'obsd-master'

* Only search the visible part of the history when marking (highlighting) search terms, much faster than searching the whole history.

* Merge branch 'obsd-master'

* Add a W position to display-menu -y to use the line above (or below) the status line containing the window list. Leave S meaning above (or below) all status lines. GitHub issue 2145.

* Merge branch 'obsd-master'

* Do not ignore triple-click and send to pane.

* Merge branch 'obsd-master'

* Add a 10 second timeout to prevent searches taking too much time, from Anindya Mukherjee.

* Merge branch '3.1-rc'

* 3.1-rc4.

* Do not go down the regex search path (which is expensive because we need to convert the grid data into a string for regexec and reverse it to find the grid position) if the search string does not contain any regex special characters.

* Use a comparison to check for wrap and avoid an expensive modulus.

* Performance improvements for regex searching, most notably:

* Add non-regex search variants to avoid the performance cost for people with large histories or long lines.

* Support mouse in popups.

* Merge branch 'obsd-master'

* Fix configure.ac.

* Merge branch '3.1-rc'

* Update CHANGES.

* Update CHANGES.

* Do not go down the regex search path (which is expensive because we need to convert the grid data into a string for regexec and reverse it to find the grid position) if the search string does not contain any regex special characters.

* Do not go down the regex search path (which is expensive because we need to convert the grid data into a string for regexec and reverse it to find the grid position) if the search string does not contain any regex special characters.

* Use a comparison to check for wrap and avoid an expensive modulus.

* Use a comparison to check for wrap and avoid an expensive modulus.

* Performance improvements for regex searching, most notably:

* Performance improvements for regex searching, most notably:

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Add a way to mark environment variables as "hidden" so they can be used by tmux but are not passed into the environment of new panes.

* Add a way to mark environment variables as "hidden" so they can be used by tmux but are not passed into the environment of new panes.

* Add a -T flag to resize-pane to trim lines below the cursor, moving lines out of the history. GitHub issue 2134.

* Add a -T flag to resize-pane to trim lines below the cursor, moving lines out of the history. GitHub issue 2134.

* Add non-regex search variants to avoid the performance cost for people with large histories or long lines.

* Add non-regex search variants to avoid the performance cost for people with large histories or long lines.

* Merge branch 'obsd-master'

* Add session_path from Chris Ruegge in GitHub issue 2142.

* Add session_path from Chris Ruegge in GitHub issue 2142.

* Add a "second click" key type which is fired for the second click of a double click, even if the timer hasn't expired to confirm it isn't actually a triple click. Provides a way for people who don't care about triple clicks or can make their commands have no side effects to avoid the double click timer delay.

* Add a "second click" key type which is fired for the second click of a double click, even if the timer hasn't expired to confirm it isn't actually a triple click. Provides a way for people who don't care about triple clicks or can make their commands have no side effects to avoid the double click timer delay.

* Merge branch 'obsd-master'

* Move alternate screen into the screen rather than the pane.

* Detach reply escape sequences from the pane so they work in popups.

* Merge branch 'obsd-master'

* Tweak key numbers to avoid some special keys crossing over with modifier bits.

* Add to rather than replace flags with -c.

* Tweak text.

* Add to CHANGES.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Do not check flags after the popup struct has been freed.

* Do not check flags after the popup struct has been freed.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Change default position for menu and popup to centre rather than top left.

* Change default position for menu and popup to centre rather than top left.

* Make two -E only close popup automatically if the command exited with 0.

* Make two -E only close popup automatically if the command exited with 0.

* Fix how popup height is calculated to take embedded newlines into account.

* Add formats for top paste buffer by default. Also a tmux.1 fix from jmc.

* Merge branch 'master' of github.com:tmux/tmux

* Merge branch 'obsd-master'

* Update capture-pane test, from Johannes Altmanninger.

* Add support for overlay popup boxes to show text or output temporarily above the normal layout. These work similarly to menus and are created with the display-popup command.

* Add support for overlay popup boxes to show text or output temporarily above the normal layout. These work similarly to menus and are created with the display-popup command.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* AIX colours are always stored as 90-97, not 100-107. From Johannes Altmanninger.

* Set end position correctly, GitHub issue 2129 from Anindya Mukherjee.

* Break code to convert an argument as a percentage into a common function.

* Preserve exit status from run-shell and pass to the client.

* Merge branch 'obsd-master'

* Fix select-word when not on a word, from Anindya Mukherjee.

* Merge branch 'obsd-master'

* Apply same menu items to view mode like copy mode.

* Similarly, disable zoom if only one pane.

* Put swap down back in the right place.

* Disable swap entries if nothing to swap with.

* Still want the per-mode menus outside copy mode.

* Oops, typo in key binding.

* Merge branch 'obsd-master'

* Make the mouse_word and mouse_line formats work in copy mode and enable the default pane menu in copy mode.

* Fix positioning of menu in choose modes and a couple of keys in tree mode.

* Merge branch 'obsd-master'

* select_word_end needs to forward no_reset flag or select-word selects too much.

* Merge branch 'obsd-master'

* Another fix to make other-end forget the selection mode, from Anindya Mukherjee.

* Merge branch 'obsd-master'

* Little bit of tidying.

* No util.h.

* Change input path so it doesn't require a pane.

* Merge branch 'obsd-master'

* Do not set the history flag if there is no history.

* Add a flag to run a background process in a pty as well, not used for anything yet.

* Add C position for terminal centre with display-menu -x and -y.

* Various fixes to copying with select-word and select-line, including making it consistent with keys and with the mouse, and using other-end. From Anindya Mukherjee.

* Merge branch 'obsd-master'

* Break position calculation into a helper function.

* 3.1-rc3.

* getopt is not required to set optarg to NULL when there is no argument and some do not, so set it explicitly each time.

* Merge branch 'obsd-master'

* Merge branch '3.1-rc'

* Turn off mouse mode 1003 as well as the rest when exiting.

* Fix C-Space key string.

* Terminate the output buffer for control mode output - it is now used as a string. GitHub issue 2114.

* Do not attempt to close a NULL pane when failing to create a new one.

* getopt varies too much between platforms, and we already use compat/getopt.c for Linux so just use it everywhere.

* getopt varies too much between platforms, and we already use compat/getopt.c for Linux so just use it everywhere.

* getopt is not required to set optarg to NULL when there is no argument and some do not, so set it explicitly each time.

* Merge branch 'obsd-master'

* Do not return early if no bits changed because may still need to change the style.

* Merge branch 'obsd-master'

* Ignore default-shell (and use /bin/sh) if it invalid not just if it is tmux itself, also refuse to set the option to something invalid in the first place. GitHub issue 2120.

* Merge branch 'obsd-master'

* Do not attempt to close a NULL pane when failing to create a new one.

* Merge branch 'obsd-master'

* Add couple of CHANGES tweaks.

* Add to CHANGES.

* Add.

* Adjust selection correctly when scrolling, from Anindya Mukherjee.

* Merge branch 'obsd-master'

* VTE treats each mouse mode bit as independent, so turning off 1000 doesn't also turn off 1001, so don't rely on that behaviour. GitHub issue 2116.

* Merge branch 'obsd-master'

* Turn off mouse mode 1003 as well as the rest when exiting.

* Terminate the output buffer for control mode output - it is now used as a string. GitHub issue 2114.

* FIx type for %u, from Thomas Adam.

* Merge branch 'obsd-master'

* Send mouse down event immediately rather than waiting for double click to finish which would now mean it was out of order. Reported by Mark Kelly.

* Merge branch 'obsd-master'

* Reset selection flag when clearing or stopping selection, from Mark Kelly.

* Fix C-Space key string.

* Merge branch 'obsd-master'

* Do not add a reference to the session if no session is present.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Tidy up the default mouse key bindings and:

* Add a -d flag to run-shell to wait for delay before running the command, also allow run-shell to accept no command to just delay.

* Add a copy-mode -H flag to hide the position marker in the top right.

* Change how double and triple clicks works so that one or the other is fired - a double click is no longer triggered on the way to a triple click.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Add C-g to cancel command prompt with vi(1) keys as well as emacs, and q in command mode.

* When the server socket is given by the user with -S, create it with umask 177 instead of 117 because it may not be in a safe directory like the default directory in /tmp. The user can chmod it more open after it is created if they want.

* Merge branch 'obsd-master'

* Start a new selection if outside the existing selection after a word has been selected. From Anindya Mukherjee.

* Only need one lm.

* Merge branch 'master' of github.com:tmux/tmux

* Merge branch 'obsd-master'

* Will need fmod.

* Lock much more quickly.

* Add some number operators for formats, from Tyler Culp.

* 3.2 next.

* Bump 3.1-rc up to master.

* Merge branch 'obsd-master'

* Use correct width of right marker so it doesn't draw over status right when more than one character. Reported by Tyler Culp.

* Merge branch 'obsd-master'

* Update latest client for target session on switch-client.

* Merge branch 'obsd-master'

* Use current session for cwd of new sessions, not the new session which doesn't have one yet. GitHub issue 2091.

* Change mouse selection so that after selecting a word, dragging selects only words and similar for lines. From Anindya Mukherjee.

* Update CHANGES.

* Merge branch 'obsd-master'

* Add selection_active format for when the selection is present but not moving with the cursor, from Mark Kelly.

* Merge branch 'obsd-master'

* A few fixes to make modifier keys and dragging work - need to remove the modifiers before checking for the dragging marker key, and apply them before looking up the end key. Also fix key-to-string with modifiers for special keys.

* Add GitHub.

* This site is too stupid.

* Add to FUNDING.yml.

* Merge branch 'obsd-master'

* Add -a to list-keys to also list keys without notes with -N, suggested by Shehu Dikko.

* Merge branch 'obsd-master'

* Fix top/bottom pane calculation with pane border status enabled, reported by Stanislav Spassov.

* Change lock.yml options.

* Add lock.yml file.

* Merge branch 'obsd-master'

* Do not jump to next word end if already on a word end when selecting a word. Fixes select-word with single character words and vi(1) keys. From Mark Kelly.

* Merge branch 'obsd-master'

* Remove unused variables from Ben Boeckel, and a Pp from jmc.

* Merge branch '3.1-rc'

* Remove duplicates, from Thomas Sattler.

* Merge branch '3.1-rc'

* Make list-keys description clearer in tmux.1 and remove an unused variable.

* Merge branch 'obsd-master'

* Make list-keys description clearer in tmux.1 and remove an unused variable.

* Merge branch '3.1-rc'

* Style nit in CHANGES.

* Next is 3.2.

* Merge branch '3.1-rc'

* Update CONTRIBUTING.md

* 3.1-rc.

* Remove a duplicate entry.

* Merge branch 'obsd-master'

* Instead of passing titles through vis() which doubles backslashes, just ignore any containing control characters or invalid UTF-8. GitHub issue 2070.

* Merge branch 'obsd-master'

* Remove bind-key -c which doesn't do anything and is undocumented.

* Merge branch 'obsd-master'

* Warn if a message type that is no longer used is received.

* Merge branch 'obsd-master'

* Do not send DA and DSR again if already have a response.

* Merge branch 'obsd-master'

* Remove extra Pp (from jmc) and add a missing word.

* Add to CHANGES.

* Merge branch 'obsd-master'

* If ALL clients are readonly, allow them to affect the size, suggested by Thomas Sattler.

* Ignore empty commands rather than adding them to the command list rather than trying to skip them later, fixes problem reported by M Kelly.

* Merge branch 'obsd-master'

* If we can identify the terminal as iTerm2 or as tmux, we can be sure they support 256 and RGB colours, so set those flags too.

* -V also needs to go in usage.

* Fix for version changes.

* Merge branch 'obsd-master'

* Add support for the iTerm2 DSR 1337 sequence to get the terminal version.

* Reduce a difference with portable tmux by adding the -V flag and #{version} format; on OpenBSD these just report the OpenBSD version.

* Set up working directory before killing the existing pane on respawn.

* Merge branch 'obsd-master'

* Add a define for flags meaning a client is not attached, and fix unattached counter, reported by Thomas Sattler.

* Merge branch 'obsd-master'

* Expand description of start-server.

* Add support for adding a note to a key binding (with bind-key -N) and use this to add descriptions to the default key bindings. A new -N flag to list-keys shows key bindings with notes rather than the default bind-key command used to create them. Change the default ? binding to use this to show a readable summary of keys.

* Change so that assignments may be specified alone - a command isn't required. GitHub issue 2062.

* Merge branch 'obsd-master'

* Use FNM_IGNORECASE if present, from Eric N Vander Weele in GitHub issue 2067.

* Mention swap-window -d, GitHub issue 2068.

* Add to CHANGES.

* Merge branch 'obsd-master'

* Stop handling DA and DSR after a second (they should be the first thing sent) so this should be plenty.

* Merge branch 'obsd-master'

* Be more specific in the DSR we are looking for so it doesn't get confused with mouse sequences. Also set a flag and don't bother checking for it if we have already seen it (same for DA), and don't check if we never asked for it.

* Treat plausible but invalid keys (like C-BSpace) as literal like any other unrecognised string passed to send-keys. Reported by Anthony Sottile in GitHub issue 2049.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Detect iTerm2 and enable DECSLRM.

* The terminal type was never as much use as I expected so remove it in favour of a couple of flags for the features used (DECSLRM and DECFRA). Also rename the flag for no xenl to be more obvious while here.

* Loop over all DA features, don't skip the first.

* Merge branch 'obsd-master'

* Do not hang in format_trim_* on invalid UTF-8 characters.

* Merge branch 'obsd-master'

* Add -Z to default switch-client command in tree mode, matches previous behaviour.

* Merge branch 'obsd-master'

* Common function to free key bindings.

* Merge branch 'obsd-master'

* Send errors to stdout in control mode so they don't get reordered with other output, reported by George Nachman in GitHub issue 2048.

* Merge branch 'obsd-master'

* Add ~ to quoted characters for %%%, reported by tb@.

* Merge branch 'obsd-master'

* Add CMD_FIND_DEFAULT_MARKED to join-pane like move-pane, from davidegirardi in GitHub issue 2046.

* Merge branch 'obsd-master'

* Document client exit messages.

* Fix format expansion in window names, reported by Suraj N Kurapati.

* Merge branch 'obsd-master'

* Do not let readonly clients limit the size, suggested by Max Barraclough in GitHub issue 2042.

* Merge branch 'obsd-master'

* Support regex search in copy mode, from Anindya Mukherjee in GitHub issue 2038.

* Merge branch 'obsd-master'

* Pass correct value into iterator callback for time formats.

* Merge branch 'obsd-master'

* Add a number of new formats to inspect what sessions and clients a window is present or active in. From Tyler Culp in GitHub issue 2034.

* Merge branch 'obsd-master'

* Fix name of option, GitHub issue 2030.

* Merge branch 'obsd-master'

* Restore source-file -q behaviour, broken in r1.42; OK nicm@

* Merge branch 'obsd-master'

* When adding a list with multiple commands to the queue, the next item to insert after needs to be the last one added, not the first. Reported by Jason Kim in GitHub issue 2023.

* Add back utempter code, reported by Peter Schellenbach.

* Merge branch 'obsd-master'

* Do not rely on errno after glob(3) fails.

* Merge branch 'obsd-master'

* Use the message that has already been built rather than the va_list.

* Define FNM_CASEFOLD to 0 for AIX, from Eric N Vander Weele.

* Remove imsg.h.

* Merge branch 'obsd-master'

* If /dev/fd/X is a symlink and realpath() expands symlinks, /dev/fd/X ends up pointing to the wrong place before it is passed to the client. The path is only used internally so there is no real need for realpath(), remove it and move the get_path function to file.c where all the callers are.

* Need to include message size in the maximum buffer calculation.

* Instead of using large buffers in imsgs, add the data or path onto the end.

* Add to CHANGES.

* Merge branch 'obsd-master'

* Show UTF-8 in choose-buffer mode. From KOIE Hidetaka.

* Merge branch 'obsd-master'

* Need to check in the error callback also.

* Do not spin waiting for exit, instead check in the write callback.

* Merge branch 'obsd-master'

* Do not crash in tree modes if the pane is only 1 in width, reported by KOIE Hidetaka in GitHub issue 2015.

* Add function to the right file.

* Merge branch 'obsd-master'

* Change source-file to use new file code which allows it to read from stdin.

* Do not check if client is dead if it is NULL.

* Rewrite the code for reading and writing files. Now, if the client is not attached, the server process asks it to open the file, similar to how works for stdin, stdout, stderr. This makes special files like /dev/fd/X work (used by some shells). stdin, stdout and stderr and control mode are now just special cases of the same mechanism. This will also make it easier to use for other commands that read files such as source-file.

* Merge branch 'obsd-master'

* Tweak previous to check the wrapped flag and stop if not set.

* Allow search across wrapped lines and fix some inconsistencies in how th position is represented, GitHub issue 2014 from Anindya Mukherjee.

* Merge branch 'obsd-master'

* Do not set cursor colour to default unless it has been changed, GitHub issue 2013.

* Add to CHANGES.

* Add ~/.config/tmux/tmux.conf to the default search path for configuration files (in Makefile.am, so portable tmux only).

* Merge branch 'obsd-master'

* Make TMUX_CONF a list of files and expand leading $FOO or ~.

* Check each _PATH_* define individually (Solaris has paths.h but not all of the defines). From Eric N Vander Weele.

* Merge branch 'obsd-master'

* Style nits in function arguments.

* Merge branch 'obsd-master'

* Remove client menu, I don't think it adds anything.

* Fix keys in CHANGES.

* Merge branch '3.0a-rc'

* Add to CHANGES.

* REG_STARTEND is not portable, but it turns out we don't actually need it. From Evan Green, GitHub issue 1982.

* Add to CHANGES.

* Merge branch 'obsd-master'

* Fix respawn-pane/window if default-command is set, reported by Janos Barbero.

* If a window appears in only one attached session, there is no point in worrying about which is the latest client (there is only one).

* Do not crash when a format doesn't exist, reported by Thomas Sattler.

* Merge branch 'obsd-master'

* Do not crash when a format doesn't exist, reported by Thomas Sattler.

* Revert "add missing definition"

* add missing definition

* Fix bad merge.

* Missing after-kill-pane option.

* Merge branch 'obsd-master'

* Missing after-kill-pane option.

* Parse out DA features.

* Long lines and spacing fixes.

* Add xrecallocarray.

* Bump the escape sequence timeout to five seconds to allow for longer legitimate sequences.

* Make a best effort to set xpixel and ypixel for each pane and add formats for them.

* Store xpixel/ypixel from TIOCGWINSZ and add formats.

* status-left and status-right need push-default also, reported by Eric Pruitt in GitHub issue 1989.

* Merge branch 'obsd-master'

* Merge branch '3.0-rc' into 3.0a-rc

* REG_STARTEND is not portable, but it turns out we don't actually need it. From Evan Green, GitHub issue 1982.

* 3.0a.

* Use a malloc'd buffer for lsk since commands can be very long, from Gregory Pakosz.

* Do not lazily use BUFSIZ for "I don't care what size" when building strings because it is only guaranteed to be 256 bytes and even the default 1024 is not always enough. Reported by Gregory Pakosz.

* Do not crash trying to fix layout size if only one cell, from Azat Khuzhin.

* Merge branch 'obsd-master'

* Add default # and * binding with vi(1) keys.

* Fixes to CHANGES.

* 3.0 version.

* Some old tmux versions can sometimes generate layout strings which have the incorrect size for the top cell. Previously tmux didn't care but now that panes can be partly hidden, the size matters and is checked more strictly. So add some code to fix up the most common problem and a sanity check to reject layouts with any other size problems. Reported by Aleksandrs Ledovskis in GitHub issue 1930.

* Merge branch 'obsd-master'

* Don't use motion flag uninitialized.

* Merge branch 'obsd-master'

* Fix a warning in previous.

* Do not clear search marks on cursor movement with vi(1) keys, from Eric Pruitt in GitHub issue 1985.

* Merge branch 'obsd-master'

* Add p format modifier for padding to width.

* Allow multiple substitutions in a single format.

* Merge branch 'obsd-master'

* Only substitute patterns starting with ^ once.

* Merge branch 'obsd-master'

* Do not check the client readonly flag when there is no client, GitHub issue 1980.

* Update CHANGES.

* Merge branch 'obsd-master'

* Add -f for full size to join-pane (like split-window), from Theo Buehler.

* Keep modifiers on backspace when translating it.

* Merge branch 'obsd-master'

* Do not add path if it is NULL, duh.

* Handle OSC 7 (a VTE extension) and put the result in a new format (pane_path).

* Merge branch 'obsd-master'

* Change window-size default from smallest to latest.

* Merge branch 'obsd-master'

* Fix parsing of DA with only one argument in the response and add 65 for VT520.

* Merge branch 'obsd-master'

* Change new-session -A without a session name (that is, no -s option also) to attach to the best existing session like attach-session rather than creating a new one.

* CUB and CUF are also limited by the margins so use CUP instead when margins are enabled (we already do this for linefeed).

* Add an option to set the key sent by backspace for those whose system uses ^H rather than ^?. GitHub issue 1969.

* Merge branch 'obsd-master'

* Add -F flag to send-keys to expand formats in search-backward and forward copy mode commands, this makes it easier to use the cursor_word and cursor_line formats. From Anindya Mukherjee in GitHub issue 1964.

* Merge branch 'obsd-master'

* Limit lazy resize to panes in attached sessions only - those in unattached are likely to have been resized by something like split-window where the user probably wants the resize to happen immediately. GitHub issue 1963.

* Merge branch 'obsd-master'

* Handle the various different forms of rgb colour strings.

* Create FUNDING.yml

* Merge branch 'obsd-master'

* Start with empty rather than NULL window name to avoid NULL printf if window_name is evaluated early. Reported by Mikolaj Kucharski.

* Merge branch 'obsd-master'

* Document Any key, from Jason Felice.

* Merge branch 'obsd-master'

* Use the existing code in format.c to add foramts for word and line at cursor position in copy mode, from Anindya Mukherjee.

* Merge branch 'obsd-master'

* Add formats for cursor and selection position in copy mode, from Jason Felice.

* Merge branch 'obsd-master'

* Do not crash trying to fix layout size if only one cell, from Azat Khuzhin.

* Merge branch 'obsd-master'

* Rewrite options_array_set to be clearer and remove a spurious warning with newer GCC. From Ben Boeckel.

* Add support for percentage sizes for resize-pane ("-x 10%"). Also change split-window and join-pane -l to accept similar percentages and deprecate -p. From Anindya Mukherjee.

* Merge branch 'obsd-master'

* Do not crash with pane_current_command if the pane is newly created and has no shell set, from Thomas Adam.

* Turn automatic-rename back on if the rename escape sequence is used with an empty name, GitHub issue 1921.

* Some old tmux versions can sometimes generate layout strings which have the incorrect size for the top cell. Previously tmux didn't care but now that panes can be partly hidden, the size matters and is checked more strictly. So add some code to fix up the most common problem and a sanity check to reject layouts with any other size problems. Reported by Aleksandrs Ledovskis in GitHub issue 1930.

* Memory leaks, from Igor Wong in GitHub issue 1934.

* Merge branch 'obsd-master'

* Fix respawn-pane/window if default-command is set, reported by Janos Barbero.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Use a malloc'd buffer for lsk since commands can be very long, from Gregory Pakosz.

* Do not lazily use BUFSIZ for "I don't care what size" when building strings because it is only guaranteed to be 256 bytes and even the default 1024 is not always enough. Reported by Gregory Pakosz.

* Merge branch 'obsd-master'

* Style and line length nits.

* Do not set uninitialized signal mask when creating an empty pane.

* Up and Down are already used, use < and > instead.

* Change menu key bindings to Up and Down and also close it on any mouse press if opened by key.

* Mouse formats don't work in copy mode so don't try to use them.

* Merge branch 'obsd-master'

* Some minor performance improvements - most notably, don't search the input state table if the next character matches the same state as before.

* Merge branch 'obsd-master'

* Couple of bits of minor cleanup.

* Mouse formats don't work in copy mode so don't try to use them.

* Make select-pane -P set window-active-style also to match previous behaviour, reported by Thomas Sattler.

* Merge branch 'obsd-master'

* Make select-pane -P set window-active-style also to match previous behaviour, reported by Thomas Sattler.

* Merge branch 'obsd-master'

* Use the correct size for new windows when window-size is latest, reported by Vamsi Krishna Avula in GitHub issue 1917.

* Merge branch 'obsd-master'

* Add a "latest" window-size option which tries to size windows based on the most recently used client. From Tommie Gannert in GitHub issue 1869 based on earlier changes from me.

* Do not use bright when emulating 256 colours on an 8 colour terminal because it is also bold on some terminals. GitHub issue 1914.

* Merge branch 'obsd-master'

* Up and Down are already used, use < and > instead.

* Merge branch 'obsd-master'

* Do not set uninitialized signal mask when creating an empty pane.

* Merge branch 'obsd-master'

* Change menu key bindings to Up and Down and also close it on any mouse press if opened by key.

* 3.0-rc5.

* These are in 3.0 now.

* Merge branch '3.0-rc'

* Add to CHANGES.

* Make client exit if pane where input is going is closed.

* Missing headers from compat/asprintf.c, from cyyever at outlook dot com.

* It is not longer necessary to double-escape ; in %%%, problem reported by Theo Buehler.

* Fix swap-window -d to work as intended, GitHub issue 1879 from Sam Stuewe.

* Remove check for same size - size has already been changed so this breaks reflow.

* In the right place.

* Add to CHANGES.

* Merge branch 'obsd-master'

* Add push-default and pop-default in styles to change the default colours and attributes and use them to restore the previous behaviour of window-status-style being the default for window-status-format in the status line. From John Drouhard in GitHub issue 1912.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Add window_marked_flag, GitHub issue 1887.

* Make client exit if pane where input is going is closed.

* Set up format tree for %if, GitHub issue 1896.

* Clarify server options slightly.

* Merge branch 'obsd-master'

* Add cursor-down-and-cancel, from Mark Kelly.

* Fix "make ctags", GitHub issue 1888.

* Missing headers from compat/asprintf.c, from cyyever at outlook dot com.

* Merge branch 'obsd-master'

* It is not longer necessary to double-escape ; in %%%, problem reported by Theo Buehler.

* Merge branch 'obsd-master'

* The resize event was never deciding to actually resize the pane if there was output in the pane faster than the timer would fire, so change how it works to only defer the timer again if the pane was actually resized within the last timer period. Reported by James Tai in GitHub issue 1880.

* Merge branch 'obsd-master'

* Fix swap-window -d to work as intended, GitHub issue 1879 from Sam Stuewe.

* Add support for the SD (scroll down) escape sequence, GitHub issue 1861.

* grid_view_delete_cells does need to clear, GitHub issue 1871.

* Merge branch 'obsd-master'

* Add a flag to reverse sort in the various choose modes, from Benjamin Poirier in GitHub issue 1875.

* Merge branch 'obsd-master'

* grid_view_delete_cells does need to clear, GitHub issue 1871.

* Merge branch 'obsd-master'

* Default to previous search string for search-forward and search-backward, from Leah Neukirchen.

* Add -Z flag to rotate-window, select-pane, swap-pane, switch-client to preserve zoomed state. GitHub issue 1839.

* Merge branch 'obsd-master'

* Add support for the SD (scroll down) escape sequence, GitHub issue 1861.

* Merge branch '3.0-rc'

* xterm 348 now disables margins when resized, so send DECLRMM again.

* Merge branch 'obsd-master'

* Correctly wrap search in copy mode even if at the very top left, GitHub issue 1845.

* Select the correct word for select-word when already at the start of a word, GitHub issue 1820.

* xterm 348 now disables margins when resized, so send DECLRMM again.

* Merge branch 'obsd-master'

* Add -N to capture-pane to preserve trailing spaces, from Leon Winter.

* Merge branch 'obsd-master'

* Remove check for same size - size has already been changed so this breaks reflow.

* Merge branch 'obsd-master'

* Reorder some text in the windows & panes section and add some better explanation of modes.

* Bump version again.

* Bump 3.0-rc up to master.

* Merge branch 'master' into 3.0-rc

* Merge branch 'obsd-master'

* Add to CHANGES.

* Change "lost server" message to "server exited unexpectedly", from Neal McBurnett in GitHub issue 1857.

* Merge branch 'obsd-master'

* Mark pane status line jobs with FORMAT_STATUS also so it redraws when they finish, GitHub issue 1852.

* Merge branch 'obsd-master'

* Add a few vi(1) key aliases, from D Ben Knoble.

* More man page fixes from lacygoill at lacygoill dot me, GitHub issue 1805.

* Merge branch 'obsd-master'

* Use the right client for if -b.

* Clear overlay on normal key press.

* cc, make, libevent, ncurses are dependencies for all builds so no need to list them for VCS build.

* Mention dependencies earlier.

* Merge branch 'obsd-master'

* Fix check for wrapping when redrawing entire lines, GitHub issue 1836.

* Merge branch 'obsd-master'

* Fix grid clear code to correctly clear with the default background colour rather than ending up with the used count higher than the total size, GitHub issue 1829.

* Merge branch 'obsd-master'

* Simplify code to work out if an extra line is needed in the cell.

* Make layout_fix_offsets take a window like layout_fix_panes.

* Merge branch 'obsd-master'

* The command item changes so can't keep getting the target out of it, need to use the one from the first item. Fixes crash reported by M Kelly.

* Merge branch 'obsd-master'

* Add -F to refresh-client to specify flags for control clients - one flag at the moment, no-output which turns off forwarding pane output. From Thomas Adam. GitHub issue 1834.

* Merge branch 'obsd-master'

* Add a -H flag to send-keys to send literal keys given as hex numbers (needed for control clients to send mouse sequences). Also add some format flags for UTF-8 and SGR mouse mode. Requested by Bradley Smith in GitHub issues 1832 and 1833.

* Merge branch 'obsd-master'

* Do not leak empty lines, GitHub issue 1824.

* Add j and k for navigation in menus, GitHub issue 1828.

* Merge branch 'obsd-master'

* Clear search marks before resize, GitHub issue 1823.

* Merge branch 'obsd-master'

* Use the clear history function for the 3J sequence rather than doing it manually.

* Merge branch 'obsd-master'

* Correctly adjust mouse position if the status line is at the top and more than one line. GitHub issue 1822.

* Correctly clear underscore colour in grid_get_cell1, also fix struct grid_cell to avoid padding. Fixes increased memory use reported by Suraj N Kurapati.

* Merge branch 'obsd-master'

* Do not use uninitialized buffer name.

* Merge branch 'obsd-master'

* Command prompt key presses need to avoid the command queue, GitHub issue 1817. Also a tmux.1 fix from jmc.

* Merge branch 'obsd-master'

* Add a "fill" style attribute to clear the entire format drawing area in a colour, GitHub issue 1815.

* Merge branch 'obsd-master'

* Do not double free window if pane fails to start.

* Merge branch 'obsd-master'

* When system calls indicate an error they return -1, not some arbitrary value < 0.  errno is only updated in this case.  Change all (most?) callers of syscalls to follow this better, and let's see if this strictness helps us in the future.

* Merge branch 'obsd-master'

* asprintf returns -1, not an arbitrary value < 0.  Also upon error the (very sloppy specification) leaves an undefined value in *ret, so it is wrong to inspect it, the error condition is enough. discussed a little with nicm, and then much more with millert until we were exasperated

* Merge branch 'obsd-master'

* minor eol issues;

* Merge branch 'obsd-master'

* Add support for underscore colours with Setulc capability, mostly from Kai Moschcau.

* Pass keys that aren't 0-9 on to normal key processing when display-panes is active (restores previous behaviour).

* Merge branch 'obsd-master'

* Fix a typo in window_pane_find_down (w not wp) and a missing PANE_STATUS_TOP.

* Pass keys that aren't 0-9 on to normal key processing when display-panes is active (restores previous behaviour).

* Merge branch 'obsd-master'

* Log window and pane resizes.

* Fix some comments (top/bottom not left/right).

* Add #define for the pane status line option position numbers.

* Merge branch 'obsd-master'

* Expand arguments to C and s format modifiers (matches m which already expands).

* Merge branch 'obsd-master'

* Trim trailing spaces when matching.

* Merge branch 'obsd-master'

* Do not always set scope for panes because the window check might fail, GitHub issue 1810.

* Merge branch 'obsd-master'

* Man page fixes from lacygoill at lacygoill dot me.

* Merge branch 'obsd-master'

* Add -r to find-window for regex instead of fnmatch.

* Merge branch 'obsd-master'

* Need to always check focus even if not current window.

* FIx return of options_scope_from_name on error.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Fix how regex substitution works with empty matches.

* Merge branch 'obsd-master'

* allow-rename and alternate-screen can be pane options.

* Still need to walk the options tree for user options.

* Add to CHANGES.

* Add a per-pane option set. Pane options inherit from window options (so there should be no change to existing behaviour) and are set and shown with set-option -p and show-options -p.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Add a helper function to work out option table from name.

* Add a -A flag to show-options to show parent options as well.

* Expand command formats in %if and move the config file loading later (to when the first client has identified) so all the client formats are available, fixes problems reported by Thomas Sattler.

* Use KERN_PROC_CWD on NetBSD, from Leonardo Taccari.

* Merge branch '3.0-rc'

* Handle comments more correctly inside {}, from Avi Halachmi.

* Add a config.

* Merge branch 'obsd-master'

* Handle comments more correctly inside {}, from Avi Halachmi.

* Add a cmdq_continue function rather than twiddling the flag directly.

* Merge branch 'obsd-master'

* Merge branch '3.0-rc'

* Remove a stray abort.

* Merge branch '3.0-rc'

* Remove cmd-list.c line in master.

* Merge branch '3.0-rc'

* Do not loop forever if a menu item contains invisible characters, reported by Thomas Sattler.

* Use the right format modifier when comparing, and remove a couple of unused variables.

* Merge branch 'obsd-master'

* Do not loop forever if a menu item contains invisible characters, reported by Thomas Sattler.

* 3.0-rc3.

* Merge branch '3.0-rc'

* #{ is no longer special.

* Add to CHANGES.

* Merge branch '3.0-rc'

* Do not crash if the environment variable is present but empty.

* Merge branch '3.0-rc'

* Use the right client when working out where to save or load the buffer, reported by kn@.

* A couple of minor parser changes around conditions: 1) only treat #{ specially after a condition, otherwise as a comment (which is more as most people expect) 2) allow formats to be quoted after a condition.

* Restore missing functions.

* Add a bit to {}.

* Merge branch 'obsd-master'

* Show filename with -v for source-file.

* A couple of minor parser changes around conditions: 1) only treat #{ specially after a condition, otherwise as a comment (which is more as most people expect) 2) allow formats to be quoted after a condition.

* Add a bit to {}.

* Merge branch '3.0-rc'

* Improve description of #{.

* Use the right client when working out where to save or load the buffer, reported by kn@.

* Do not crash if the environment variable is present but empty.

* tweak previous;

* Set the cursor x at the same time as changing the y or the end of line marker may not be redrawn.

* Add regular expression support for the format search, match and substitute modifiers.

* Merge branch 'obsd-master'

* Do not use $TMUX to find the session because for windows in multiple sessions it is wrong as often as it is right, and for windows in one session it is pointless. Instead check TMUX_PANE to find the pane and look for the MRU session as usual. GitHub issue 1793.

* Pass target on to new commands with if -F.

* Do not always resize the window back to its original size after applying a layout, let the normal window resize process do it. This means windows are not resized at all if window-size is manual, and are not resized multiple times if later attached to a different size terminal.

* Do not try to parse command when unsetting, GitHub issue 1788.

* Merge branch 'obsd-master'

* Update README.md

* Add to CHANGES.

* Do not resize panes unless they are in an attached, active window. From Morten M Neergaard in GitHub issue 1782.

* Merge branch 'obsd-master'

* Exiting alternate screen mode should restore cursor position and attributes even if already outside alternate screen mode. GitHub issue 1789.

* Merge branch 'obsd-master'

* Do not try to parse command when unsetting, GitHub issue 1788.

* Merge branch 'obsd-master'

* Do not load the config file if the server is exiting because it failed to start, otherwise commands like lsk which start the server again can end up looping infinitely. Also make the first client exit correctly. Problem reported by Wael M Nasreddine.

* Merge branch 'obsd-master'

* Merge branch '3.0-rc'

* Need to increment the argument to skip the prefix earlier, fixes repeated incremental search in copy mode, reported by Kaushal Modi in GitHub issue 1780.

* Merge branch 'obsd-master'

* Add a -v flag to source-file to show the commands and line numbers.

* Need to increment the argument to skip the prefix earlier, fixes repeated incremental search in copy mode, reported by Kaushal Modi in GitHub issue 1780.

* Merge branch '3.0-rc'

* RC2.

* If only one of -x or -y is given, use the calculated size for the other. Also fix some warnings. Pointed out by Ben Boeckel.

* Merge branch 'obsd-master'

* Add new-session -X and attach-session -x to send SIGHUP to parent when detaching (like detach-client -P). From Colin Watson in GitHub issue 1773.

* yacc(1) copies its union so it is not a good place to store TAILQ_HEADs. Allocate them instead. Found from a problem reported by sthen@.

* Merge branch 'obsd-master'

* yacc(1) copies its union so it is not a good place to store TAILQ_HEADs. Allocate them instead. Found from a problem reported by sthen@.

* Merge branch 'obsd-master'

* If only one of -x or -y is given, use the calculated size for the other. Pointed out by Ben Boeckel.

* Merge branch 'obsd-master'

* Move link.

* Mention CHANGES.

* Should be caps.

* Try this instead.

* Link to file.

* Need stdlib.h, from Ben Boeckel.

* Merge branch 'obsd-master'

* Add a crashing config.

* Fix warnings, from Ben Boeckel.

* Merge branch '3.0-rc'

* Allow % strings that are all numbers or %s, and fix a double free. Both reported by George Nachman, GitHub issues 1765 and 1766.

* Merge branch 'obsd-master'

* Allow % strings that are all numbers or %s, and fix a double free. Both reported by George Nachman, GitHub issues 1765 and 1766.

* Merge branch 'obsd-master'

* Remove a leftover abort and some fixes from cppcheck.

* Merge branch '3.0-rc'

* No longer need to reduce line number by one.

* Merge branch 'obsd-master'

* No longer need to reduce line number by one.

* Merge branch 'obsd-master'

* I had hoped that non-xenl terminals had died out, at least in fairly modern OSs, but no - DragonFly BSD's console returns to haunt us. Fix it at least somewhat. GitHub issue 1763.

* Add test for xenl terminals.

* Merge branch '3.0-rc'

* The line number needs to be updated only after the \n is processed by the parser, so store a flag and update it next time around. Also each new line needs its own shared data.

* Merge branch 'obsd-master'

* Use VIS_CSTYLE for the arguments and add the missing escapes it can generate to the parser.

* Merge branch '3.0-rc'

* Add command order test.

* The line number needs to be updated only after the \n is processed by the parser, so store a flag and update it next time around. Also each new line needs its own shared data.

* Update .travis.yml from master.

* Don't even need this?

* Tweak again.

* Try OS X.

* Merge branch 'obsd-master'

* Merge branch '3.0-rc'

* as -> and.

* Merge branch '3.0-rc'

* Tweak {} text.

* Support \ooo escapes, from Avi Halachmi.

* Merge branch '3.0-rc'

* Do not read past the end of the argument string if it is empty.

* Redraw status line if size changes, GitHub issue 1762. Also fix length of target buffer when pasting into status line.

* Merge branch 'obsd-master'

* Redraw status line if size changes, GitHub issue 1762. Also fix length of target buffer when pasting into status line.

* Do not read past the end of the argument string if it is empty.

* Next will be 3.1.

* 3.0-rc.

* Merge branch 'obsd-master'

* Tweak menu option.

* Add regress for conf files.

* Exit 1 correctly if source-file fails.

* Merge branch 'obsd-master'

* Allow source-file to take multiple arguments.

* Change the default right click pane to open the menu if not in a mode and no application mouse.

* Add key bindings to open the window and pane menus (C-m and M-m for now).

* Allow menu items to be disabled by putting a - at the start of their name, rather than just including #[dim] which still allowed them to be chosen.

* Merge branch 'obsd-master'

* Change display-menu from taking a single string to a set of arguments, which is much easier to work with. Based on a diff from Avi Halachmi.

* Merge branch 'obsd-master'

* Clarify newlines inside {} a little.

* Go less crazy with horizontal separators on default menus.

* Merge branch 'obsd-master'

* Add.

* Mention <><=>=.

* Add {}.

* Remove unused fparseln compat code.

* Fix crash when killing the current window, reported by Jesus Rafael Sanchez in GitHub issue 1760.

* Add an additional {} syntax for defining strings in the configuration file, making it much tidier to define commands that contain other tmux or shell commands (like if-shell). Also tweak bind-key to expect a string if it is only given one argument, so {} can be used with it as well. From Avi Halachmi.

* Merge branch 'obsd-master'

* Fix the intended ordering of items in buffer mode - it should not always be tag 0 when the tree is empty. GitHub issue 1759.

* Merge branch 'obsd-master'

* Add keys for new menu items.

* Always redraw overlay if it is on (so status line doesn't redraw over it).

* Do not accept choice unless mouse has actually moved before.

* Add formats for word and line under the mouse and use them to add some items to the pane menu.

* Merge branch 'obsd-master'

* Add a way to append or prepend to a format if the length has been limited.

* Merge branch 'obsd-master'

* Some other platforms doesn't support fmemopen(3) (not unexpectedly), so don't use it - since we only use getc/ungetc on the file anyway it is easy not to.

* Merge branch 'master' of github.com:ThomasAdam/tmux

* Merge branch 'obsd-master'

* Add <, >, <=, >= for formats, GitHub issue 1747.

* Client name can actually be NULL, so use address in that case.

* Use client name when logging command queue.

* Merge cmd_list_parse into cmd-parse.y so it can use the new alias processing code.

* Fix error handling in if-shell.

* Fix up regress test.

* Make cmd_log_argv take a printf-like format for the prefix.

* unbreak build, okay nicm@

* Merge branch 'obsd-master'

* Fix line numbers - commands are added after the line ends so they need to get line - 1.

* Use the same argument escaping code for options as well.

* Mention \.

* Environment variables can start with { also.

* Merge branch 'obsd-master'

* Fix drawing of status-right when it is aligned to the centre, GitHub issue 1754.

* Tweak text.

* CHANGES: remove note to packagers

* CHANGES: remove note to packagers

* Don't remove group items for group 0 (no group).

* Fix length calculation for pasting UTF-8 characters in the status line, GitHub issue 1753.

* CHANGES: mention yacc

* CHANGES: mention yacc

* Remove duplicate.

* Add yacc(1) bits.

* Break the argument escaping code into a separate function and use it to escape key bindings in list-keys. Also escape ~ and ; and $ properly.

* Merge branch 'obsd-master'

* Don't remove group items for group 0 (no group).

* Fix length calculation for pasting UTF-8 characters in the status line, GitHub issue 1753.

* Remove duplicate.

* configure.ac: add AC_PROC_YACC

* TRAVIS: add bison to build deps

* configure.ac: add AC_PROC_YACC

* TRAVIS: add bison to build deps

* Add yacc(1) bits.

* Merge branch 'obsd-master'

* Replace the split parser code (cfg.c and cmd-string.c) with a single parser using yacc(1). This is a major change but is clearer and simpler and allows some edge cases to be made more consistent, as well as tidying up how aliases are handled. It will also allow some further improvements later.

* Add a config.

* Merge branch 'obsd-master'

* Fix crash if window doesn't exist, GitHub issue 1751.

* Another config.

* Add a test config.

* Two more configs.

* Another.

* More configs

* More configs.

* Add another one.

* Merge branch 'obsd-master'

* Add a few test configs thanks to various people.

* Fix a couple of Ta from Alphonse Mariya.

* Merge branch 'obsd-master'

* Fix ordering of source-file with multiple files and add flags to load_cfg.

* Merge branch 'obsd-master'

* Replace the various identical error callbacks with a single one in cmd-queue.c.

* Add a helper to allocate a cmd_list.

* Merge branch 'obsd-master'

* Fix the color space parameter in RGB SGR, from Brad Town.

* README.md: mention TODO list on the tmux wiki

* Merge branch 'obsd-master'

* Move the single command flag (CMD_CONTROL) into the shared flags.

* Remove TODO, moving onto website.

* Add to CHANGES.

* Merge branch 'obsd-master'

* Change a couple of ACS characters to be more sensible and add a few missing ones, reported by Ricardo Banffy.

* Initialize default size variables, from Thomas Adam.

* Merge branch 'obsd-master'

* Mention CONTRIBUTING.

* Fix dragging when in view mode rather than copy mode, GitHub issue 1740 from Brad Town.

* Less headings.

* Kill tmux for logs.

* Merge branch 'obsd-master'

* Fix sizing of main-vertical and main-horizontal layouts, GitHub issue 1736.

* Merge branch 'obsd-master'

* Add support for overline (SGR 53), from Ricardo Banffy.

* Always include Lock in the menu.

* Merge branch 'obsd-master'

* Fix column width for copy mode commands.

* Clarify a little.

* Merge branch 'obsd-master'

* Oops, removed too much in last change.

* Fix some indentation and dead assignments.

* README.md: avaailable -> available

* Merge branch 'obsd-master'

* Spelling error.

* Tweak text of menu CHANGES entry.

* Scatter some `.

* Add simple menus to tree, client, buffer modes.

* Merge branch 'obsd-master'

* Remove menu_create_from_items, I thought I would use it for some later work but I don't need it.

* Merge branch 'obsd-master'

* Mention -vv.

* New ISSUE_TEMPLATE from Nicolas CARPi.

* Formatted README.md, from Nicolas CARPi.

* Another tweak.

* Update CONTRIBUTING.md, mostly from Nicolas CARPi.

* Tweaks to README, some from me, some from Nicolas CARPi.

* Add to CHANGES.

* Don't use arguments with It and -enum, pointed out by jmc.

* Do not reduce window height by status line height for control mode clients, from George Nachman.

* Update CHANGES

* Merge branch 'obsd-master'

* Fix a typo in previous (, -> :).

* Add support for simple menus usable with mouse or keyboard. New command display-menu shows a menu (bound to the mouse on status line by default) and a couple of extra formats for the default menus.

* Merge branch 'obsd-master'

* Add a function to draw a simple menu onto a screen.

* Merge branch 'obsd-master'

* Save mouse buttons as well as position.

* Merge branch 'obsd-master'

* send-keys also needs to insert key commands in the right order.

* Merge branch 'obsd-master'

* Change swap-window -d to be the other way round (stay with src window), so it works like swap-pane.

* Add formats to show if pane is the marked pane and if any marked pane is set.

* Merge branch 'obsd-master'

* Add a flag to redraw only the overlay, and remove the overlay on resize.

* Adjust how mouse targets are found so they always have a session, window and pane.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Move around the display-panes identify code to make it a bit more generic and hide the display-panes specific bits into cmd-display-panes.c.

* Adjust the same bit to adjust the selection for history-top and history-bottom as for cursor-up and cursor-down. GitHub issue 1723.

* Merge branch 'obsd-master'

* Rename the ENVIRONMENT section which was squatting on the standard manual page section and create a new ENVIRONMENT with the expected content.  Move some information that was misplaced below the -u flag into that new section. Feedback and OK nicm@ jmc@ tb@

* Merge branch 'obsd-master'

* Treat keys in identify mode (display-panes) specially and handle them immediately rather than queuing them (the command can block the queue which means they were not being seen until it finished which was too late). Reported by denis@ and solene@, ok solene@.

* Do not use evbuffer_add_buffer because it is destructive and doesn't work in newer libevent.

* -attr -> -style.

* Merge branch 'obsd-master'

* Fix order of insertion in load_cfg.

* Allow panes to be empty (no command), output can be piped to them with split-window or display-message -I.

* Merge branch 'obsd-master'

* Insert after the right element on queue.

* Do not store the mouse position we calculate as the start of a drag back into the mouse event that later code uses, it has been adjusted and they should use the original position. GitHub issue 1710.

* Merge branch 'obsd-master'

* Use the right index for user-keys.

* Fix mouse positioning when the pane is not entirely visible.

* Sync up some tmux.1 bits.

* Merge branch 'obsd-master'

* Correct ordering when adding after an existing item.

* Instead of processing keys all together, put them up on the client command queue so they are ordered correctly with the commands that they execute.

* Fix reverse attribute in status line, GitHub issue 1709.

* Fix up some bits about window-size that seem to have got lost.

* Merge branch 'obsd-master'

* Merge tag '2.9a'

* Add to CHANGES.

* Version 2.9a.

* Do not loop forever if there is a nonprintable character in the format.

* Don't redraw control clients, from George Nachman.

* Unbreak main-vertical and main-horizontal layouts.

* Remove unused variable from Thomas Adam.

* Merge branch 'obsd-master'

* Fix user options after show-hooks merge, GitHub issue 1704.

* Simple -C sanity test.

* Merge branch 'obsd-master'

* Don't redraw control clients, from George Nachman.

* Fix memory leak in window tree search, from Amos Bird.

* Don't think I will do this.

* Add to CHANGES & remove from TODO.

* Merge branch 'obsd-master'

* Add support for keys to jump between matching brackets - C-M-f and C-M-b in emacs, % in vi. Suggested by and help from Chris Barber in GitHub issue 1666.

* Merge branch 'obsd-master'

* Fix gseq use in RGB colour script.

* Support multiple occurances of the same argument. Use this for a new flag -e to new-window, split-window, respawn-window, respawn-pane to pass environment variables into the newly created process. From Steffen Christgau in GitHub issue 1697.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Update CHANGES and TODO.

* Merge hooks into options and make each one an array option. This allows multiple commands to be easily bound to one hook. set-hook and show-hooks remain but they are now variants of set-option and show-options. show-options now has a -H flag to show hooks (by default they are not shown).

* Destroy panes before options to avoid crash when forced into a mode by a hook.

* Unbreak main-vertical and main-horizontal layouts.

* Merge branch 'obsd-master'

* options_array_item_value cannot return NULL.

* Need a fallback for -2 for aixterm colours.

* Make options_tostring allocate its result instead of using a stack buffer (needed for something in the future).

* Merge branch 'obsd-master'

* Need to escape ].

* Update CHANGES.

* Merge branch 'obsd-master'

* Automatically scroll if dragging to create a selection with the mouse and the cursor reaches the top or bottom line.

* Merge branch '2.9-rc'

* 2.9 now.

* Do not loop forever if there is a nonprintable character in the format.

* Merge branch 'obsd-master'

* Use bg not fg when adjusting for aixterm, from Ailin Nemui.

* Do not loop forever if there is a nonprintable character in the format.

* Merge branch 'obsd-master'

* Somehow missed these bits in last commit.

* Indicate an array option with a flag rather than a special type so that in future will not have to be strings.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Add -no-clear variants of copy-selection and copy-pipe which do not clear the selection after copying. Make copy-pipe clear the selection by default to be consistent with copy-selection. From Avi Halachmi.

* Do not try to resize if the parent cell is NULL, problem reported by Sunil Nimmagadda.

* Merge branch '2.9-rc'

* Update CHANGES for 2.9.

* Update CHANGES.

* Remove duplicate entry.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Copy the code to infer the option type to show-options and document it.

* Pass target client and session to load_cfg from source-file so formats work. Reported by Thomas Sattler.

* Update session activity on focus event, from tafryn at gmail dot com.

* mark up punctuation-as-macro-args properly;

* Fix minimum size check on split and size of first cell on spread out with a pane status line.

* Rewrite main-vertical and horizontal to use the common spread out code and to handle the case where the panes won't fit into the existing window size.

* Set the window size as well as the layout size when using the preset layouts.

* Do not let the size of the pane status screen go negative.

* Document that switch-client can change all of session,window,pane and check for % in the target as well as ":.".

* Break new window and pane creation common code from various commands and window.c into a separate file spawn.c.

* Add to TODO.

* Current window style also needs to be tested for default.

* Merge a number of fixes from master for layouts, mostly prompted by testing by Thomas Sattler.

* Warning fixes from Carlo Marcelo Arenas Bel√≥n.

* Fix minimum size check on split and size of first cell on spread out with a pane status line.

* Use the right winlink pointer in new-window.

* Remove unused variable.

* Add PATH_DEFPATH to compat.h from Carlo Marcelo Arenas Bel√≥n.

* Do not let the size of the pane status screen go negative.

* Rewrite main-vertical and horizontal to use the common spread out code and to handle the case where the panes won't fit into the existing window size.

* Set the window size as well as the layout size when using the preset layouts and calculate the sizes correctly.

* Solaris has no paths.h.

* Merge branch 'obsd-master'

* select-word was missing from the command list, from pawel-slowik.

* Document that switch-client can change all of session,window,pane and check for % in the target as well as ":.".

* Merge branch 'obsd-master'

* Current window style also needs to be tested for default.

* Linux:  remove include for util.h

* Do not log NULL command.

* Forgot to add the file.

* Break new window and pane creation common code from various commands and window.c into a separate file spawn.c.

* Remove from TODO one thing that I don't think is necessary and one that is done.

* Fix a duplicate entry in CHANGES and remove an item from TODO.

* Merge branch 'obsd-master'

* Fix some warnings, from Thomas Adam.

* Merge branch '2.9-rc'

* Fix size check for splitw -f and top level pane size for tiled layout, problems reported by Thomas Sattler.

* Merge branch 'obsd-master'

* Fix size check for splitw -f and top level pane size for tiled layout, problems reported by Thomas Sattler.

* screen_write_fast_copy can no longer assume the target screen is default (it isn't for the pane status lines).

* Merge branch 'obsd-master'

* Do not load /etc/tmux.conf if given -f.

* screen_write_fast_copy can no longer assume the target screen is default (it isn't for the pane status lines).

* Silence flag should use the same option as activity, reported by Thomas Sattler.

* Merge branch 'obsd-master'

* Silence flag should use the same option as activity, reported by Thomas Sattler.

* Add CHANGES.

* Version RC2.

* Update regress from master.

* Store and restore cursor across reflow by working out a position based on unwrapped lines, rather than a grid offset. Fixes problems reported by Thomas Sattler and Paul de Weerd.

* Merge branch 'obsd-master'

* Add an argument to copy commands to set the prefix for the buffer name, allows buffers for different sessions to be named separately.

* Don't use a config file in tests.

* Store and restore cursor across reflow by working out a position based on unwrapped lines, rather than a grid offset. Fixes problems reported by Thomas Sattler and Paul de Weerd.

* Add cursor regression tests.

* Restore a check to stop scrolled lines becoming larger than total lines, fixes a crash reported by Thomas Sattler.

* Merge branch 'obsd-master'

* Restore a check to stop scrolled lines becoming larger than total lines, fixes a crash reported by Thomas Sattler.

* Merge branch '2.9-rc'

* Free old strings after they have been expanded in format_choose.

* Merge branch 'obsd-master'

* Free old strings after they have been expanded in format_choose.

* Merge branch '2.9-rc'

* Fix offset of list ranges.

* Merge branch 'obsd-master'

* Fix offset of list ranges.

* Merge branch 'obsd-master'

* Expand session and window formats for buffer filters.

* Merge branch 'obsd-master'

* Fix stop-selection, from Avi Halachmi.

* Merge branch 'obsd-master'

* Break copy mode commands into individual functions instead of a big load of if statements.

* Update TODO.

* There is no examples directory anymore.

* Merge branch '2.9-rc'

* Update CHANGES & TODO.

* For 3.0.

* 2.9 bits.

* Merge branch 'obsd-master'

* Add StatusDefault binding for the mouse on any otherwise unassigned parts of the status line, from Avi Halachmi.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Fix columns of cursor_character format in list.

* Tweaks to example config.

* Add to TODO.

* Ignore mouse on status line which are not part of a range, GitHub issue 1649.

* Clarify that styles can be space or comma separated, from Stephen Zapatka.

* I forgot to document resize-window, window-size and default-size; reminded by okan@.

* Merge branch 'obsd-master'

* Update TODO.

* Update TODO.

* Improve cursor positioning after reflow by storing the position as an offset into the entire history before reflow and restoring it aftewards.

* Update CHANGES.

* Merge branch 'obsd-master'

* Include function name in logging.

* Do not leak ranges on error.

* Ignore invalid styles rather than throwing away the whole format, this matches what we used to do.

* Bit more logging to show drawing errors.

* Merge branch 'obsd-master'

* Include window-status-style and window-status-current style in the format.

* Merge branch 'obsd-master'

* Add a cursor_character format.

* Add to TODO.

* Merge branch 'obsd-master'

* Rename the first KEY BINDINGS section to DEFAULT KEY BINDINGS.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Free temporary screens when writing format.

* The individual -fg, -bg and -attr options have been deprecated (in favour of -style), undocumented and hidden from show-options since 2014. Remove them, except for status-fg and status-bg.

* Merge branch 'obsd-master'

* Add some bits to the STATUS LINE section about the new option.

* Extend the #[] style syntax and use that together with previous format changes to allow the status line to be entirely configured with a single option.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Mode init needs to be fired with the mode on the list or it will not be resized correctly.

* Merge branch 'obsd-master'

* Add format variables for the default formats for the various modes (tree_mode_format and so on) and add a -a flag to display-message to list variables with values.

* Update TODO.

* Make array options a sparse tree instead of an array of char * and remove the size limit.

* With force, kill previous job before starting new. Fixes problem reported by Scott Mcdermott in GitHub issue 1627.

* Break description of styles into its own section.

* Add to TODO.

* Use a pointer for the active screen in the status line instead of copying them around all the time.

* Give status_save_old the client so it can do the reinit too.

* Tidy and rename some bits of status line code.

* Add a way to set individual defaults for an array option.

* Add a : to make error messages clearer.

* Copy recursion counter into new formats when looping.

* Move status line free into its own function.

* Remove unused member of struct client.

* Only print format logging when the flag is set, even if also sending to log_debug.

* The pane and window loops need to pass the window and pane tags when they build their format.

* Add a -v flag to display-message to show verbose messages as the format is parsed, this gives the user a way to debug problems with formats rather than just being confronted with (for example) a blank status line.

* Add a limit on how far format_expand can recurse.

* Store the time in the format tree rather than passing it around.

* Merge branch 'obsd-master'

* Remove some unnecessary temporary variables and be much less strict about spacing in style_parse.

* Add format flags for start and end window.

* Add T format modifier like E but also do strftime(3).

* Accept 0 time as a shorthand for now to format_expand_time.

* Merge branch 'obsd-master'

* Fix ED1 (clear end of screen), reported by Marc Reisner.

* Merge branch 'obsd-master'

* A little tidying in style_parse.

* Add a wrapper (struct style) around styles rather than using the grid_cell directly. There will be some non-cell members soon.

* Merge branch 'obsd-master'

* Missing space in capture-pane usage, from Ben Boeckel.

* Add actual HPA (\033[`), the existing one is CHA. From Marc Reisner.

* Merge branch 'obsd-master'

* Need to set attributes before clearing.

* The pane's style should be initialized to default before parsing the argument.

* Merge branch 'obsd-master'

* Tweak format_replace logging.

* Merge branch 'obsd-master'

* Add formats to list sessions, windows or panes.

* Update TODO.

* Apply length limits and substitution even to literal formats.

* Add to TODO.

* Add E: format to expand a format twice (useful to expand the value of an option).

* Make format parsing build the modifiers into a list, standardize how arguments are given and allow multiple modifiers on a format (separated by ;).

* Add to TODO.

* Add to TODO.

* Merge branch 'obsd-master'

* Do not use origin for VPA.

* Merge branch 'obsd-master'

* Set a flag on cells are genuinely empty (cleared and never written to) and use tty_clear_line (which will choose the best escape sequence) to clear any batches of cells with that flag when redrawing a line from the stored screen.

* Merge branch 'obsd-master'

* DECRC and DECSC apparently need to preserve origin mode as well, based on a fix from Marc Reisner.

* Merge branch 'obsd-master'

* Fix HPA in origin mode.

* Tidy up a lot of &ictx->ctx by using a local variable.

* Add a couple of things.

* Add to TODO.

* Fix session size regress.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Fix up regress test for control client size.

* Fix resizing of control clients, should be ignored until SIZECHANGED flag set.

* Fix wrapping after origin mode change.

* When asked for a window index, return it even if the window exists.

* Revert to not clearing history on RIS, apparently some bootloaders send this and it doesn't really do any harm.

* Tweak target debug logging.

* Add to TODO.

* Merge branch 'obsd-master'

* Update CHANGES.

* Allow multiple modes to be open in a pane. A stack of open modes is kept and the previous restored when the top is exited. If a mode that is already on the stack is entered, the existing instance is moved to the top as the active mode rather than being opened new.

* Merge branch 'obsd-master'

* Add support for origin mode (DECOM, SM/RM ?6), from Marc Reisner.

* Merge branch 'obsd-master'

* Make the mode used to view command output (a variant of copy mode) use its own mode definition struct with a different init function rather than calling special setup functions.

* Do not use window mode entry after free.

* Merge branch 'obsd-master'

* Add a separate mode struct for the active window mode if any.

* Merge branch 'obsd-master'

* Tidy changing the mode into window_copy_init_for_output.

* Make adding mode formats a function pointer as well.

* Add to TODO.

* Merge branch 'obsd-master'

* Fix sense of aggressive-resize flag.

* Don't set client offset if client is not a terminal

* Merge branch 'obsd-master'

* Do not look at next key byte if the length is 0, originally from Shingo NISHIOKA in GitHub issue 1601.

* Merge branch 'obsd-master'

* Use starting client cwd in config file, GitHub issue 1606.

* Merge branch 'obsd-master'

* Completion of command-alias members.

* Redirect which stderr.

* Merge branch 'obsd-master'

* Add -b to display-panes like run-shell, GitHub issue 1559.

* Merge branch 'obsd-master'

* Should use DECFRA if not default, not if default. From Karl Beldan.

* Merge branch 'obsd-master'

* Should save the bg colour when setting it to default, not the fg.

* Merge branch 'obsd-master'

* Do not highlight characters which will not be copied, reported by Jaroslaw Rzeszotko.

* Merge branch 'obsd-master'

* Pass window into mode functions.

* Merge branch 'obsd-master'

* Fix parsing of empty colon-separated fields, reported by Siarhei Siniak.

* Merge branch 'obsd-master'

* Clear PANE_EXITED flag when starting new child process in case the pane has been respawned.

* osdep_get_cwd for NetBSD, from Leonardo Taccari.

* Merge branch 'obsd-master'

* Handle UTF-8 in word-separators option, GitHub issue 1551.

* Merge branch 'obsd-master'

* Do not use PWD unless it actually matches the real working directory.

* Add to TODO.

* Fixes for GNU/kFreeBSD from James Clarke.

* Merge branch 'obsd-master'

* evbuffer_new and bufferevent_new can both fail (when malloc fails) and return NULL. GitHub issue 1547.

* Merge branch 'obsd-master'

* Add [template] to display-panes and choose-{buffer,client,tree} usage

* Merge branch 'obsd-master'

* Initialize context property in alignment test handler function.

* Merge branch 'obsd-master'

* Allow style #[] in mode formats.

* Merge branch 'obsd-master'

* It isn't possible to specify buffer name to copy mode commands now, so remove the function argument.

* Merge branch 'obsd-master'

* If a non-repeating key is used when repeating, it should be treated as an entirely new key press, not checked in root table and ignored if not found. GitHub issue 1513.

* Add to TODO.

* There is no reason wait-for has to be restricted to outside tmux.

* Merge branch 'obsd-master'

* Correctly unzoom and redraw panes in switch-client.

* Merge branch 'obsd-master'

* Reset all flags in screen_write_reset, reported by Benjamin Poirier.

* Merge branch 'obsd-master'

* Do not printf NULL.

* Merge branch 'obsd-master'

* Do not check for a key again without an escape if only \033 is present.

* Add to CHANGES.

* Merge branch 'obsd-master'

* Add a "terminal" colour which can be used instead of "default" in style options for the terminal default colour, bypassing any inheritance from other options. Prompted by a discussion with abieber@.

* Tweak wording.

* Do not use master here.

* Instead of "master" for the version number, use "next-X.X". It is more useful to include the next version number.

* Merge branch 'obsd-master'

* Document new refresh-client flags.

* Merge branch 'obsd-master'

* Support for windows larger than visible on the attached client. This has been a limitation for a long time.

* Handle pan correctly when the terminal is bigger than the window.

* Support OSC 52 ? to read the top buffer inside tmux (when set-clipboard is changed to on), also add refresh-client -l to ask tmux to use the same mechanism to get the clipboard from the terminal outside tmux. GitHub issue 1477.

* Support for extended underline styles on terminals which offer them, enabled by adding the Smulx capability with terminal-overrides (add something like ',vte*:Smulx=\E[4\:%p1%dm'). GitHub issue 1492.

* Merge branch '2.8-rc'

* tmux 2.8.

* Add to TODO.

* Add to TODO.

* Add to TODO file.

* Support OSC 52 ? to read the top buffer inside tmux, also add refresh-client -l to get the clipboard outside tmux. GitHub issue 1477.

* Use :: for escaping : in terminal-overrides not \:.

* Support for extended underline styles, enabled by adding the Smulx capability with terminal-overrides (add something like 'vte*:Smulx=\E[4\:%p1%dm'). GitHub issue 1492.

* Update TODO.

* Update CHANGES.

* Update TODO.

* Merge branch 'obsd-master'

* Do not move the cursor when the mouse wheel is used, GitHub issue 1493.

* Correctly check offset for drawing multiple cells, GitHub issue 1481.

* Fix select-pane -m, GitHub issuie 1490.

* Merge branch 'obsd-master'

* Use same working directory rules for jobs as new windows rather than always starting in home, GitHub issue 1488.

* Add formats for when window is larger than client, and show offset in status-right by default when larger.

* More of revert.

* Revert "Add a B flag to mark windows bigger than the client."

* Change the B into a +.

* Merge branch 'obsd-master'

* Allow panes to be 1 line or column by redrawing instead of using the scroll region, from Soeren Tempel in GitHub issue 1487.

* Do not clamp to needed size since it may be too big.

* window_printable_flags needs an additional argument.

* Add a B flag to mark windows bigger than the client.

* Ignore clients that are suspended or exiting.

* Add to TODO.

* Merge branch 'obsd-master'

* Only include pane status in minimum size if it is turned on, GitHub issue 1480.

* Calculate size when trimming RHS correctly.

* Fix up merge.

* Merge branch 'obsd-master'

* Restore window_pane_visible for drawing panes and borders, fixes issue 1458 reported by Felix Rosencrantz, problem located by Avi Halachmi.

* The cursor position is limited to the margins for CUF and CUB, so turn margins off for printing cells (like most everything else already does). Problem reported by Thomas Sattler.

* x,y -> px,py.

* Merge branch 'obsd-master'

* Do not check for mouse events on pane borders when zoomed, based on a fix from Avi Halachmi.

* Merge branch 'obsd-master'

* window_get_active_at needs to check visible also.

* Do not clear selection when searching.

* Bring back window_pane_visible to stop input going to panes which are hidden by zoom.

* Add to TODO.

* Fixes to resize-window from Ben Boeckel.

* Cast parameters to tparm, from Christos Zoulas via Leonardo Taccari.

* Makefile.am: Add space between -f and argument

* Merge branch 'obsd-master'

* Allow a large line number to go to the end with goto-line, from Mark Kelly in GitHub issue 1460.

* Fix selection test, from Takeshi Banse.

* Add to TODO.

* Merge branch 'obsd-master'

* Fix target line for fast path in tty_draw_pane.

* Reset line flag when clearing selection, GitHub issue 1454.

* Fix refresh-client flags.

* Update TODO.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Keep any text killed in the command prompt with C-w and yank it with C-y, only use the top buffer if no text has previously been killed. This and previous change promped by discussion with kn@.

* Add C-Left and C-Right as aliases for M-b and M-f.

* Merge branch 'obsd-master'

* Memory leaks, from Gang Fan in GitHub issue 1453.

* tty_clamp_* need to use wp->xoff and wp->yoff for the check (which don't include status line, line ox and oy), but ctx->xoff and yp->off to calculate the position (which do have the statu line).

* Merge branch 'obsd-master'

* Add q: format prefix to escape sh(1) special characters. Suggested by someone ages ago and then more recently in GitHub issue 1449.

* Do not draw cells which have no cell (zoomed and they are not active).

* Merge branch 'obsd-master'

* all_jobs can be static.

* Merge branch 'obsd-master'

* Move job struct into job.c.

* Update CHANGES.

* Merge branch 'obsd-master'

* Update TODO.

* Add StatusLeft and StatusRight mouse key modifiers for the left and right parts of the status line.

* Update TODO.

* Add flags to refresh-client (-U -D -L -R and -c) to pan a window that is larger than the client manually. Bound to S-Up, S-Down, S-Left, S-Right and Delete manually.

* The stored mouse position should not include the status line offset if any.

* Merge branch 'obsd-master'

* Move offset of window list into status struct.

* Only screen-redraw.c needs to adjust for message or prompt when the status line is off, get rid of tty_status_lines and just pass the client into status_line_size so it can check the CLIENT_STATUSOFF flag as well.

* Need to adjust for lines if at top.

* Use the y offset from the context which has already been adjusted for the status line, also make tty_clamp_line adjust the y position.

* Update CHANGES.

* Merge branch 'obsd-master'

* Add -Z to find-window as well.

* Support for windows larger than the client.

* Fix problems with page scrolling in copy mode, GitHub issue 1440 from Amos Bird.

* Merge branch 'obsd-master'

* Add a flag to force redrawing of the status line even if the content hasn't changed, needed for resizing.

* Merge branch 'obsd-master'

* Expand \u and \U escape sequences in command strings, from Christopher Hunt in GitHub issue 1443.

* Merge branch 'obsd-master'

* Add a client redraw-window flag instead of the redraw-all flag and for all just use the three flags together (window, borders, status).

* Merge branch 'obsd-master'

* SESSION_UNATTACHED flag is no longer necessary now we have an attached count instead.

* Merge branch 'obsd-master'

* Some tidying and helper functions.

* Now master again.

* 2.8.

* 2.8-rc.

* Merge branch 'obsd-master'

* Add a full stop.

* Add the KEYC_XTERM flag to all function keys that imply a modifier so that they are correctly translated into xterm(1)-style keys. GitHub issue 1437.

* Add size to arguments struct too.

* Some tidying, use a struct for arguments (there will be more later) and add a helper function.

* Merge branch 'obsd-master'

* Update CHANGES.

* Whoops, didn't mean to commit this.

* Bump the UTF-8 character array up to 18 to allow for more combining characters (some languages use up to five). This size doesn't make as much difference now that UTF-8 goes into an extended cell. GitHub issue 1430.

* calloc the mode data instead of malloc and initialize everything.

* Merge branch 'obsd-master'

* Log command arguments.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* session_groups can be static also.

* Make key trees and some other bits static.

* Minor tidying.

* Merge branch 'obsd-master'

* Make display-panes block the client until a pane is chosen or it times out.

* Merge branch 'obsd-master'

* Initialize new lineflag member.

* Merge branch 'obsd-master'

* Do not leak path or use it after free.

* Merge branch 'obsd-master'

* Move struct screen_sel into screen.c and tidy up members that are only used by copy mode.

* Clear history on RIS like most other terminals do.

* Merge branch 'obsd-master'

* Remove a leftover unused struct.

* Merge branch 'obsd-master'

* Point to glob in section 7 for the actual list of special characters instead the C API in section 3.

* Merge branch 'obsd-master'

* When a key isn't in the first table, we need to try the same key again not the any key. Also rename some labels. Fixes GitHub issue 1406 reeported by Mark Kelly.

* Merge branch 'obsd-master'

* Add an "Any" key to run a command if a key is pressed that is not bound in the current key table. GitHub issue 1404.

* Merge branch 'obsd-master'

* Fix new-window -k, GitHub issue 1403.

* Merge branch 'obsd-master'

* Updates to CHANGES.

* Expand formats in load-buffer and save-buffer.

* Merge branch 'obsd-master'

* Helper function to shorten history.

* Add function comments.

* Merge branch 'obsd-master'

* Add a rectangle_toggle format, from Hirokazu Hata.

* Merge branch 'obsd-master'

* whitespace needed between macro args and punctuation;

* +README.ja.

* Add set-hook -R to run a hook immediately (useful to set multiple hooks to the same thing).

* Add pane focus hooks.

* Merge branch 'obsd-master'

* Japanese README from Kohei Takada.

* Add accessors for grid linedata member, for some future work. From Dan Aloni.

* Merge branch 'obsd-master'

* Fire notify for select-layout, from George Nachman.

* Solaris 11.4 and later prefers mdoc, from Alan Coopersmith.

* Merge branch 'obsd-master'

* Allow any punctuation (except :) as separator in s/x/y/, not only /. From JINNOUCHI Yasushi in GitHub issue 1386.

* Merge branch 'obsd-master'

* Style nit.

* Merge branch 'obsd-master'

* Do not take address of a member of a NULL pointer. GitHub issue 1382 from Kamil Rytarowski.

* Merge branch 'obsd-master'

* If there are only two panes, always use the other pane as the last pane. Based on a change from Duy Nguyen in GitHub issue 1377.

* Merge branch 'obsd-master'

* Minor cosmetic improvement from KOIE Hidetaka.

* Merge branch 'obsd-master'

* Fix some compiler warnings; from Thomas Adam.

* Merge branch 'obsd-master'

* Make it possible to resize multiple panes by dragging corners, from Dan Aloni in GitHub issue 1376.

* Merge branch 'obsd-master'

* Instead of working out which pane to resize with the mouse by walking the panes list, look through the layout cells for the nearest border and resize that cell. From Dan Aloni in GitHub issue 1374.

* Merge branch 'obsd-master'

* Tweak previous - check for a NULL client and simplify manual text.

* Linux: include sys/file.h for flock()

* Merge branch 'obsd-master'

* Increment the lines counter when skipping a line to avoid an infinite loop, and fix a check to avoid a potential out-of-bounds access. Problem reported by Yuxiang Qin and tracked down by Karl Beldan; GitHub issue 1352.

* Merge branch 'obsd-master'

* If foo doesn't exist and can't be expanded in #{?foo,a,b} then assume it is false.

* Merge branch 'obsd-master'

* When looking for panes, ignore dead ones (with -1 file descriptor). GitHub issue 1354.

* Add format string test, from "sadie-parayno" in GitHub issue 1358.

* Document escaping inside conditionals, from "sadie-parayno" in GitHub issue 1359.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Make server_client_get_cwd used (almost) everywhere we need to work out the cwd, and do not fall back to "." as it is pretty useless. GitHub issue 1331.

* Improve logging of the environment etc for new panes.

* Merge branch 'obsd-master'

* Allow escaping , and } with # in #{}; GitHub issue 1332.

* Sync tmux description with manual.

* Merge branch 'obsd-master'

* -T should not actually select the pane.

* Merge branch 'obsd-master'

* Fix switch-client -l, from Jean-Marc Eurin in GitHub issue 1343.

* Merge branch 'obsd-master'

* Mention allow-rename with \033k.

* Merge branch 'obsd-master'

* Another check for NULL window if looking for index.

* Merge branch 'obsd-master'

* Handle terminfo colors > 256 correctly, GitHub issue 1337.

* Merge branch 'obsd-master'

* Improve logging of sessions.

* Merge branch 'obsd-master'

* Use window target if specified and exists even when looking for an index, fixes neww -a with -t as well.

* Merge branch 'obsd-master'

* Use <fcntl.h> instead of <sys/file.h> for open() and friends. Delete a bunch of unnecessary #includes and sort to match style(9) while doing the above cleanup.

* Merge branch 'obsd-master'

* Sync imsg from OpenBSD.

* Add KRB5CCNAME to update-environment.

* #aabbcc will use RGB if supported so don't say it is closest match.

* Check whether cursor is at start or end when copying rectangular selections, from tb@.

* Remove unnecessary brackets.

* Merge branch 'obsd-master'

* rxvt-unicode has some funny behaviour when scrolling with the cursor not at column 1, so move it back there first if possible. GitHub issue 1318.

* Merge branch 'obsd-master'

* Change how display-message uses the client. Originally it was only intended as the target client where the message should be displayed but at some point (perhaps when -p was added), it was used for format expansion too. This means it can get a bit weird where you have client formats expanding for a client with a different current session than the target session.

* Include source function name in grid_check_y logging.

* Merge branch 'obsd-master'

* Fix || example.

* Some changes.

* Merge branch '2.7-rc'

* 2.7.

* Merge branch 'obsd-master'

* Allow no client for rename-session, from Ryan Freeman.

* Merge branch 'obsd-master'

* A couple of fixes to the : form of SGR. Apparently there is an extra argument that nobody knew about, so skip that if it exists. Also there are a bunch of useless optional arguments at the end, so ignore those.

* Add x and X to choose-tree (with a confirmation prompt) to kill an item. Suggested by Matt Zagrabelny.

* Merge branch '2.7-rc'

* Merge branch 'obsd-master'

* Fix link, from Eliran Gonen.

* Do not crash on empty window, reported by Jamie Macdonald in GitHub issue 1299. Patch from Thomas Adam.

* Merge branch 'obsd-master'

* Do not crash on empty window, reported by Jamie Macdonald in GitHub issue 1299. Patch from Thomas Adam.

* Fix a regression: do not warn about no client in rename-window.

* Merge branch 'obsd-master'

* Fix a regression: do not warn about no client in rename-window.

* Fix size calculation when spreading out panes.

* Merge branch 'obsd-master'

* Fix size calculation when spreading out panes.

* Merge branch '2.7-rc'

* CHANGES for 2.7.

* Revert "2.7-rc."

* 2.7-rc.

* Remove EVENT_* variables from environment after initializing libevent so they are not carried into child processes; from Henry Qin.

* Merge branch 'obsd-master'

* Fix negative window index range check (> not <). Reported by Juan Pablo in GitHub issue 1283.

* Merge branch 'obsd-master'

* Insert full size panes at the right position, from KOIE Hidetaka in GitHub issue 1284.

* Merge branch 'obsd-master'

* Add a missing client-detached hook when the server shuts down, and do not exit until jobs started from run-shell/if-shell have finished (add a job flags member and a flag to indicate other jobs). GitHub issue 1245.

* Merge branch 'obsd-master'

* For some reason tmux treats SGR 10 as SGR 0. It has done since the first version and I'm not sure why since no other terminal appears to. Change to just ignore SGR 10 instead.

* Fix cmp use.

* Merge branch 'obsd-master'

* Expand formats in window and session names.

* Merge branch 'obsd-master'

* Add -Z flag to choose-tree, choose-client, choose-buffer to automatically zoom the pane when the mode is entered and unzoom when it exits, assuming the pane is not already zoomed. Add -Z to the default key bindings.

* Merge branch 'obsd-master'

* C-g for modes too, from Mike Hamrick.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Remove an unused variable.

* Check prefix when retrying so it is checked while repeat flag is set. GitHub issue 1239.

* Add exit-empty option to exit server if no sessions (defaults to on).

* Merge branch 'obsd-master'

* Do not leak memory when working out job name in formats.

* Merge branch 'obsd-master'

* Update CHANGES.

* Support ISO colon-separated SGR.

* Merge branch 'obsd-master'

* Reflowing the grid in-place involved way too much memmove() for a big performance cost with a large history. Instead change back to using a second grid and copying modified lines over which is much faster (this doesn't revert to the old code however which didn't support UTF-8 properly). GitHub issue 1249.

* Merge branch 'obsd-master'

* Add struct status_line to hold status line members of struct client, not used yet but will be soon. From Thomas Adam.

* Merge branch 'obsd-master'

* Show if filter is active/no matches in modes.

* Merge branch 'obsd-master'

* Upstream ncurses has introduced terminfo capabilities to specify RGB colour ("true" or "direct" colour). These consist of new entries (such as "xterm-direct") which have a different setaf/setab implementation, colors and pairs set to 0x1000000 and 0x10000, and a new RGB flag.

* Add more to TODO.

* Add to TODO.

* Merge branch 'obsd-master'

* Discard all but the last line when reading from a #() command - the callback is just going to be fired again straight away to go through all the lines, it is better just to use the last one straight away.

* Merge branch 'obsd-master'

* Remove unused hooks_run function, from Thomas Adam.

* Merge branch 'obsd-master'

* Fix drawing of ACS characters (they need to go character-at-a-time), accidentally broken in last commit.

* Add -I to pipe-pane to connect pane stdin as well as stdout, suggested by Kristof Kovacs in GitHub issue 1186.

* msys is apparently a cygwin variant that doesn't say it is cygwin...

* Another redundant check, GitHub issue 1219.

* Some unused code, GitHub issue 1219.

* Do not collect top-bit-set characters in case they need to be replaced.

* Simplify character replacement on non-UTF-8 terminals and make a common function.

* Simplify UTF-8 states down into one state.

* Improve error message if creating socket parent directory fails, from Thomas Adam for GitHub issue 1215.

* Improve logging for layout cells.

* Merge branch 'obsd-master'

* Prefer PWD for current directory if present in client, from Wei Zhao in GitHub issue 1183.

* Add C-g at command prompt for emacs people, GitHub issue 1213.

* Merge branch 'obsd-master'

* Initialize the size of new panes created by the even-* layout correctly; reported by Andreas Kahari and Anton Lindqvist.

* Merge branch 'obsd-master'

* Redrawing status is needed after changing window flags or title does not update if status line is off, GitHub issue 1191.

* Merge branch 'obsd-master'

* Draw command prompt correctly with status line off.

* Still need to globfree on failure.

* Fix memory leak in screen_redraw_make_pane_status.

* Merge branch 'obsd-master'

* Do not try to set default value on user options (they don't have one), from Charles Howard in GitHub issue 1161.

* Remove duplicate WheelUp/WheelDown entries in list, GitHub issue 1184.

* Merge branch 'obsd-master'

* Report better error from server when socket create fails, GitHub issue 1201.

* Merge branch 'obsd-master'

* Do not try to put more in command message than will fit when sending (the server will treat as a fatal error). GitHub issue 1200.

* Merge branch 'obsd-master'

* Remove unused variable from Thomas Adam.

* Merge branch 'obsd-master'

* Allow formats in selectp -T, from Thomas Adam.

* Merge branch 'obsd-master'

* Add -and-cancel variants for scrolling commands to exit copy mode when the bottom is reached, from Stephen Hicks.

* Merge branch 'obsd-master'

* Add to CHANGES.

* Merge branch 'obsd-master'

* Add a common function for spreading out cells and use it for the two even layouts and to add a -E flag to select-layout to spread out cells evenly without changing parent cells.

* Completely rewrite the reflow code to correctly handle double width characters (previously they were not accounted for).

* If there is a double width character at the very end of the line with not enough room to draw it, just leave it out.

* Merge branch 'obsd-master'

* When searching in copy mode, do not scroll if the result is already on screen. GitHub issue 1150.

* Merge branch 'obsd-master'

* If we successfully change the directory, set PWD too to give the shell a hint in case of symlinks.

* Merge branch 'obsd-master'

* Clear key properly if on space with nothing in it.

* Support mouse on preview in tree mode.

* Merge branch 'obsd-master'

* Change mouse in modes so that one click moves the cursor and a double click chooses the line.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Make the mode draw function use the parent screen directly rather than its own to avoid copying twice.

* Add a "fast" version of screen_write_copy for tree mode that doesn't do all the checks and selection and marking stuff needed for copy mode.

* Merge branch 'obsd-master'

* Format for group list of "other sessions" is a bit weird, just list all the sessions in the group.

* Tweak previous slightly so that current session is chosen if it is in the group rather than first.

* Only show the first member of session groups in tree mode (-G flag disables).

* There is no point in reflowing panes which have not changed width.

* Merge branch 'obsd-master'

* Fix crash exiting command prompt (from Alex Maese in GitHub issue 1139) and a man page tweak from jmc.

* Merge branch 'obsd-master'

* Note that notifications are also hooks.

* Merge branch 'obsd-master'

* Update CHANGES.

* Default allow-rename to off because it is ridiculous that applications are even able to do this and confusing when they do.

* Merge branch 'obsd-master'

* h/l keys for expand and collapse.

* Merge branch 'master' of github.com:tmux/tmux

* Update TODO.

* Add P key to paste tagged in buffer mode, and trim some code that should no longer be necessary.

* Merge branch 'obsd-master'

* Use window_pane_index() when drawing pane numbers (so pane-base-index is applied), from Thomas Adam. GitHub issue 1125.

* Apparently vim(1) now has syntax highlighting built in, GitHub issue 1124.

* Merge branch 'obsd-master'

* Clear status line with spaces again so reverse works, spotted by sthen.

* Need compat for queue.h.

* Merge branch 'obsd-master'

* Save and restore LIBS when checking for b64_ntop, reported by Ralf Friedl.

* Infrastructure for drawing status lines of more than one line in height, still only one is allowed but this lets tmux draw bigger ones.

* Show exit status and time in the remain-on-exit pane text, mostly from Timo Boettcher in GitHub issue 1103.

* Merge branch 'master' of github.com:tmux/tmux

* Check missed during merge.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Box around label in preview.

* Clear to end of line properly with UTF-8 present.

* Merge branch 'obsd-master'

* Add C-n and C-p keys for tree mode, and choose the right initial line when no panes.

* Merge branch 'master' of github.com:tmux/tmux

* Include headers if found regardless of forkpty.

* Merge branch 'obsd-master'

* kind should be S-Down not S-Up.

* Merge branch 'obsd-master'

* Fix description of history_size, from Campbell Barton.

* Merge branch 'obsd-master'

* Support %else in config files to match %if, from Brad Town in GitHub issue 1071.

* Merge branch 'obsd-master'

* Add -- to some key bindings so leading -s work.

* Merge branch '2.6-rc'

* 2.6.

* Add support for the xterm(1) title stack, from Brad Town, GitHub issue 1075.

* When writing batches of characters to the screen, we need to clear padding or later UTF-8 characters could be displayed incorrectly. GitHub issue 1090.

* Initialize alerts timer event where it is used, avoids crash with new windows.

* Merge branch 'obsd-master'

* Initialize alerts timer event where it is used, avoids crash with new windows.

* Merge branch 'obsd-master'

* Remove unused (always 1) arguments from some functions, from Daniel Mueller in GitHub issue 1073.

* Merge branch 'obsd-master'

* Check event is initialized before delete; fixes crash reported by Michael Nickerson in GitHub issue 1068.

* 2.6-rc3.

* 2.6-rc3.

* Merge branch 'master' into 2.6-rc

* Merge branch 'obsd-master'

* Mention that filter is a format.

* Do not free more lines than are available in the history.

* 2.6-rc2.

* Merge branch 'master' into 2.6-rc

* Merge branch 'obsd-master'

* Merge branch 'master' into 2.6-rc

* Previously, extended cell data was never reduced in size even when the cell was overwritten. With a large history this can be a substantial amount of memory. To reduce this, compact each extended cell list to only cells in use as it is scrolled off the visible screen into the history. From Dan Aloni in GitHub issue 1062.

* Merge branch 'obsd-master'

* Apply timeout to CAN and RS which also wait for ST.

* Fix a few errors in how the selected line is chosen after resize, reported by Felix Rosencrantz in GitHub issue 1059.

* Add to CHANGES.

* When removing a key table clear it out of clients, fixes issue with unbind -a reported by Thomas Sattler.

* Do not fail if unset an option that is already unset, reported by Thomas Sattler.

* Do not attempt to use TIOCSWINSZ on a -1 file descriptor (possible if the pane has already died).

* Merge branch 'obsd-master'

* Move to current mouse position not last when clcking in copy mode; fixes GitHub issue 1055. Also a man page fix from jmc.

* Merge branch 'obsd-master'

* Add selectp -T to set pane title.

* Mention GitHub for code.

* Add to CHANGES.

* Add to CHANGES.

* Merge branch 'master' into 2.6-rc

* Merge branch 'obsd-master'

* Instead of overloading the line clear function to mean free if background is default (8), introduce an explicit free function and use it where a free alone is needed. Likewise, use memmove directly rather than grid_move_lines where it makes sense. Based on a memory leak fix by Dan Aloni in GitHub issue 1051.

* Merge branch 'master' into 2.6-rc

* Merge branch 'master' of github.com:tmux/tmux

* Merge branch 'obsd-master'

* Pass flags into cmd_find_from_* to fix prefer-unattached, reported by Thomas Sattler.

* Add to TODO.

* 2.6-rc version.

* Fix position of -v, pointed out by Thomas Sattler.

* Back to master.

* This is not true now...

* Merge branch 'master' into 2.6-rc

* Merge branch 'master' of github.com:tmux/tmux

* Merge branch 'obsd-master'

* Merge branch 'master' into 2.6-rc

* More style.

* 2.6-rc version.

* Style of headings.

* Fix example from Adam Spiers.

* Redraw rectangle selections properly when cursor at end, GitHub issue 992.

* Merge branch 'obsd-master'

* Merge branch 'master' of github.com:tmux/tmux

* Update CHANGES.

* Support REP escape sequence (\033[b).

* Check for complete keys before escape prefix, allows keys to be defined with a leading escape. GitHub issue 1048.

* Merge branch 'obsd-master'

* Do not forbid targets to specify non-visible panes - the checks for visibility are better where the target is used. GitHub issue 1049.

* Merge branch 'obsd-master'

* Do not allow the current line of screen when the preview is toggled, from Thomas Adam.

* Merge branch 'obsd-master'

* Use kind and kri for S-Up/Down as well as kUP and kDN.

* Merge branch 'obsd-master'

* When tty is error or closed, remove client. Reported by Thomas Sattler.

* Merge branch 'obsd-master'

* Key (v) and flag (-N) to toggle preview in choose modes.

* Fix searching when match is at end of line, from Brad Town.

* Allow multiple bells even if there is an existing bell (but not activity or silence), from Brad Town.

* Run alert hooks based on the options rather than unconditionally, from Brad Town.

* Add to TODO.

* Merge branch 'obsd-master'

* Same as previous for \r alone.

* Do not emit \r\n to move to column 0 if there are margins, because it will instead move to the margin left.

* Merge branch 'obsd-master'

* Fix example for user-keys.

* Merge branch 'obsd-master'

* Add monitor-bell window option to match the activity and silence options, from Brad Town.

* Add to CHANGES.

* Merge branch 'obsd-master'

* Add -d flag to display-panes to specify timeout, and make 0 mean no timeout. From Laurens Post.

* Rename BELL_* values to ALERT_* now they are used by more than bells, based on a diff from Brad Town.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Fix filtering so it works after the change to only show windows if they have multiple panes.

* Update CHANGES and TODO.

* Add -F to choose-tree, choose-client, choose-buffer to specify the format of each line, as well as adding a couple of formats needed for the default display.

* Merge branch 'obsd-master'

* Hooks for after-select-pane and after-select-window.

* Merge branch 'obsd-master'

* Add selection_present format so commands in copy mode can use it, GitHub issue 1028.

* Merge branch 'master' of github.com:tmux/tmux

* I already mentioned these... revert previous.

* Merge branch 'obsd-master'

* Show pane title in window list for windows with only one pane.

* This is a big meaningless.

* Update CHANGES.

* Merge branch 'obsd-master'

* Add pane_at_left/right/top/bottom formats, from Amos Bird.

* Merge branch 'obsd-master'

* Always reset the alerts timer so it works even if activity and silence are enabled on the same window.

* Make bell, activity and silence alerting more consistent:

* Update CHANGES.

* Merge branch 'master' of github.com:tmux/tmux

* Mention autoconf and automake.

* Merge branch 'obsd-master'

* Use the actual width written rather than the possible width to clear.

* Merge branch 'obsd-master'

* Trim trailing spaces from full line when it is clearly OK to do so.

* Allow ispunct() as well as isalnum() when parsing initial window names.

* Merge branch 'obsd-master'

* Add -c for respawn-pane and respawn-window, from J Raynor.

* Merge branch 'obsd-master'

* Because ignore SIGCHLD early, letting signal_del restore it doesn't work correctly, so set it explicitly back to default (and the others for good measure).

* Merge branch 'obsd-master'

* Update CHANGES.

* Fix redraw defer code in the presence of multiple clients - the timer may be needed for all of them, so don't delete it on the first; and don't skip setting the redraw flag if the timer is already running.

* Merge branch 'obsd-master'

* Line up keys in tree mode, and don't expand windows with one pane. From Thomas Adam.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Do not need to set up USR2 twice.

* Block signals between forking and clearing signal handlers (or calling event_reinit) - if the child gets a signal and fires the libevent signal handler during this period it could write a signal into the parent's signal pipe. GitHub issue 1001 from Aaron van Geffen.

* Move signal code into proc.c.

* Make shell_command a global like other stuff rather than making it an exception and using callback argument.

* proc_send_s now seems unnecessary.

* Merge branch 'obsd-master'

* Some extra logging to show why tmux might exit.

* Merge branch 'obsd-master'

* Fix size of rightmost preview section.

* Add a pane_pipe format to show if pipe-pane is active, GitHub issue 990.

* Merge branch 'obsd-master'

* When working out the current client (for example for switch-client with no target), prefer clients attached to the current session if there is one. GitHub issue 995 from Jan Larres.

* Merge branch 'obsd-master'

* < and > keys to scroll preview list left and right in tree mode.

* Merge branch 'obsd-master'

* Handle 0 size of preview box in caller.

* Merge branch 'obsd-master'

* Change session and window preview so that the current window or pane is always shown.

* Merge branch 'obsd-master'

* Change previous to not wait for both process exit and pty close - instead if there is a pipe-pane active, do not exit until all data is read (including any libevent hasn't seen yet). Fixes problem reported by Theo Buehler and still seems to solve the original issue.

* Merge branch 'obsd-master'

* Do not close panes until process has exited and any outstanding data has been written to the pipe-pane event if there is one. GitHub issue 991.

* Try C.UTF-8 which is also a commonly useful locale on some platforms, from Romain Francoise.

* Merge branch 'obsd-master'

* Don't write over right border.

* Fix previous when we end up able to show no panes.

* Try to show a better preview of sessions and windows in tree mode.

* Merge branch 'obsd-master'

* Use 100 as the example for command-alias because the defaults are from 0 to (currently) 5.

* Merge branch 'obsd-master'

* Apply the xterm key flag when needed for send-keys, fixes problem reported by Franky Spamschleuder.

* Merge branch 'obsd-master'

* Fix visual-silence (check accidentally the wrong way round), from Brad Town. Plus some tmux.1 fixes from jmc@.

* Merge branch 'obsd-master'

* Add user-keys option to allow user-defined keys to be set, from Dan Aloni.

* Merge branch 'obsd-master'

* Tweak some logging.

* Merge branch 'obsd-master'

* Log terminal capabilities for each new terminal.

* Merge branch 'obsd-master'

* Don't overwrite error message when it is available in cmd_string_parse. Reported by Jimi Damon in GitHub issue 975.

* New test.

* Add missing error message when no target, GitHub issue 971.

* Merge branch 'obsd-master'

* Remove xterm flag from key before checking prefix, reported by Peter Fern in GitHub issue 974.

* Merge branch 'obsd-master'

* Need to flush out the linefeed after wrapper. GitHub issue 970.

* Merge branch 'obsd-master'

* Add explicit keys for the bracketed paste sequences, both to avoid mix ups with other keys and to make logs clearer.

* Merge branch 'obsd-master'

* Extend filters (f key) to buffer and client mode and add -f flag to specify to command.

* Add -O option to choose-* to set initial sort order.

* Default sort for buffer mode should be time not name.

* Merge branch 'obsd-master'

* Merge branch 'master' of github.com:tmux/tmux

* Set AM_CFLAGS for ncurses libraries, reported by Peter Schow.

* Use brackets around prompts which looks better and matches the other modes.

* Merge branch 'obsd-master'

* Add a hook when the clipboard is set.

* Add memmem to compat.

* Update TODO.

* Typo.

* Note what to have for building Git.

* Merge branch 'master' of github.com:tmux/tmux

* Move FAQ online and do not ship TODO.

* Merge branch 'obsd-master'

* Add size to client descriptions in list, suggested by Greg Hurrell.

* Merge branch 'obsd-master'

* Return 1 if name matches not 0, also fix some spaces.

* Use osdep_get_name.

* Merge branch 'obsd-master'

* Add simple searching (C-s and n) to the various choose modes: by name for client and tree, and by name and content for buffer.

* Tweak title.

* Mention U8, from Carles Cufi.

* Typo.

* Remove a bunch of out-of-date stuff from the FAQ or stuff that is documentation for other programs.

* Merge branch 'obsd-master'

* Continue and pass keys through if they are repeated keys, so that the first key after a repeated key doesn't get lost.

* Do not pass a state into commands when fired on individual items in tree mode, rely on the %% target substitution in the command for the chosen pane and leave the default target as the current pane (where the mode is). Otherwise, joinp and similar end up with -t and -s the same. Reported by Jacob Niehus in GitHub issue 960.

* Delete input event when evbuffer_read() fails to avoid just spinning around a dead file descriptor. Seems to fix a problem reported by Greg Hurrell in GitHub issue 941.

* Add a small dance to daemon() to reattach tmux to the user's namespace (which allows access to the clipboard) on OS X 10.10 and above.

* Merge branch 'master' of github.com:tmux/tmux

* Update CHANGES.

* Linux build fixes

* Merge branch 'obsd-master'

* Do not leak command, from David CARLIER.

* tparm() fix for Solaris.

* signal.h for utempter, from David CARLIER.

* Add a timeout to prevent the sequences which wait for a specific terminator (OSC, APC and DCS) waiting forever, which helps to avoid garbage (cat /dev/random) locking up panes completely. This (and the last commit) prompted by a discussion with theo.

* Remove unused variable.

* Be more strict about escape sequences that rename windows or set titles: ignore any that not valid UTF-8 outright, and for good measure pass the result through our UTF-8-aware vis(3).

* Support SIGUSR2 to stop and start logging for an existing server. Also we currently only have two log levels so just use -v and -vv rather than -v and -vvvv, and clarify the man page entry for -v.

* Update CHANGES.

* Typo/style; plus man page escaping from jmc.

* Merge branch 'obsd-master'

* Make set-clipboard a three-state option so tmux itself can ignore the sequencess.

* Merge branch 'obsd-master'

* Foreground colours with the bright attribute set need to use the bright entries in the palette. GitHub issue 954.

* Merge branch 'obsd-master'

* Style and spacing nits.

* Shut up a warning.

* Update TODO.

* Add setrgbf setrgbb.

* Differences to OpenBSD.

* Build fixes.

* time.h here too.

* Need time.h.

* Merge branch 'obsd-master'

* Some changes that will appear when we sync up.

* Some applications like vi(1) and tmux until 10 minutes or so ago, do not redraw on SIGWINCH if the size returns to the original size between the original SIGWINCH and when they get around to calling TIOCGWINSZ. So use the existing resize timer to introduce a small delay between the two resizes.

* It is not OK to ignore SIGWINCH if SIOCGWINSZ reports the size has unchanged, because it may have changed and changed back in the time between us getting the signal and calling ioctl(). Always redraw when we see SIGWINCH.

* Because we defer actually resizing applications (calling TIOCSWINSZ) until the end of the server loop, tmux may have gone through several internal resizes in between. This can be a problem if the final size is the same as the initial size (what the application things it currently is), because the application may choose not to redraw, assuming the screen state is unchanged, when in fact tmux has thrown away parts of the screen, assuming the application will redraw them.

* Look for setrgbf and setrgbb terminfo extensions for RGB colour. This is the most reasonable of the various (some bizarre) suggestions for capabilities.

* Rewrite of choose mode, both to simplify and tidy the code and to add some modern features.

* Merge branch 'obsd-master'

* Preserve search string when entering prompt again.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Add a flag to stop the prompt input being expanded.

* Store a copy of the old status line, will be needed soon for new choose mode.

* Function to count clients.

* Merge branch 'obsd-master'

* Add ||, && format operators and C: to search pane content.

* Merge branch 'obsd-master'

* Add m: for fnmatch(3) format matching.

* Merge branch 'obsd-master'

* Do not factor in screen_hsize() for the visible copy mode screen when adjusting the selection, it should never have any useful history (and when it does, after resize, we shouldn't use it). From Michal Mazurek.

* Tweak text to mention initial size, from John Hood.

* Update release text.

* Merge branch '2.5-rc'

* 2.5.

* Add to CHANGES.

* Merge branch 'obsd-master'

* Support OSC 10 and 11 to set foreground and background colours, from "bertnp" in GitHub issue 942.

* Changes in master.

* Merge branch 'obsd-master'

* Change so that sessions created detached (-d or no client) are always 80x24 and the status line is not applied until they attach. Also make -x and -y work for control clients whether the session is detached or not.

* Add test for -x and -y too.

* Also recalculate session sizes when refreh-client -C is used. GitHub issue 947.

* Do not need /dev/null.

* Add some tests.

* Merge branch 'obsd-master'

* Tidy command prompt callbacks and pass in the client.

* Need to check libutil for fparseln.

* Merge branch 'obsd-master'

* Missed during merge.

* Line length and spaces to tabs.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Check the terminfo(5) U8 capability and disable using UTF-8 for ACS if it is present and zero. This is useful for users with terminals or fonts that do not correctly support UTF-8 line drawing characters. GitHub issue 927, reported by Hiroaki Yamazoe and Akinori Hattori.

* Notify layout changed when choosing predefined layouts, from Joshua Brot.

* Merge branch 'obsd-master'

* The Konsole SU bug means it can't clear the entire scroll region (it ignores if >= size, not if > as I first thought). So we can't effectively fix it in code - remove the workarounds which just cause bugs on other terminals.

* Merge branch 'obsd-master'

* Scroll the right number of lines off the region when clearing.

* Some other unused variables.

* Merge branch '2.5-rc'

* 2.5-rc2.

* Reset updated flag when restarting job so new output is detected, reported by Gregory Pakosz in GitHub issue 922.

* Merge branch 'obsd-master'

* Compare >= for columns not >.

* Can scroll away full lines to clear them too.

* Remove an unused variable.

* Merge branch 'obsd-master'

* Merge branch '2.5-rc'

* When expanding a line in order to clear it, we need to use the default background colour - there may be portions that we do not want to clear with the new background colour.

* ECH needs to use background colour.

* Need to clear tty context before using it.

* Cannot rely on cursor position after DL and IL (some terminals move to column 0, some do not).

* Merge branch 'obsd-master'

* Need to store bg for ECH.

* Cannot rely on cursor position after DL and IL (some terminals move to column 0, some do not).

* Need to clear tty context before using it.

* Only redraw single client, and tweak some logging.

* Merge branch 'obsd-master'

* Scrolling needs to use background colour.

* Regions can't be smaller than 2 so don't try to clear them by scrolling if so.

* Can use INDN to clear regions with default background colour if margins are supported.

* ECH needs to use background colour.

* Store copy mode search string in pane so search-again command works even if you exit and reenter copy mode (it doesn't remember the position, just the search string), suggested by espie@.

* Merge branch '2.5-rc'

* Clear to start of screen needs to use background colour.

* Need to redraw out to cellsize (total cells used in a line) rather than cellused (only non-space cells) because there may be cells with a nondefault background.

* Merge branch 'obsd-master'

* Clear to start of screen needs to use background colour.

* Need to redraw out to cellsize (total cells used in a line) rather than cellused (only non-space cells) because there may be cells with a nondefault background.

* Merge branch 'obsd-master'

* Make environ_log prefix take a format.

* Change how we resolve which pane is dragging when there are multiple options - choose the largest pane, which is more likely to be the one the user wants to resize. Prompted by a report from Thomas Sattler.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Move to the right cursor position before using spaces to clear.

* Prevent control clients from affecting the session size until they have specified a size with refresh-client -C. Prompted by a different change with the same purpose from George Nachman.

* We can use ECH to clear sections of lines, so use it for internal panes (that don't touch an edge). Move all the tty clear code into two common functions rather than having the same bunch of checks everywhere.

* Merge branch 'obsd-master'

* Expand formats in option names and add -F flag to do so in option values as well.

* Merge branch 'obsd-master'

* Insert copy mode bindings at the right place in the command queue.

* Typo.

* Back to master.

* Fix test.

* 2.5-rc and changes.

* Merge branch 'master' of github.com:tmux/tmux

* Update TODO.

* Merge branch 'obsd-master'

* If the target pane for send-keys in in a mode with a key table (that is, copy mode), then look the key up in the table and fire any command instead of delivering the key to the pane directly where it will be ignored. This makes C-b C-b (send-prefix) work in copy mode again.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* If the current screen was complex enough, it was possible to make redraw itself hit the "terminal can't keep up" check. To avoid this, record how much data we send during redraw (we know we will be starting with 0) and skip the check until it has been flushed. GitHub issue 912.

* Set current pane in rotate-window.

* Add a format for the name of the pane's mode, lets it be used as a conditional for key bindings.

* Up to now, tmux sees \033\033[OA as M-Up and since we turned on xterm-keys by default, generates \033[1;3A instead of \033\033[OA. Unfortunately this confuses vi, which doesn't understand xterm keys and now sees Escape+Up pressed within escape-time as Escape followed by A.

* Add some formats to look at the session window stack, suggested by Scott ROCHFORD.

* Merge branch 'obsd-master'

* Some new notifications, mainly for active pane and current window and session:

* Merge branch 'obsd-master'

* Add a format for the last search string in copy mode and fix the prompt so it can work when in -I, suggested by Suraj N Kurapati.

* Merge branch 'obsd-master'

* In order that people can use formats like #D in #() in the status line and not have to wait for an update when they change pane, we allow commands to run more than once a second if the expanded form changes. Unfortunately this can mean them being run far too often (pretty much continually) when multiple clients exist, because some formats (including #D) will always differ between clients.

* .NOTPARALLEL.

* Add regress/Makefile.

* Make example match reality; Greg Hurrell.

* Add to TODO.

* Merge branch 'obsd-master'

* Fix UTF-8 combining characters in column 0, based on a diff from Keith Winstein.

* Merge branch 'obsd-master'

* Merge branch 'master' of github.com:tmux/tmux

* Test that kill-session closes the panes (processes end up dead).

* Log what is happening with window and session reference counts much more obviously.

* Remove a reference from the right window when removing from a winlink's list.

* Do not put the window on the alerts queue and add a reference unless the alert is enabled and we are actually going to add the alerts event.

* Merge branch 'obsd-master'

* Konsole incorrectly ignores SU (CSI S) if the parameter is bigger than the scroll region, so clamp it. Reported by Moritz Bunkus.

* Merge branch 'obsd-master'

* Default for xterm-keys was wrong, stop documenting it.

* source-file too.

* Tests for some new session and new window bits.

* Merge branch 'obsd-master'

* Make full width panes try to play more nicely with terminal copy and paste by avoiding explicit line wraps if we think the terminal will wrap anyway.

* When we write out the grid including escape sequences, an SGR 0 needs to cause the colours to be written again. Also treat colours separately from attributes so that RGB colours will work.

* Merge branch 'obsd-master'

* Do not update TERM into config file parsing has finished.

* Block the initial client if there is one until the configuration file has finished loading.

* Another test.

* Remove stuff from TODO.

* And another test.

* Merge branch 'obsd-master'

* And another.

* Try to start writing test scripts.

* if-shell doesn't need to queue its error message into a callback, and in fact it can't do so because the item it was working with will have been freed. Reported by Daniel Hahler.

* Merge branch 'obsd-master'

* Only use ED for clear screen if at the bottom, same as earlier fix to clear end of screen.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Memory leak from David CARLIER.

* Do not need getopt.h.

* Merge branch 'obsd-master'

* Can't collect UTF-8 characters of more than one byte at the moment.

* new -A should use the session name.

* Get rid of the extra layer of flags and cmd_prepare() and just store the CMD_FIND_* flags in the cmd_entry and call it for the command. Commands with special requirements call it themselves and update the target for hooks to use.

* Merge branch 'obsd-master'

* Mouse bindings and hooks set up an initial current state when running a command. This is used for the session, window and pane for all commands in the command sequence if there is no -t or -s.

* We need to collect UTF-8 characters so that width != 1 characters are correctly flushed.

* Merge branch 'obsd-master'

* Fix if-shell without a client (so in the config file). Reported by Theo Buehler.

* Typo in example.

* Memory leaks, from David CARLIER.

* Merge branch 'obsd-master'

* Log error properly when no current state, and some other minor tweaks.

* Make sure cmd_find_from_* clear the state if they fail.

* Rename a variable.

* Merge branch 'obsd-master'

* Clear shared state if not filling it in.

* Make the cmd_find_* functions more obvious when looking for a client, rather than having it inside other functions. Should be no change to the way targets are resolved just yet.

* Key needs to be initialized to zero now it has flags in it.

* Merge branch 'obsd-master'

* Style nits and an unused struct.

* Add cmd_find_from_winlink_pane and use it in a couple of places, and make functions that can't fail void.

* Merge branch 'obsd-master'

* It is annoying that the copy mode key table (or any other key table) will suppress root key table bindings. So change to always check the root table if no binding is found in the current table (whether it be the prefix table from pressing the prefix or the copy mode table from a pane).

* Merge branch 'obsd-master'

* More unnecessary arguments now winlink points back to session.

* History needs to be loaded after config parsing is done - now that commands are queued, that's in cfg_done not after start_cfg finishes.

* Store state shared between multiple commands in the queue in a shared structure.

* Do not run the config file in the context of the first client, instead use no client like we did before. This means commands like new-session won't try to attach if they are in the config file.

* Fix after merge

* Merge branch 'obsd-master'

* Typo; Daniel Hahler.

* Do not need getopt.h for getopt, from Eric N Vander Weele.

* Merge branch 'master' of github.com:tmux/tmux

* getptmfd() and fdforkpty() compat.

* Use fdforkpty() instead of our own unwrapped versions.

* Merge branch 'obsd-master'

* Only set up a current target for mouse key bindings. Fixes:

* Notes on target resolution.

* Turn on debug if $VERSION is master rather than commenting and uncommenting.

* Merge branch 'obsd-master'

* Merge tag '2.4'

* Enter date of release.

* Missing :.

* Changes to CHANGES.

* Now that struct winlink has a session pointer, can remove some arguments.

* Update CHANGES file

* There is no real need for window_printable_flags to allocate, make it return a buffer from the stack.

* Update TODO.

* If a #() command doesn't exit, use its most recent line of output (it must be a full line). Don't let it redraw the status line more than once a second.

* Add to TODO.

* load_cfg returns < 0 on error, not != 0. Problem reported by Kaushal Modi.

* Merge branch 'obsd-master'

* load_cfg returns < 0 on error, not != 0. Problem reported by Kaushal Modi.

* Merge branch 'obsd-master'

* Add a suspend helper function, and do not allow detaching or suspending while already doing so.

* Version 2.4.

* Missed freezero.

* Style nits and a missing cast.

* Merge branch 'obsd-master'

* Missed freezero.

* When the data we have buffered to write to a terminal grows beyond a reasonable amount (currently width * height * 8 bytes), discard all output to the terminal and start trying to redraw periodically instead. Continue with this until the amount of data we are trying to write falls to a low level again.

* Merge branch 'obsd-master'

* Revert use of DECSLRM on iTerm2, it doesn't help as much as we throught, and there are some question marks about it's support.

* On terminals without DECSLRM, when a pane that is less than the full with of the terminal scrolls, tmux needs to redraw the entire pane. This results in a large amount of output data which can cause slow terminals to struggle, particularly when many lines are scrolled together quickly.

* Merge branch 'obsd-master'

* Detect iTerm2 and use DECSLRM for it as well.

* Merge branch 'obsd-master'

* Add a format for number of bytes writtent to client, useful for debugging.

* Do not check for BCE for a background colour that isn't needed, use colour 8 instead.

* Merge branch 'obsd-master'

* Include client name in key logging.

* Merge branch 'obsd-master'

* Don't bother moving the cursor for empty lines.

* Remove a couple of redraw flags that no longer have any effect.

* Merge branch 'obsd-master'

* Memory leak, from David CARLIER.

* Use EL1 to clear lines when redrawing the leftmost pane, rather than spaces.

* Accept NULL pointer.

* Update imsg*.c from OpenBSD.

* Merge branch 'obsd-master'

* Add Home and End for copy mode.

* Try again to resolve problems with mistaking sessions for windows: now do not look up windows as sessions (and panes as windows) when they are qualified with a ':' or a '.'. So 'foo' as a window target will look for windows and sessions called 'foo', but ':foo' will only look for windows, and 'foo:' only for sessions. This means the common case of using an unadorned session as a window target (send -tfoo) should continue to work, but an explicit window will not get confused with a session (send -t:foo).

* Give each client a name. This defaults to the tty name as before but falls back to an alternative if the tty name is not available. This is clearer than overloading the client ttyname member and allows us to remove the path stored in the tty struct, it should always be the same as the client.

* cfg_file can be static.

* Merge branch 'obsd-master'

* Write raw strings in one go rather than character at a time.

* Merge branch 'master' of github.com:tmux/tmux

* Update imsg*.[ch] from OpenBSD, add some compat bits it needs and remove some bits it doesn't.

* Merge branch 'obsd-master'

* Show count of search results in copy mode.

* Remove coverage and profile flags.

* Tweak some comments.

* Can shorten these by using LIBOBJ.

* Merge branch 'master' of github.com:tmux/tmux

* Bump automake and autoconf versions.

* Merge branch 'obsd-master'

* DEFS -> AM_CPPFLAGS.

* Should not need -D_POSIX_PTHREAD_SEMANTICS.

* Use AC_USE_SYSTEM_EXTENSIONS and explicitly check for daemon() in headers.

* Add support for the strikethrough attribute (SGR 9), using the new smxx terminfo capability. This means there are now nine attribute bits, so anything above 0xff uses an extended cell.

* Merge branch 'master' of github.com:tmux/tmux

* Add to TODO.

* Merge branch 'obsd-master'

* Do not test for term.h since we don't use the result.

* Use uid_t for UID not u_int.

* Some __unused.

* Bad merge.

* Merge branch 'obsd-master'

* Fix movement after select-line, from Omar Sandoval.

* Fix pane movement by direction (up, down, left, right) when pane-border-status is set, from KOIE Hidetaka.

* Merge branch 'obsd-master'

* Add to TODO.

* Tweak test for program_invocation_short_name.

* Clarify that release instructions will install.

* Fix some warnings.

* Fix a couple of argument types.

* Add h and l for collapse and expand in choose mode with vi(1) keys, from Gregory Pakosz.

* Merge branch 'obsd-master'

* Redraw after killp -a.

* Merge branch 'obsd-master'

* Invalidate the cursor when we think we should have wrapped.

* Merge branch 'obsd-master'

* Try to avoid moving the cursor to the start of the next line when printing cells if it is already at the very end of the line and the terminal will wrap it to the next line itself, this means terminals still see it as a wrapped line for the purposes of their own mouse selection. Reported by millert@.

* Merge branch 'obsd-master'

* Log where panes are created.

* Merge branch 'obsd-master'

* Revert previous, breaks normal short targets, reported by Theo Buehler.

* Merge branch 'obsd-master'

* Fix calculation of size for full size splits.

* Only look for window and pane parts of target as a sesson and window if they look like an ID.

* Merge branch 'obsd-master'

* Merge branch 'master' of github.com:tmux/tmux

* Can only check for one with AC_CHECK_LIB.

* Clear the bracket paste mode when in the command prompt.

* Merge branch 'obsd-master'

* Move the client identify (display-panes) code into server-client.c.

* Move server_fill_environ into environ.c and move some other common code into it.

* No extra : for errx and warnx.

* Compat code for strndup and strnlen.

* Merge branch 'master' of github.com:tmux/tmux

* Solaris fixes, mostly from Dagobert Michelsen.

* Merge branch 'obsd-master'

* Skip over padding cells when moving the cursor left or right.

* Merge branch 'obsd-master'

* Handle empty options correctly.

* Always send smkx to the terminal outside, the keys we get from terminfo are the keys when it is on.

* Merge branch 'obsd-master'

* Add a helper function for the most common format_create/defaults/expand pattern.

* Merge branch 'obsd-master'

* Need to flush before writing out cells we are not collecting, also add some extra logging.

* If moving cells outside the current used count, update it.

* Merge branch 'obsd-master'

* Merge branch 'master' of github.com:tmux/tmux

* Expand on OS X faffing, based on a diff from Kurtis Rader.

* Collect strings correctly when on terminals that don't support UTF-8.

* When redrawing a combined UTF-8 characters in its existing position, need to save and restore the cursor so that the next character goes into the right place.

* Merge branch 'obsd-master'

* Change to vim(1) script by Eric Pruitt.

* If splitw -b is used, insert the new pane before the current one in the pane list. This means the numbering is in order (for example for display-panes) and fixes a problem with redrawing the active pane borders.

* Merge branch 'obsd-master'

* Minor bits: fix an array size, add comment, make grid_cell_entry static.

* Merge branch 'obsd-master'

* Change pane redraw to collect cells up as well, and simplify it a bit.

* Merge branch 'obsd-master'

* Don't need is1,is2,is3 so remove them.

* Merge branch 'obsd-master'

* Scrolling at least needs to be flushed before sending EL to the terminal (but it is simpler to flush everything, so do that instead).

* Reflect OBSD Makefile changes in Makefile.am

* Merge branch 'obsd-master'

* Improve NetBSD KERN_PROC2 bit, mostly from Kamil Rytarowski.

* Add SGR 28 to clear hidden flag.

* Add to TODO.

* Update TODO.

* There are buggy terminals out there that do not move the cursor to 0,0 after CSR, so invalidate the cursor position rather than assuming 0,0.

* Handle insert cells when cursor at edge of screen correctly, and do a full flush before insert.

* Merge clear-history into capture-pane.

* Merge branch 'obsd-master'

* Style nits.

* Merge branch 'obsd-master'

* Do not clear to end of screen unless the pane is at the bottom.

* Merge branch 'master' of github.com:tmux/tmux

* Copy 24-bit-color.sh from iTerm2.

* Merge branch 'obsd-master'

* Hide or fix some warnings.

* "status bar" -> "status line" for consistency, from Benjamin Dopplinger.

* Remove vis.h.

* Merge branch 'obsd-master'

* Make source-file look for files relative to the client working directory (like load-buffer and save-buffer), from Chris Pickel. Also break the where-is-this-file code out into its own function for loadb and saveb.

* Merge branch 'obsd-master'

* Collected cells may still need to be extended for RGB colours.

* Add not delete the event if more to write.

* Don't use a bufferevent for the tty, so we can keep better track of what is being written and when.

* Instead of numbering session groups, give them a name which may be given to -t instead of a target session. Also allow them to contain only one session.

* Document refresh-client -C.

* Add to TODO.

* Merge branch 'obsd-master'

* Break the message storage function into its own function, useful for debugging.

* Merge branch 'obsd-master'

* Don't lie about the default size in the man page.

* Combining characters need a full flush.

* Merge branch 'obsd-master'

* When an ordinary (not collected) cell is received, we need to flush any delayed scrolling before drawing it.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Another helper function to write to terminal and log.

* Do not adjust region lower by pane offset when scrolling up, it is already an absolute position.

* Merge branch 'obsd-master'

* window_copy_pagedown shouldn't reset the mode anymore, instead let the caller do it so it can free the marks. Problem reported by attila at stalphonsos dot com.

* Add support for scroll up escape sequence (CSI S) and use it when possible instead of sending individual line feeds.

* Collect sequences of printable ASCII characters and process them together instead of handling them one by one. This is significantly faster. Sequences are terminated when we reach the end of the line, fill the internal buffer, or a different character is seen by the input parser (an escape sequence, or UTF-8).

* Fix clear start of line.

* Merge branch 'obsd-master'

* Some other tidying bits.

* Add a helper to store a cell, and some tidying.

* Remove unnecessary duplicate check.

* Improve some of the logging on resize.

* Give an example, from Timothee Cour.

* Merge branch 'obsd-master'

* Log size of output buffer as well.

* Trying to avoid the occasional newline by saving the last cell on screen is not actually helping us much and just adds complexity, so don't bother.

* Tweak how much we expand lines by.

* Remove event watermarks, don't work well enough to be worth it.

* Merge branch 'obsd-master'

* Do not clear the scroll region, instead set it to the scroll region we actually want.

* Remove a debugging leftover.

* Merge branch 'obsd-master'

* DECSLRM in xterm(1) appears to have a quirk where it can generate an extra scroll of the entire terminal; issuing DECSTBM first prevents this. Do that for now.

* Merge branch 'obsd-master'

* Unfortunately DECFRA does not handle default colours properly (it does not reset colours when in SGR 0), so we can't use it without more trouble than it is worth. Abandon the idea for now.

* Merge branch 'master' of github.com:tmux/tmux

* Look for libtinfo before libncurses.

* Merge branch 'obsd-master'

* Use DECFRA on VT420 compatible terminals (so, xterm) and ED on all others for clearing panes.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Do not go through the whole attributes setting process if the new cell is the same as the previous one.

* Add BCE for clear to start of screen, which was somehow missed.

* Merge branch 'obsd-master'

* Cancel key table when switching session, unless the key is going to repeat. Reported by Amos Bird.

* Merge branch 'obsd-master'

* Do not declare program_invocation_short_name because people can't make up their mind what type it should be.

* Fix logging of CSI parameters.

* Only redraw the modified character when adding combining characters, not the whole line.

* Merge branch 'master' of github.com:tmux/tmux

* Update sys/queue.h from OpenBSD.

* Merge branch 'obsd-master'

* Missing va_end, from Anton Lindqvist.

* Merge branch 'obsd-master'

* Cache status line position to reduce option lookups during output.

* Expand lines more aggressively to reduce rate of allocations.

* Merge branch 'obsd-master'

* Add a window or pane id "tag" to each format tree and use it to separate jobs, this means that if the same job is used for different windows or panes (for example in pane-border-format), it will be run separately for each pane.

* Merge branch 'obsd-master'

* Implement "all event" (1003) mouse mode but in a way that works. The main issue is that if we have two panes, A with 1002 and B with 1003, we need to set 1003 outside tmux in order to get all the mouse events, but then we need to suppress the ones that pane A doesn't want. This is easy in SGR mouse mode, because buttons == 3 is only used for movement events (for other events the trailing m/M marks a release instead), but in normal mouse mode we can't tell so easily. So for that, look at the previous event instead - if it is drag+release as well, then the current event is a movement event.

* Merge branch 'master' of github.com:tmux/tmux

* Add wchar.h to compat.h, from Koichi Shiraishi.

* Merge branch 'obsd-master'

* When a flag option is used in a format, it should use the number form not string.

* Merge branch 'obsd-master'

* Add -n to break-pane.

* Merge branch 'obsd-master'

* Do not clear the key table when changing session on a client, so that switch-client and friends work with bind -n.

* This link is better.

* Merge branch 'master' of github.com:tmux/tmux

* Add ISSUE_TEMPLATE.

* Merge branch 'obsd-master'

* Clear option before adding to array if no -a, reported by Michael Nickerson.

* -paths.h.

* Bad merge.

* Merge branch 'obsd-master'

* Revert previous for now, it will break TERM=screen.

* If xterm-keys is on, use xterm(1) style keys for Home and End as well as modified keys.

* compat/* should not include tmux.h.

* Merge branch 'obsd-master'

* Fix set -u on array options.

* Make update-environment an array as well.

* Convert terminal-overrides to an array option.

* Remove some lies about terminal-overrides from tmux.1.

* Merge branch 'obsd-master'

* server-info can become an alias rather than a command.

* Add support for custom command aliases, this is an array option which contains items of the form "alias=command". This is consulted when an unknown command is parsed.

* If given an array option without an index either show or set all items, and support -a for array options. Allow the separator for set to be specified in the options table (will be used for backwards compatibility later).

* Merge branch 'obsd-master'

* pty.c needs compat.h.

* Shorten a long line, and don't leak buffer in paste_add if size is zero.

* Define away pledge() on !OpenBSD.

* Use forkpty() except on OpenBSD.

* Merge branch 'obsd-master'

* Open /dev/ptm before pledge() and save it to be used for PTMGET later (this means inlining forkpty()).

* Merge branch 'obsd-master'

* Merge branch 'master' of github.com:tmux/tmux

* Add b64_pton as well.

* Accept the OSC 52 escape sequence inside tmux to add a new buffer, from harry dot gindi at live dot com.

* Merge branch 'obsd-master'

* Print error rather than fatal() if tcgetattr() fails, which is much more useful to user.

* Look for ncursesw as well as ncurses, based on a change from Bert van Hall.

* Put version in log in portable tmux.

* If --enable-{utf8proc,utempter} is given, do not build without it.

* vis.h comes from compat.h.

* Merge branch 'obsd-master'

* Plain stravis() because it will mangle UTF-8 characters, so add utf8_stravis() which calls our existing utf8_strvis() and use it instead

* Merge branch 'obsd-master'

* Run arguments through vis() as well when printing them.

* Do not reset idx, it has just been set.

* options_match needs to explicitly check for user options.

* Merge branch 'obsd-master'

* Correctly handle -style options without all of a corresponding -fg/-bg/-attr.

* Fix VIS_DQ check.

* Merge branch 'obsd-master'

* We need VIS_DQ in vis.h as well.

* Revert WIP parts of previous I didn't mean to commit yet.

* getopt() has a struct option so just return to using options_entry.

* Remove vis.h which comes from compat.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* It is silly for cmd_list_parse to return an integer error when it could just return NULL.

* -q flag now needs to be checked in a couple more places.

* Major tidy up and rework of options tree and set-option/show-options commands this pushes more of the code into options.c and ties it more closely to the options table rather than having an unnecessary split. Also add support for array options (will be used later). Only (intentional) user visible change is that show-options output is now passed through vis(3) with VIS_DQ so quotes are escaped.

* Remove unused quiet option.

* Append needs to go old,new not new,old...

* Merge branch 'obsd-master'

* killp -a should not kill the window if only one pane.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* options_get_style return const too.

* Make options_get_string return const string.

* Add -E to detach-client to exec a command to replace the client instead of exiting it, useful if tmux wasn't exec'd itself. From Jenna Magius.

* Merge branch 'obsd-master'

* Simplify appending to string options.

* Merge branch 'obsd-master'

* Put all palette functions together in the file.

* Merge branch 'obsd-master'

* aixterm colours can be used if -2 is given, as well as if TERM tells us the terminal has >=16 colours.

* Erm the aixterm colours should start at 8, not 7.

* Fix setting the palette of aixterm colours (90-97).

* Merge branch 'obsd-master'

* Be less aggressive about turning margins off.

* Add some missing special keys to key_string_lookup_key, fix a mouse check in server_client_handle_key, and tweak a comment.

* Merge branch 'obsd-master'

* Add a format for terminal type.

* Use a macro for looking up tty types.

* Merge branch 'obsd-master'

* Some tidying and tweaks to options code.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Minor tidying in a couple of commands.

* 15 minutes is not 1800 seconds, but just remove lock-after-time because it won't work for Linux folks without additional configuration

* -temacs-copy should now be -Tcopy-mode

* Merge branch 'master' of github.com:tmux/tmux

* Change around the example .tmux.conf to show some newer features.

* Need to escape ; twice because the command list parser will eat one, reported by Theo Buehler.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Quote backslash as well for %%%.

* Some manpage fixes: rephrase a convoluted sentence, make the names of some keys more standard, and use Ql instead of Dq.

* Merge branch 'obsd-master'

* avoid unneccessary markup; tweaked and ok nicm

* Merge branch 'obsd-master'

* Add a format for the version.

* Add %if/%endif for conditionals when parsing configuration files, the argument is a format (the new == and != are useful).

* Add simple comparisons in formats: #{==:a,b} and #{!=:a,b} ("a" and "b" are expanded so can compare formats). And expand the condition to #{?a,b,c} (the "a" part) if it doesn't work as a simple lookup.

* Merge branch 'obsd-master'

* source-file -q needs to apply to glob(3) too.

* Run the source-file pattern through glob(3).

* Tweak TODO file.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Add note about ccc and initc so people who want it can see it is possible.

* Add support for the OSC 4 and OSC 104 palette setting escape sequences, from S Gilles.

* Merge branch 'obsd-master'

* Nits found with clang.

* Incremental search in copy mode (on for emacs keys by default) - much the same as normal searching but updates the cursor position and marked search terms as you type. C-r and C-s in the prompt repeat the search, once finished searching (with Enter), N and n work as before.

* Merge branch 'obsd-master'

* Highlight all occurrences of search string after searching in copy mode.

* Merge branch 'obsd-master'

* Escape backspace for capture-pane -P, from George Nachman.

* Merge branch 'obsd-master'

* Change the xterm-keys option to default to on, so that tmux will generate xterm(1) escape sequences for function keys with modifiers.

* Merge branch 'obsd-master'

* Fix the prefer unattached session behaviour of attach-session/switch-client, reported by Thomas Sattle.

* utempter is no longer the default, and mention ncurses.

* Merge branch 'obsd-master'

* Fix up winlink lists after swap-window.

* Merge branch 'obsd-master'

* -N without arguments needs to set prefix count for the mode command, so  that M-1 etc work. Reported by Theo Buehler.

* Merge branch 'obsd-master'

* Spacing nits.

* Merge branch 'obsd-master'

* Fix send-keys with UTF-8.

* Merge branch 'obsd-master'

* Do not clear the prompt when a message is shown, just leave it around and return to it when the message is finished.

* Merge branch 'obsd-master'

* Only skip moving the cursor if it is already in the last position _on the same line_, fixes redraw bug reported by patrick keshishian.

* Make prefix work in all tables (except the prefix table). Users who want to avoid this can set prefix to "none" and bind send-prefix themselves. Allows C-b t be bound in the copy mode tables again, pointed out by millert@.

* Merge branch 'obsd-master'

* Fix check for cursor at end of line.

* Merge branch 'obsd-master'

* Make send -N work for all keys, not just in copy mode. From Artem Fokin.

* Merge branch 'obsd-master'

* When comparing ocy to orlower in tty_cmd_cell, there is no need to add yoff (because they are both already relative to the pane). Also fix some other minor nits.

* Merge branch 'obsd-master'

* The mouse valid flag needs to be correct before we fire the dragging callback, so move the callback outside of server_client_check_mouse and use a new special key code to indicate it.

* Merge branch 'obsd-master'

* If in the middle of a drag, don't use an invalid key, just use KEYC_MOUSE as a placeholder. Reported by Artem Fokin.

* Fix so that we work out the right pane from mouse events - we were doing so too early, before the mouse event was necessarily valid, so could end up using the pane from the previous mouse event, or the active pane.

* Make the selection able to exist independent of the cursor position, so that it is not affected by scrolling. If MouseDragEnd1Pane is bound to the new "stop-selection" command:

* Merge branch 'obsd-master'

* For mouse keys, use the mouse pane as the default current pane.

* Error on invalid modifier keys.

* Merge branch 'obsd-master'

* Key running commands for #() by the unexpanded command, and run them again if the expanded form changes (otherwise at most once per second as usual). Fixes issues reported by Gregory Pakosz.

* Merge branch 'obsd-master'

* Fix calculation of whether we need a region for drawing a cell (only if full width and at the edge of the region), otherwise clear the region entirely.

* Merge branch 'obsd-master'

* Don't error if renaming a session to its current name, from shik dot chen at gmail dot com.

* Do not stop dragging when the wheel is pressed, from Artem Fokin.

* Merge branch 'obsd-master'

* Initialize modeprefix to 1 properly in window_pane_create, from Artem Fokin.

* Merge branch 'obsd-master'

* The target validity check used window_pane_visible but that may be false if the pane is zoomed, so instead add a new function to just check if the pane is actually on screen (most commands still want to accept panes invisible by zoom). Also reject panes outside the window for various special targets. Problem reported by Sean Haugh.

* Merge branch 'obsd-master'

* Turn on margins, with a couple of fixes (only limit to the pane for line feeds, and do not move cursor to end for full width panes).

* And of course I just find a bug, disable previous for now.

* Initial attempt to make use of left and right margins if the terminal supports them (that is, if it advertises itself as a VT420 - probably just xterm). These are the vertical equivalent of the scroll region and allow much faster scrolling of panes that do not take up the full width of the terminal.

* Merge branch 'obsd-master'

* Add copy-pipe-and-cancel, from Artem Fokin.

* Merge branch 'obsd-master'

* rotate-window needs to unzoom, problem reported by Sean Haugh.

* Merge branch 'obsd-master'

* Apply the right fix for run -b, used the wrong diff before.

* Do not execute commands for a client until it has identified, fixes problem reported by Frank Terbeck.

* Merge branch 'obsd-master'

* Do not crash with run-shell -b and no window pane available, reported by Sergei Dyshel.

* Merge branch 'obsd-master'

* Do not try to set the CHANGED flag on windows with no active pane, fixes problem reported by Nelo-T Wallus.

* Merge branch 'obsd-master'

* enum values need to fit in 32 bits; we only use enum for numbering and Unicode characters fit in 24 bits, so we can leave key_code as 64 bits and change KEYC_BASE down to 0x10000000.

* Note about TERM.

* Merge branch 'obsd-master'

* Make an empty state on error rather than leaving something partially created (which now is now a fatal() later).

* Merge branch 'obsd-master'

* Clear window alert flags after setting winlink alert flags, fixes problem reported by Tommy Allen.

* Do not force symbols to width 1, from Yen Chi Hsuan.

* Merge branch 'master' of github.com:tmux/tmux

* Add a CONTRIBUTING file with some information on opening issues.

* Merge branch 'obsd-master'

* Buffer name can be NULL, check before strdup().

* Merge branch 'obsd-master'

* Do not handle activity or silence alerts in the current window, reported by jasper@.

* Merge branch 'obsd-master'

* Add %%% to substitute with quotes escaped (convert " to \"). Use this for the prompts in copy mode. Fixes problems with jumping to ' reported by Theo Buehler.

* Put AM_* back, but this time do a dance in configure.ac so that we can keep using CFLAGS for the tests.

* Merge branch 'obsd-master'

* Do not have a default binding for C-b in copy-mode-vi or it conflicts with the default prefix. Reported by natano@.

* Alerts are too slow, so rather than walking all sessions and windows, add a link of winlinks to each window and a pointer to the session to each winlink. Also rewrite the alerts processing to return to the old behaviour (alert in any window sets the flag on any winlink).

* Merge branch 'obsd-master'

* Move session-create hook out of session_create so it works with grouped sessions.

* Merge branch 'master' of github.com:tmux/tmux

* Revert the AM_* change, I can't find a way to make AC_CHECK_HEADER use LIBEVENT_CFLAGS.

* Merge branch 'obsd-master'

* Clear cell entry with grid_default_entry not grid_default_cell.

* I don't remember why we have make clean in dist-hook; remove it.

* *.h can go in dist_tmux_SOURCES, from Dilyan Palauzov.

* xterm-keys was in the wrong place in the list; Dilyan Palauzov.

* Merge branch 'master' of github.com:tmux/tmux

* Rename found_debug to enable_debug.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Make grid_clear_cell set up the entry properly for 256 and RGB cells.

* Tweak a couple of log statements.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Give each item on queue a name for better logging.

* Zero dirty count after flushing.

* Store the right size in the pipe offset for pipe-pane.

* Preserve existing AM_CPPFLAGS and AM_LDFLAGS values.

* One extra empty line not in OpenBSD, and tweak a #define style.

* CFLAGS/CPPFLAGS/LDFLAGS -> AM_*, requested by Dilyan Palauzov.

* Can use enable_* rather than adding our own found_* variables, from Dilyan Palauzov.

* Merge branch 'obsd-master'

* Use notifys for alerts too.

* Use the notify name string instead of going via an enum and change existing hooks to use notifys instead.

* Merge branch 'obsd-master'

* Update TODO.

* Add hook_session and hook_window formats to get information on the affected session or window when a hook fires. Enable session-created and session-closed hooks now that that is available.

* Provide a way for hooks to tag formats onto the commands they fire so that the user can get at additional information - now used for the "hook" format, more to come.

* Notifys can go via the command queue instead of using their own queue.

* Mass rename struct cmd_q to struct cmdq_item and related.

* Merge branch 'obsd-master'

* Rewrite command queue handling. Each client still has a command queue, but there is also now a global command queue. Instead of command queues being dispatched on demand from wherever the command happens to be added, they are now all dispatched from the top level server loop. Command queues may now also include callbacks as well as commands, and items may be inserted after the current command as well as at the end.

* Merge branch 'obsd-master'

* Only use pane with run-shell if -t is given.

* Merge branch 'obsd-master'

* zap double .Pp;

* Merge branch 'obsd-master'

* Give window_create and window_create1 better names.

* Merge branch 'obsd-master'

* Rename a function for consistency and some spacing nits.

* Fire hooks on the simple notifys (window-renamed and session-renamed), the complicated ones get no hooks for now (more to come).

* Drain notifys once at the end of the server loop instead of doing it from the end of every command queue (which could be nested).

* Merge branch 'obsd-master'

* Add CMD_AFTERHOOK flag to the easy commands that don't need any special handling.

* Don't make assumptions about line wrap on !xenl terminals, means that using a wrong TERM without xenl is not so broken if used on a sensible terminal.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* source-file and some other commands can recurse back into cmdq_continue, which could potentially free the currently running command, so we need to take a reference to it in cmdq_continue_one.

* Missing flags in capture-pane, and tweak choose-tree text. From Dilyan Palauzov.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Trying to do hooks generically is way too complicated and unreliable and confusing, particularly trying to automatically figure out what target hooks should be using. So simplify it:

* Update TODO.

* Remove the set-remain-on-exit option, it was always a hack and can now be done with hooks instead.

* tmux no longer uses openat() so we can remove the compatibilty function.

* Merge branch 'obsd-master'

* Add support for BCE (background colour erase). This makes various escape sequences (notable EL and ED but also IL, DL, ICH, DCH) create blank cells using the current background colour rather than the default colour.

* Update TODO.

* Remove mention of key tables than no longer exist.

* Merge branch 'obsd-master'

* Some improvements and bug fixes for hooks:

* -f missed from splitw usage, from Felix Rosencrantz.

* Merge branch 'obsd-master'

* Compare to see if pane status line has actually changed, not just size, and do not draw if pane is not visible.

* Fix a couple of problems with insert mode: flush dirty cells before we modify the screen, not after; and use grid_view_insert_cells to make space not grid_move_cells.

* bind-key -c has gone, remove from man page, and unused table declarations.

* Drop the edit mode key tables and just use fixed key bindings for the command prompt.

* Redraw selection in tty_draw_line, so it appears when redrawing whole pane. Reported by Theo Buehler.

* The repeat prompt in both emacs and vi (and the old one in tmux) doesn't support line editing and instead executes a command as soon as a non-number key is pressed. Add a -N flag to command-prompt for the same in copy mode. Reported by Theo Buehler.

* NetBSD needs _OPENBSD_SOURCE for reallocarray.

* Unused variable and missing time.h.

* Linux: #include <time.h> for time()

* Add missing function protype

* Merge branch 'obsd-master'

* Some other stuff that can be local to one file.

* Add static in window-*.c and move some internal functions out of tmux.h.

* Support double and triple clicks (they are cumulative, so double is fired then triple), and use for select-word and select-line in copy mode. Inspired by a different solution from Omar Sandoval.

* Fundamental change to how copy mode key bindings work:

* Support UTF-8 entry into the command prompt.

* Add static in cmd-* and fix a few other nits.

* Loads more static, except for cmd-*.c and window-*.c.

* Merge branch 'obsd-master'

* Do not allow the opposite pane to resize when dragging with the mouse because it is not possible to keep the mouse on the border when the minimum size is reached.

* Merge branch 'obsd-master'

* Some more static.

* Merge branch 'obsd-master'

* Make the CLIENT_STATUS flag imply that pane status lines are redrawn if they are enabled and break the actual screen generation code into a separate function. Fixes problems reported by Romain Francoise.

* Merge branch 'obsd-master'

* Pass file/line to new command for if-shell so that errors appear sensibly.

* Handle NULL window or session for user options.

* Use xsnprintf not snprintf for the prompt in window_copy_write_line because we don't care if it is truncated to the screen width, we don't want it to be fatal.

* Merge branch 'obsd-master'

* screen_write_copy tried to be clever and clear the line if it reached the end of the source, but it was wrong and causes problems that are only showing up now we are more aggressive about skipping redundant screen updates. Remove the optimization entirely as more trouble than it is worth to fix (and it'll have to go when BCE is done anyway).

* Merge branch 'obsd-master'

* Wrap some long lines in screen-write.c.

* Keep buffer creation time and add accessors for it and the order number.

* Allow cmd_mouse_at return arguments to be NULL.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Remove some dead code in cmd-move-window.c and make a load of local functions static.

* Merge branch 'obsd-master'

* Document set-hook -u.

* Remove some redundant checks and make ich/dch consistent.

* Fix typos

* Start working on 2.4

* Release tmux 2.3

* Merge branch 'obsd-master'

* Check padding when writing any character with width > 1, in case they overlap after the first character (for example with cells xy and ab, y is replacing a).

* Merge branch 'obsd-master'

* Couple of vasprintf -> xvasprintf.

* Merge branch 'obsd-master'

* Rate limit TIOCSWINSZ on a timer to avoid programs getting hammered with SIGWINCH when the size changes rapidly. To help a problem reported by Rui Pinheiro.

* Merge branch 'obsd-master'

* Support set -a (append) with user options, suggested by Xandor Schiefer.

* Merge branch 'master' of github.com:tmux/tmux

* Merge branch 'obsd-master'

* Swap watermarks from high (4096) to low (128) when we get full buffers into the read callback several times in succession; swap back when we see empty buffers several times. This hopefully limits how much programs that print a lot for a long period can monopolize tmux (like large, fast compiling), without penalizing programs that print a lot briefly (like most curses applications). Helps a lot for me, the actual numbers may need tweaking later.

* Do not use utf8proc by default.

* Merge branch 'obsd-master'

* Allow repeat count to be specified in mode key tables with bind-key -R, and set the default repeat count to 5 for WheelUp and WheelDown in copy-mode.

* Apple have changed their API again, from Gregory Pakosz.

* Use ncurses OR curses, don't mix header and library. Tested by Rob Paisley.

* Solaris build fixes from Rob Paisley.

* Merge branch 'obsd-master'

* Add support for performing a full width split (with splitw -f), rather than splitting the current cell. From Stephen Kent.

* Merge branch 'obsd-master'

* Check for headers for ncurses and libevent as well as libraries.

* Remember the number of lines scrolled into the history (versus cleared into the history) and when resizing only use scrolled lines and not cleared lines (which are probably not intended to reappear). From Chaoren Lin.

* Add support for using utf8proc with --enable-utf8proc, useful for platforms (like OS X) where the system implementation is crap. From Joshua Rubin.

* Merge branch 'obsd-master'

* Kill empty window after moving pane and updating current window, so that index is still valid before renumber-windows happens. Fixes issue reported by Eric Pruitt.

* Merge branch 'obsd-master'

* Do not crash if display-message used without a client, issue reported by Serge Aleynikov, fix from Thomas Adam.

* Merge branch 'obsd-master'

* Two minor fixes from dilyan palauzov.

* Merge branch 'obsd-master'

* We only replace the first %%, not multiple (use %2 for second).

* Fix minimum size when pane status line is enabled, reported by Y Petremann.

* Merge branch 'master' of github.com:tmux/tmux

* Add to .mailmap.

* Merge branch 'obsd-master'

* Tweak output of environment logging.

* Log environment to new panes.

* Wrap some long lines and apply some static.

* Merge branch 'obsd-master'

* Don't update cells in each block of data read from a pane immediately, instead track them as change (dirty) and update them once at the end, saves much time if repeatedly writing the same cell. Also fix comparison of cells being equal in a few places (memcmp is not enough).

* Instead of representing colours in several different forms with various cell flags, convert to use an int with flags marking 256 or RGB colours in the top byte (except in cells, which we don't want to make any bigger). From Brad Town.

* Merge branch 'obsd-master'

* tmux: only consider ACCESSPERMS for setting mode on socket_path.

* Remove duplicate daemon.c and time.h.

* Merge branch 'obsd-master'

* Allow a command to be specified to display-panes, similar to command-prompt, rather than always just selecting the pane.

* Linux: <time.h>

* Merge branch 'obsd-master'

* Add missing buffer_name format, from Awal Garg.

* Merge branch 'obsd-master'

* Copy mode needs to keep the original grid intact so it can copy from it if needed, so it disables reading from the pane. This can be problem with some programs. So make tmux automatically exit all modes after 180 seconds of inactivity and if there is pending output.

* Add -F to list-commands.

* Add *.dSYM for OS X.

* Merge branch 'master' of github.com:tmux/tmux

* Add to TODO.

* Merge branch 'obsd-master'

* Spelling, from Josh Soref.

* Spelling error (incrased -> increased), from Josh Soref.

* Merge branch 'obsd-master'

* Much faster (and smaller) method of mapping RGB colour to an xterm(1) colour, from Avi Halachmi.

* Merge branch 'obsd-master'

* Note how to subscribe to ML.

* Cache selected state so that cells going from selected to unselected are not skipped, reported by Omar Sandoval.

* Insert new panes after the pane being split in the list rather than always after the active pane. This is more sensible when doing it with commands rather than keys.

* Allow #[] in window-status-separator.

* Updated link for bash(1) completions.

* Update TODO.

* Merge branch 'obsd-master'

* Cache the window styles and do not look up the window-style options unless they have changed.

* Do not draw character to screen if it has not changed, and do not save last character if it won't be used. This (and last few commits) prompted by a report from Hubert depesz Lubaczewski.

* Send two cub1 instead of using cub for moving the cursor two left. This is normally better because using cub1 will be ^H^H (so two bytes) but cub would be ^[[2D (four).

* No longer set __progname, we have getprogname().

* Merge branch 'obsd-master'

* Padding cell is always the same so use a static.

* Break the save-last-cell code into a separate function (so it can be called conditionally later).

* Most of the utf8_data is fixed so simplify utf8_set to use a memcpy.

* __progname -> getprogname()

* Merge branch 'obsd-master'

* Use getprogname() instead of __progname to make portability easier.

* Merge branch 'master' of github.com:tmux/tmux

* getprogname() and setproctitle() on Linux.

* Add flag for -pg.

* Merge branch 'obsd-master'

* Extend 0x1234 keys form to more bits so that Unicode keys work.

* Merge branch 'obsd-master'

* Just nuke environ instead of trying to unsetenv everything because that doesn't necessarily work if there is an entry with an empty name.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Use a fixed buffer for strftime() because there is no portable way to tell if the buffer is too small, and an expanding buffer is overkill anyway.

* Remove unused variable, from Ben Boeckel.

* Use osdep_event_init() so that LIBEVENT_NOEPOLL and so on are set to turn off broken event methods. Reported by Suraj N Kurapati.

* Merge branch 'master' of github.com:tmux/tmux

* Fix a typo, issue 406.

* Merge branch 'obsd-master'

* - Rework load_cfg() error handling a little. - Add -q to source-file to suppress errors about nonexistent files.

* Merge branch 'obsd-master'

* set-hook needs CANFAIL like the other set commands.

* Merge branch 'obsd-master'

* Add on alerts rather than ignoring them if the event has already been queued, for example bell and activity together. From Marcel Lippmann via Romain Francoise.

* Add --static to PKG_CONFIG rather than replacing it.

* Do not mention OpenBSD FAQ.

* Merge branch 'obsd-master'

* Fix up a couple of long lines.

* Merge branch 'obsd-master'

* Some tidying of copy mode search functions, based on a diff from Lukasz Piatkowski (initial changes to help some more to come).

* Merge branch 'obsd-master'

* Use the same code for half page scrolling as full, from Michal Mazurek.

* Merge branch 'obsd-master'

* Missing format (window_activity_flag) and a missing Ta.

* Update TODO.

* tty_client_ready can not be internal to tty.c again.

* Merge branch 'obsd-master'

* tweak previous;

* Merge branch 'obsd-master'

* Expand client formats (like run-shell), from Stephen M Coakley.

* Merge branch 'obsd-master'

* Compact a small table into text.

* Merge branch 'obsd-master'

* Add option to include status text in the pane borders. If pane-border-status is set to "top" or "bottom" (rather than "off"), every pane has a permanent top or bottom border containing the text from pane-border-format.

* Final parts of command hooks, add before- and after- hooks to each command.

* The backoff timer is causing no end of trouble with disconnected clients stopping data in attached ones. So get rid of it and see how we get on with just a high watermark on each pane.

* Make the grid_cell passed into screen_write_* const.

* Merge branch 'obsd-master'

* Only assume width 1 when wcwidth() returns -1 on non-OpenBSD platforms.

* Merge branch 'obsd-master'

* Fix keys parsing again to correctly accept Unicode when not prefixed with Escape.

* OpenBSD wcwidth() is sensible and complete so if it returns -1 it means that a character is not printable, so return to ignoring such characters.

* Merge branch 'obsd-master'

* memmove() the right size when expanding tree.

* After unlock, Update activity time after recalculate_sizes() so that the session attached flag is correct.

* Merge branch 'obsd-master'

* Apply backspace check after working out the actual key, so that M-BSpace can work.

* Merge branch 'master' of github.com:tmux/tmux

* Add to TODO.

* Merge branch 'obsd-master'

* Add next/previous paragraph, from J Raynor.

* Loads of platforms appear to have old or broken Unicode character type information and are missing widths for relatively common Unicode characters (so mbtowc() works, but wcwidth() fails). So if wcwidth() returns -1, assume a width of 1 instead of ignoring the character.

* Merge branch 'obsd-master'

* Simplify next key matching and fix problems with meta and Unicode keys.

* No more array.h.

* Merge branch 'obsd-master'

* Remove last uses of array.h.

* Merge branch 'obsd-master'

* Log wcwidth() and mbtowc() failure to make it easier to debug a Unicode codepoint not appearing.

* Merge branch 'obsd-master'

* Don't overwrite modifiers in the buffer when making UTF-8 strings, append instead.

* Start working on 2.3

* Add CHANGES notes for 2.2 release

* Merge branch 'obsd-master'

* fatalx() not fatal().

* Merge branch 'master' of github.com:tmux/tmux

* Add --disable-utempter to build without it.

* Merge branch 'obsd-master'

* Bump the listen() backlog up, some people have scripts that run up a lot of clients quickly.

* Look for utempter_add_record to be sure we have the new utempter API, the old utempter API was also using utempter.h.

* Add to TODO.

* Merge branch 'obsd-master'

* Make scrolling behaviour more sensible and maintain cursor position, as if the same had been done line-by-line. From Michal Mazurek.

* Merge branch 'obsd-master'

* Instead of reusing MouseUp at the finish of a drag, add a new key MouseDragEnd. It can be useful to bind them separately in copy mode.

* Tweak a comment.

* Merge branch 'obsd-master'

* If setlocale("en_US.UTF-8") succeeds, then don't do the check for UTF-8 locale since if it isn't UTF-8 the system is broken anyway. If it fails, try "" and check for UTF-8 with nl_langinfo(CODESET) rather than wcwidth(). Based on a diff from schwarze@, nl_langinfo also suggested by stsp@.

* Merge branch 'obsd-master'

* Do not use c->cwd or s->cwd if it is NULL, found by Ben Boeckel.

* Although we always have en_US.UTF-8 on OpenBSD, some platforms do not, so fall back to setlocale(LC_CTYPE, ""). tmux requires a UTF-8 locale, so check with wcwidth() on a UTF-8 character after setlocale().

* Merge branch 'obsd-master'

* show-* and set-* need to handle a missing target.

* Accept clients as sessions in cmd_find_get_session.

* Merge branch 'obsd-master'

* RGB colours shouldn't be mixed up with aixterm colours, return before that happens when working out if they are supported.

* +wchar.h

* Merge branch 'next'

* Merge branch 'obsd-master'

* Handle wcwidth() and mbtowc() failures in better style and drop characters where we can't find the width (wcwidth() fails) on input, the same as we drop invalid UTF-8. Suggested by schwarze@.

* Limit x, y and b to 0x7ff for UTF-8 mouse input, suggested by schwarze@.

* Remove some more unused variables, and use RB_FOREACH_SAFE in key_bindings_unref_table.

* Redraw status on mode entry and exit.

* When a mouse drag is finished, fire a MouseUp key press, instead of doing the drag end in code. From Stephen Coakley.

* Remove unused variables, from Michal Mazurek.

* Use system wcwidth() instead of carrying around UTF-8 width tables.

* Fix break-pane synopsis and some other tmux.1 bits.

* Remove unused variables.

* Add to TODO.

* Merge branch 'master' into next

* Fixed fgetln(3) implementation (from Joerg Jung) which does not depend on *BSD fgets(3) semantics.

* Redraw status on mode entry and exit.

* When a mouse drag is finished, fire a MouseUp key press, instead of doing the drag end in code. From Stephen Coakley.

* Remove unused variables, from Michal Mazurek.

* Use system wcwidth() instead of carrying around UTF-8 width tables.

* Remove malloc_options debug bit (already gone from OpenBSD).

* Fire SIGCHLD after utempter_add_record since it probably eats it.

* Merge branch 'obsd-master'

* Expand client formats in run-shell.

* xmalloc: define __bounded__ where necessary

* EXTRA_DIST: add example_tmux.conf / xmalloc.h

* Merge branch 'obsd-master'

* Do not wrap cursor at start or end of history, from Michal Mazurek.

* Merge branch 'master' of github.com:tmux/tmux

* Add to TODO.

* Merge branch 'obsd-master'

* Set up -t flag properly when passing new-session -A off to attach-session, GitHub issue 295.

* Merge branch 'obsd-master'

* Clear RGB flags during selection.

* Merge branch 'obsd-master'

* Whoops, need this for the previous reverse trim commit too.

* Add RGB escape sequences for capture-pane -e.

* Support negative trim values (#{=-10:pane_title}) to trim from the end, suggested by Kevin Brubeck Unhammer.

* Fix new-session with -t after command flags changes, reported by Michael Graczyk.

* examples/ has gone, so delete some text about it.

* Remove old examples in favour of one example configuration file.

* Link to the bash(1) completion file from README rather than including it in examples.

* Merge branch 'obsd-master'

* Support for RGB colour, using the extended cell mechanism to avoid wasting unnecessary space. The 'Tc' flag must be set in the external TERM entry (using terminal-overrides or a custom terminfo entry), if not tmux will map to the closest of the 256 or 16 colour palettes.

* libevent.org URL.

* Update my email address.

* Merge branch 'obsd-master'

* Split out getting the current state from the target search so it can be replaced if we already know the current.

* I no longer use my SourceForge address so replace it.

* Merge branch 'obsd-master'

* Add hooks for alerts (bell, silence, activity), from Thomas Adam.

* Merge branch 'obsd-master'

* Clear the environment properly by looping until it is empty rather than looping over it (which may skip entries), from Brad King.

* A couple of missing printflike attributes, from Andrey Starodubtsev.

* Merge branch 'obsd-master'

* clock-mode needs CMD_PANE.

* Merge branch 'obsd-master'

* Don't rely on a calculation wrapping when applying message-limit, and break out of the loop early. From Nicolas Viennot.

* Merge branch 'obsd-master'

* Remove an extra unzoom call which was probably a merge error.

* Use saved pipe buffer offset when writing to pipe, from Nicolas Viennot.

* Merge branch 'obsd-master'

* Couple of trivial style nits.

* Keith Smiley is going to maintain the vim syntax file.

* Merge branch 'obsd-master'

* Repair switch-client -l and switch-client with a window target.

* Merge branch 'obsd-master'

* Detach the right session with -d.

* Merge branch 'master' of github.com:tmux/tmux

* No need to set cwd on Cygwin now, from Yuya Adachi.

* Merge branch 'obsd-master'

* Make input off flag (selectp -d) apply to synchronize-panes too.

* Merge branch 'obsd-master'

* As well as setting up the state, actually use it in cmd_find_target.

* Merge branch 'obsd-master'

* send-keys -R should reset the input parser to ground state (so it can be used to escape from, for example, printf '\033]2;').

* Merge branch 'obsd-master'

* Add infrastructure to work out the best target given a pane or window alone and use it to add pane_died and pane_exited hooks.

* showenv and setenv need to be CANFAIL.

* Merge branch 'obsd-master'

* Copy state directly rather than dereferencing wl (which could be NULL).

* Merge branch 'obsd-master'

* Some hooks API changes to fire a hook while waiting another cmdq and infrastructure that will be needed soon.

* Merge branch 'obsd-master'

* Allow list-keys and list-commands to be run without a running server.

* We changed somewhat recently to us the pty when tmux was run inside itself to work out the current pane. This is confusing in many cases (particularly notable is that "tmux neww\; splitw" would not split the new window), and the few advantages do not make up for the confusion.

* Don't copy marked pane when can just point to it.

* Merge branch 'obsd-master'

* Make the marked pane a cmd_find_state.

* Use cmd_find_clear_state instead of an extra function doing the same.

* Merge branch 'obsd-master'

* Remove some stray debug code.

* Instead of combined flags for -c, -s, -t, split into different sets using an enum and simplify the parsing code.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Use member names in cmd_entry definitions so I stop getting confused about the order.

* Actually I thought cmd_get_state_client was unnecessary but it will be needed.

* Merge branch 'obsd-master'

* -c needs to be able for fail for display-message.

* Remove an unnecessary function.

* show-options and environment need CANFAIL flag.

* Merge branch 'obsd-master'

* Don't log an error when doing the first check for move-window.

* Use struct cmd_find_state directly and remove cmd_state_flag, also change so that winlink is set even if an index is too.

* Change cmd_find_target to use a state struct from the caller.

* If command returns error, report it.

* Merge branch 'obsd-master'

* Remove the cmd_find_{session,window,pane,index} functions (which are just wrappers around cmd_find_target) and just use cmd_find_target directly.

* Move logging into cmd_find_target rather than each function.

* Instead of every command resolving the target (-t or -s) itself, prepare the state (client, session, winlink, pane) for it it before entering the command. Each command provides some flags that tell the prepare step what it is expecting.

* Need to use pkg-config --static when doing a static build.

* Merge branch 'obsd-master'

* Add key-table option to set the default key table for a session, allows different key bindings for different sessions and a few other things.

* Return after changing key table.

* Allow prefix and prefix2 to be set to None to disable (useful if you would rather bind the prefix in the root table).

* Merge branch 'master' of github.com:tmux/tmux

* Look for ncurses with PKG_CONFIG, and remove libtinfo because it just causes confusion.

* Merge branch 'obsd-master'

* Style nits and line wrapping of function declarations.

* Mention {src,dst}-{window,pane} where we define target-{window,pane}.

* Merge branch 'obsd-master'

* We cannot do hooks_find and then hooks_remove because it might have come from the parent (global) tree, instead make it remove by name like options.

* Merge branch 'obsd-master'

* Check alerts when session changes, from Patrick Palka.

* Add cmdq as an argument to format_create and add a format for the command name (will also be used for more later).

* Merge branch 'obsd-master'

* Add to .mailmap, and sort.

* Remove format_create_flags and just pass flags to format_create.

* Spacing nits.

* Merge branch 'obsd-master'

* Conflicts: 	Makefile

* Ed was meant to be El;

* Add hooks infrastructure, basic commands (set-hook, show-hooks) and a couple of not very useful client hooks. This will eventually let commands be run at various points and on notifications. Joint work with Thomas Adam.

* Use ^= instead of a verbose alternative. ok nicm@

* termios(4)

* pty(7) -> pty(4)

* pty is in section 4

* Update tmux.vim from Teubel Gyorgy.

* Merge branch 'master' of github.com:tmux/tmux

* Update .mailmap file.

* Merge branch 'obsd-master'

* Fix bell indicators across detach, reported by Torbjorn Lonnemark, diff from Thomas Adam.

* Merge branch 'obsd-master'

* EAGAIN handling for imsg_read. OK henning@ benno@

* Merge branch 'master' of github.com:tmux/tmux

* Add to TODO.

* Merge branch 'obsd-master'

* Mark new active pane changed after pane lost in window, and after break-pane. Reported by tim@.

* Merge branch 'obsd-master'

* Do not deref wp if window_get_active_at returns NULL which can happen on very large terminals, from Michael Graczyk.

* Merge branch 'obsd-master'

* Delete a duplicated line

* Merge branch 'obsd-master'

* Do not set a limit on the length of commands when printing them.

* Add to TODO.

* log_open() isn't conditional on proctitle

* Remove logfile()

* Merge branch 'obsd-master'

* Don't print error if none to print.

* Make environ_set va_args and use it to tidy up some calls. Also add a missing word in manpage (from jmc).

* Shell command from -c doesn't have to be global, pass it as an argument.

* Do lock failures slightly better, return a special value so we don't unlink the wrong thing.

* Actually show something (even if it not that helpful) if the server fails to start (for example if it can't create the socket), rather than hanging or showing nothing.

* Document socket_path format.

* Tidy the code that works out the socket path, and just use the full path in the global socket_path rather than copying it.

* Remove malloc_options DEBUG bit.

* Switch a fprintf to a fatal, and wrap some long lines.

* Remove the -I part of show-messages which isn't really that useful; the server start time can now be accessed with a new start_time format (use: tmux display -p '#{t:start_time}')

* All kill-session -C to clear alerts in all windows, suggested by Aaron U'Ren.

* Log some system and libevent information at startup.

* Show libevent version in showmsgs -I.

* Make the log stuff a bit tidier with some helper functions.

* Fix usage of detach-client.

* Merge branch 'master' of github.com:tmux/tmux

* -sys/queue.h in proc.c, and nuke the unnecessary C++ header guards stuff and sys/cdefs.h in vis.h (it causes problems on some platforms). Reported by someone on GitHub, issue 212.

* Merge branch 'obsd-master'

* Don't allow options in table without scope set.

* Merge branch 'obsd-master'

* Partly revert previous, it is harmless to keep support for UTF-8 mouse mode inside tmux, just no longer support it for tmux itself.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Remove support for the UTF-8 mouse extension. This was a briefly used, poor idea that was fairly quickly replaced by SGR mouse input (which is now widespread). It is impossible to tell the difference between UTF-8 and non-UTF-8 mouse input; since the mouse-utf8 option was removed tmux has not handled it correctly in any case; and it is ridiculous to have three different forms of mouse input.

* Don't leak extddata, memset after freeing it, not before. From Patrick Palka.

* Add getpw to pledge, makes tmux work in YP environments, discovered by matthieu, ok deraadt

* If display-time is set to 0, show status messages until a key is pressed; OK nicm@

* Merge branch 'obsd-master'

* Move tmux.h below system includes.

* Memory leaks and an uninitialized part of utf8_data, from Patrick Palka.

* The alerts callback should be fired for bells even if bell-action is none because it also affects the status line bell indicator (and bell-action does not). Fixes a problem reported by tim@.

* Instead of separate tables for different types of options, give each option a scope type (server, session, window) in one table.

* Only assume pasting with at least two characters, reduces problems for people who can type ^B c very fast, or who are using tmux inside something else that buffers.

* Merge branch 'obsd-master'

* The activity flag could already be set, so queue the callback always (if not already queued) rather than only if the flag is being added. Fixes a problem reported by tim@

* Merge branch 'obsd-master'

* Use format_expand_time for display-message.

* unused -> __unused.

* Merge branch 'master' of github.com:tmux/tmux

* Merge branch 'obsd-master'

* Add __unused, will be needed shortly.

* Use __unused rather than rolling our own.

* Add s/foo/bar/: prefix for formats to substitute bar for foo.

* Add -Wno-attributes.

* Add reallocarray prototype.

* Merge branch 'obsd-master'

* Sync the entire xmalloc.[ch] with the other users, but with the addition of xrealloc, xvasprintf, xvsnprintf.

* Merge branch 'master' of github.com:tmux/tmux

* Add reallocarray to compat.

* Merge branch 'obsd-master'

* Don't update activity time twice for new sessions, and add some logging.

* Merge branch 'obsd-master'

* Merge xmalloc.[ch] files across base, skipping OpenSSH for now.

* Merge branch 'obsd-master'

* 0x7f is a valid key.

* Merge branch 'obsd-master'

* Make key_code unsigned long long not uint64_t which is more portable for printf formats, and move UTF8_SIZE define down to near the rest of the UTF-8 bits.

* Merge branch 'obsd-master'

* Accidentally turned off pledge, turn it back on.

* Merge branch 'obsd-master'

* The character is an int so use %x not %hhx.

* The private use area at U+E000 to U+F8FF is not very useful if it is width 0, make it width 1 instead.

* Merge branch 'obsd-master'

* All these return values from utf8_* are confusing, use an enum.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Rename a variable in utf8_combine for consistency and use 0xfffd for unknown Unicode.

* Couple of assignments to remove compiler warnings.

* Be more strict about invalid UTF-8.

* Push stdout and stderr to clients more aggressively, and add an event to continue if the send fails.

* Merge branch 'master' of github.com:tmux/tmux

* Update the TODO file.

* Log more of UTF-8 input.

* Merge branch 'obsd-master'

* Log option names in fatal() for missing option.

* Merge branch 'master' of github.com:tmux/tmux

* utf8 option is gone.

* Merge branch 'obsd-master'

* Two spacing and spelling nits.

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Add window_visible_layout which ignores zoomed panes and use it for control mode (which needs to know all panes), from George Nachman.

* Long overdue change to the way we store cells in the grid: now, instead of storing a full grid_cell with UTF-8 data and everything, store a new type grid_cell_entry. This can either be the cell itself (for ASCII cells), or an offset into an extended array (per line) for UTF-8 data.

* Merge branch 'obsd-master'

* Rename overly-long utf8data to ud throughout.

* Merge branch 'obsd-master'

* grid_put_utf8 is unused, remove it.

* Merge branch 'obsd-master'

* Add utf8_padcstr and use it to align columns in list-keys.

* tweak previous; ok nicm

* Tidy utf8.c a little: build table on first use, and make utf8_width take a u_int rather than splitting and then combining again in utf8_split.

* Merge branch 'obsd-master'

* tmux is UTF-8, so if $TMUX is set (tmux running in tmux), the client is UTF-8. Also try to make the existing checks more readable.

* If we know the terminal outside tmux is not UTF-8, replace UTF-8 in error messages and whatnot with underscores the same as we do when we draw UTF-8 characters as part of the screen.

* Nuke the utf8 and status-utf8 options and make tmux only a UTF-8 terminal. We still support non-UTF-8 terminals outside tmux, but inside it is always UTF-8 (as when the utf8 and status-utf8 options were on).

* Remove the mouse_utf8_flag format as well.

* Support UTF-8 key bindings by expanding the key type from int to uint64_t and converting UTF-8 to Unicode on input and the reverse on output. (This allows key bindings, there are still omissions - the largest being that the various prompts do not accept UTF-8.)

* Merge branch 'obsd-master'

* Default history-file should be "" not NULL, from Greg Onufe.

* Merge branch 'obsd-master'

* Drop mouse-utf8 option and always turn on UTF-8 mouse if the client says it supports UTF-8.

* Merge branch 'obsd-master'

* If realpath() fails just try the original path.

* Handle absolute paths properly, and don't use resolved path in realpath() fails.

* Same bug as last commit, but in the other copy of the loop in this file...

* Update the internal wcwidth(3) table of tmux(1) to match the data in /usr/src/share/locale/ctype/en_US.UTF-8.src, with one single exception:  Keep U+00AD SOFT HYPHEN at width 1 rather than moving it to width 0, a tradition already observed in the old https://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c . While here, manually rebalance the btree for optimal lookup speed. OK nicm@

* Merge branch 'obsd-master'

* Pass through right click if mouse is on, from Patrick Palka.

* Merge branch 'obsd-master'

* Detach the client we are looping over, from Thomas Adam.

* Merge branch 'obsd-master'

* Fall back silently to ~ or / rather than checking -c with access(), this was the old behaviour.

* Don't shift version out of peerid, it is needed later.

* The output log is only useful once and it means creating a file, so open it once at startup instead of in every call to tty_open.

* Merge branch 'obsd-master'

* Because pledge(2) does not allow us to pass directory file descriptors around, we can't use file descriptors for the working directory because we will be unable to pass it to a privileged process to tell it where to read or write files or spawn children. So move tmux back to using strings for the current working directory. We try to check it exists with access() when it is set but ultimately fall back to ~ if it fails at time of use (or / if that fails too).

* Merge branch 'obsd-master'

* Break version check into a separate function, and limit version to 8 bits.

* Merge branch 'obsd-master'

* Like options, move the environ struct into environ.c.

* Merge branch 'obsd-master'

* Move struct options into options.c.

* No more TMPDIR.

* Break the common process set up, event loop and imsg dispatch code between server and client out into a separate internal API. This will make it easier to add another process.

* Merge branch 'obsd-master'

* Count brackets in #{?...} so that nested conditional formats work, from Daniel De Graaf.

* The format callback may not always succeed, so we need to check for NULL. From Patrick Palka.

* Use copy-mode -et= in WheelUpPane binding, from Patrick Palka.

* Merge branch 'obsd-master'

* If a mouse event has no key binding, pass it through to the pane it happened in, not the active pane like normal key presses. Fixes problems seen by Enrico Ghirardi.

* Default bindings for mouse wheel on status line to change window (like we had before), from Patrick Palka.

* Handle unknown keys more gracefully, return a string instead of NULL.

* Merge branch 'obsd-master'

* Some extra logging of where keys are actually going.

* Merge branch 'obsd-master'

* space before punctuation;

* Merge branch 'obsd-master'

* Extend the modifiers allowed before formats: as well as the existing #{=10:...}  length limit, add #{t:...} to convert a time_t format to a string, #{b:...} for basename and #{d:...} for dirname. Remove all the foo_string time formats as they can now be replaced by "t:", for example #{window_activity_string} becomes #{t:window_activity}.

* -sys/types.h

* Add missing headers for getpid()

* Merge branch 'master' of github.com:tmux/tmux

* ifdef __OpenBSD__ around pledge().

* __OpenBSD__ around pledge()

* Merge branch 'obsd-master'

* Merge branch 'obsd-master'

* Pass output from jobs through format_expand() so they are expanded again (this was the previous behaviour).

* Let's see if anyone screams about not being able to specify $TMPDIR for their tmux sockets.

* Pasting mouse escape sequences is unlikely, so skip them when working out whether the user is pasting.

* Remove some unnecessary checks before free().

* If $TMUX is set, and we are unsure about the session, use it.

* tmux can call pledge() in main with large set and then reduce it slightly in the server to "stdio rpath wpath cpath fattr unix recvfd proc exec tty ps".

* Format for scroll position, from Jorge Morante.

* Use tty_term_flag not _has for XT, and make -2 force direct use of 256-colour escape sequences (so setaf/setab can be bypassed if needed).

* Merge branch 'obsd-master'

* If the pane is still on all_window_panes but not actually connected to window or session (which can happen if it is killed during a command sequence and something else has a reference), fall back to the best effort. Fixes "tmux killw\; detach" for Rudis Muiznieks.

* Unzoom before -LRUD, reported by Andy Weidenbaum.

* Merge branch 'obsd-master'

* Log identify messages.

* This should not be changed.

* Rename shutdown to exit.

* Merge branch 'obsd-master'

* client_key_table was missing.

* Merge branch 'obsd-master'

* By popular demand add a default binding for mouse wheel up to scroll into history (if the mouse is, on of course).

* Merge branch 'obsd-master'

* Use client pointer not file descriptor in logging.

* Merge branch 'obsd-master'

* The table could change when retrying so don't save it at start of server_client_handle_key.

* Merge branch 'obsd-master'

* Pass current directory as a string rather than a file descriptor because pledge doesn't let us pass directory file descriptors.

* Start working on tmux 2.2

* Update for 2.1 release.

* __OpenBSD__ around pledge().

* Merge branch 'obsd-master'

* Add pledge "stdio unix sendfd proc exec tty" to tmux client process, "sendfd" is dropped after first message from the server.

* Merge branch 'master' of github.com:tmux/tmux

* time.h is not needed now tzset() is not in log.c.

* Merge branch 'obsd-master'

* Don't free after calling paste_set but do after evbuffer_add, from Theo Buehler.

* Some header fixes.

* Merge branch 'master' of github.com:tmux/tmux

* Fix available_fds when there is no AF_INET, reported by Mathieu Arnold.

* Merge branch 'obsd-master'

* Userspace doesn't need to use SUN_LEN(): connect() and bind() must accept sizeof(struct sockaddr_un), so do the simple, portable thing

* Merge branch 'obsd-master'

* Couple of memory leaks in error paths, from Frederik Vanderstraeten.

* Merge branch 'obsd-master'

* Adding colors=256 to *256color* was always pretty stupid and now it won't work (without adding setaf@:setab@ too).

* If the terminal has colors=256, only try to use setaf/setab if they exist, reported by Filipe Brandenburger.

* Merge branch 'obsd-master'

* Free the history when it is cleared, based on a diff from Carlo Cannas.

* Merge branch 'obsd-master'

* Don't leak fd and path on failure.

* Do not leak log file descriptor.

* Merge branch 'obsd-master'

* Assign flag not number for flag types (we got away with it so far because that are a union). From Filipe Brandenburger.

* Merge branch 'master' of github.com:tmux/tmux

* Add to TODO.

* Merge branch 'obsd-master'

* Don't update last session when the session is unchanged, from Sina Siadat.

* Merge branch 'obsd-master'

* Reset the alerts timer always on activity, from Thomas Adam.

* Merge branch 'obsd-master'

* -l should apply to the new not the old pane with -b, from "MadMaverick9" on GitHub.

* Merge branch 'obsd-master'

* Redraw both src and dst sessions in break-pane.

* Merge branch 'obsd-master'

* Log when cmdq_continue is called.

* Give some variables less silly names.

* A few minor style nits.

* Hoist some common code out of both branches of an if/else.

* Rename cmd_q dead flag to a general flags bitmask (will be more flags later).

* Merge branch 'master' of github.com:tmux/tmux

* Add BCE to TODO.

* Merge branch 'obsd-master'

* No more $Id$.

* Add missing <time.h>

* Remove some extra blank lines.

* Merge branch 'obsd-master'

* Should add buffer if no -b.

* Move tzset() from log_open to main.

* Style nit, int for flags not u_int.

* Merge branch 'obsd-master'

* When the active pane changes, redraw panes if the style has changed. From Cam Hutchison.

* Make refresh-client force update of jobs, from Sina Siadat.

* Add copy-mode -e to exit copy mode when scrolling off the bottom, useful for quick view of history, from Cam Hutchison.

* Set woken flag when flushing so that the channel is freed, while here use the same loop construct for both loops.

* Merge delete-buffer into cmd-set-buffer.c and change the paste buffer API so it has one paste_free() rather than free_top and free_name (everywhere that uses it already has the right pointer).

* Add --enable-coverage for gcov.

* Fix bad merge.

* Merge branch 'master' of github.com:tmux/tmux

* osdep_event_init not event_init.

* Merge branch 'obsd-master'

* Add session_last_attached time and format, from Sina Siadat.

* Merge branch 'obsd-master'

* No need to keep global options around for client which doesn't use them.

* Fix includes

* Merge branch 'obsd-master'

* Change wait-for to work when the signal comes before the wait, also use some helper functions and add some logging.

* A couple of style nits.

* Log pane which received input data.

* A one line helper function is a little silly.

* We no longer need the terminal service class, so don't bother asking for it.

* Fix indentation of grid_string_cells_fg.

* Sync up vis.* for stravis().

* Tweak some error messages/comments.

* Log the whole new input buffer once rather than each byte.

* Pass logging through vis(3).

* Fix a spelling error, sesson -> session.

* Remove dead_clients which is no longer used.

* Work out config file when needed not at startup.

* Move initial conf load into cfg.c.

* All the cmd_*_entry declarations do not need to be in tmux.h.

* Bring back pane_current_path.

* Path from $TMUX does not need to be global anymore.

* Login shell can be a client flag, and move the exec code into client.c.

* Event base does not need to be global.

* Linux: get_proc_name() -> osdep_get_name()

* Merge branch 'obsd-master'

* Some style nits and dead assignments.

* Remove some old prototypes and unused functions.

* struct args_entry can go into arguments.c.

* paste_send_pane can be merged into cmd-paste-buffer.c now.

* Move struct paste_buffer out of tmux.h.

* We already loop over the windows in server_client_loop, so don't do it again in server_loop just to check names.

* Move alerts onto events rather than checking every loop.

* Treat entering or leaving a mode as pane changed.

* Better take on reducing the name timer. Again check for name changes in the main loop after events that may have changed the pane, but do so at most once every 500 millis. If the pane changed too soon, use a timer to ensure that a check happens later.

* Microseconds in log time.

* Only set default title to hostname on screens that are being used for a window pane, no point in calling gethostname() for temporary screens.

* Make a few more expensive (ish) formats functions instead of inline.

* Allow formats to be specified as functions (in the code) so they are only evaluated on demand rather than each time a format tree is constructed. Use this for expensive formats like pane_current_command.

* Revert previous; we do need a timer, until I have a better idea. We can't do the name check every loop, because that is too expensive, and we can't make sure it only happens infrequently because we have no idea when the next change will happen.

* We now only checking for name changes when the active pane has changed, but that can only happen when we have already been woken up by a read event, so there is no need for a timer, we can just check the changed flag on the end of that read event (we already loop over the windows to check for bells etc anyway).

* Merge branch 'obsd-master'

* Check changed flag after restarting timer.

* Remove unused prototypes.

* Don't leak name when freeing session, from Kuang-che Wu.

* Per-session timers for locking, and remove the global one-second timer.

* Merge branch 'obsd-master'

* Make session_update_activity more useful and use it in more places.

* Remove the lock-server option which is a bit redundant, it isn't that different without it.

* Give clock mode its own timer.

* Run status update on a per-client timer at status-interval.

* Log time with message.

* Move format job cleanup onto its own timer.

* Merge branch 'obsd-master'

* Allow environment variables in #{}.

* Merge branch 'obsd-master'

* Error messages should not have a trailing period.

* Only do the automatic-rename dance if the pane has changed (seen output, or new active pane).

* Merge branch 'obsd-master'

* When searching for tabs, start from screen width, fixes out-of-bounds read found by Kuang-che Wu.

* Merge branch 'obsd-master'

* In grid_duplicate_lines, if the line is empty (cellsize == 0) then clear the destination celldata pointer rather than leaving a stale copy of the source pointer (which may later be freed). Fixes a crash found by Kuang-che Wu.

* Merge branch 'obsd-master'

* Come out of copy mode when history is cleared.

* Handle \ at EOL from Daniel Hahler.

* Merge branch 'obsd-master'

* right-up should be right-of, also rename the values too.

* Merge branch 'obsd-master'

* Rename left/right/up/down relative to active pane to add -of suffix (left-of/right-of/etc) to remove conflict with left/right meaning leftmost or rightmost pane. From Ben Boeckel.

* Merge branch 'master' of github.com:tmux/tmux

* +history-file, from Ben Boeckel.

* Merge branch 'obsd-master'

* status_out and associated data structures are no longer used.

* Merge branch 'obsd-master'

* Tidy up the way terminals are described and move some structs out of tmux.h.

* Merge branch 'obsd-master'

* Make -q suppress ambiguous option warnings too, from Cam Hutchison.

* Merge branch 'master' of github.com:tmux/tmux

* Fix a warning, from Kosta Zertsekel.

* Merge branch 'obsd-master'

* Add an option (history-file) for a file to save/restore command prompt history, from Olof-Joachim Frahm.

* Merge branch 'obsd-master'

* Correct the tsl/fsl sequence to ]0 not ]2 (from Marcel Korpel). While here, Xr xterm and remove some advice about elinks that is better elsewhere.

* Merge branch 'master' of github.com:tmux/tmux

* Update tmux.vim from Ben Boeckel.

* Merge branch 'obsd-master'

* Do not call window_unzoom from window_destroy because it will try to add a notification which will get confused because the reference count is already zero and end up back in window_destroy and a double free. Instead, just destroy the layouts directly. Noticed by Thomas Adam.

* Merge branch 'obsd-master'

* Initialize client fd to -1 as well, from Bobby Powers.

* Implement osdep_get_name and osdep_get_cwd for AIX, from J Raynor.

* Merge branch 'master' of github.com:tmux/tmux

* Add _LINUX_SOURCE_COMPAT on AIX.

* Merge branch 'obsd-master'

* Reset G0/G1 state when resetting everything else with send-keys -R.

* Ignore environment variables that are too long to send to the server.

* Merge branch 'obsd-master'

* Fix line endings.

* Initialize cwd fd to -1 so that we don't close fd 0 if the client is destroyed before it is changed. Also allow ttyname() to fail. Fixes problems when running out of file descriptors reported by Bruno Sutic.

* Add a format to show if client is a control client. From Bruno Sutic.

* Merge branch 'obsd-master'

* Add a -s flag to show-environment to output Bourne shell commands a la ssh-agent. Mostly from Cam Hutchison with some changes by me.

* Revert to marking lines as wrapped on newlines, fixes problems with capturep -J.

* Check for flock in libbsd for AIX, and remove some getopt.h includes. From J Raynor.

* Merge branch 'master' of github.com:tmux/tmux

* Update imsg*.[ch] from OpenBSD, including bzero->memset.

* Merge branch 'obsd-master'

* Update environment with -E when attach-session used on an already attached session or switch-client used on the current session. From Cam Hutchison.

* README: Clarify SYNCING is under the ISC

* Merge branch 'master' of github.com:tmux/tmux

* Remove monitor-content options which have been removed, from Guy Hughes.

* Merge branch 'obsd-master'

* Use the SRCDST define for usage.

* Use xsnprintf.

* Remove a stray : and tweak paragraph.

* Merge branch 'obsd-master'

* Change break-pane to take target and source panes (-t and -s) in line with other commands, from Thomas Adam.

* Merge branch 'obsd-master'

* Break cmdq_continue inner loop into a helper function.

* Merge branch 'obsd-master'

* Move the shuffle code from new-window -a into a function and add a -a flag for move-window too. From Thomas Adam.

* Use an explicit job state instead of avoid closing our side of the socketpair and setting it to -1 to mark when the other side is closed. This avoids closing it while the libevent bufferevent still has it (it could try to add it to the polled set which some mechanisms don't like). Fixes part a problem reported by Bruno Sutic.

* Merge branch 'obsd-master'

* Add window_activity format, from Thomas Adam based on a diff originally from propos6 at gmail dot com.

* Merge branch 'obsd-master'

* Add a format for client PID (client_pid) and server PID (pid). Diff for client_pid from Thomas Adam.

* Merge branch 'obsd-master'

* Merge branch 'master' of github.com:tmux/tmux

* Don't leak dotfd if fchdir fails. From ettl dot martin78 at gmail dot com.

* wp->tty is a char [] not a char * so it can't be NULL. From Thomas Adam.

* Merge branch 'obsd-master'

* Fix loop comparison broken in last commit, from Thomas Adam.

* It isn't supposed to...

* Merge branch 'obsd-master'

* Add -E flag when attaching or switching client to bypass update-environment, from Steven Lu.

* Update TODO.

* Use ints for the calculations rather than u_char, they could end up signed.

* Handle the RGB colour escape sequence (\033[38;2;<r>;<g>;<b>m and 48;2) like xterm(1) does, by mapping to the nearest in the 256 colour palette.

* Use fixed colour tables rather than generated and do a quick search for exact match before doing the distance comparison.

* Similarly, for sessions use a callback to free rather than checking every loop.

* Change deref to the more sensible unref, and add a couple I missed before.

* Instead of putting dead clients on a list and checking it every loop, use event_once to queue a callback to deal with them. Also dead clients with references would never actually be freed because the wrap-up functions (the callback for stdin, or status_prompt_clear) would never be called. So call them in server_client_lost.

* Do not use the key variable uninitialized (in a debug log statement), reported by jungleboogie0 at gmail dot com.

* Only need *.ch in compat.

* Fix a warning.

* Make it so that if a window or session target is prefixed with an =, only an exact name or index match is accepted, no special character, prefix match, or fnmatch.

* Move the nested check from client to server and compare the client tty name to all the pane pty names instead of comparing socket paths. This means that "new -d" will work without unsetting $TMUX.

* tweak SYNOPSIS and usage();

* Merge branch 'obsd-master'

* Make unsetting a global option restore it to the default. Diff lying around for a while, I have forgotten who suggested it :-/.

* Merge branch 'obsd-master'

* Add support for a single "marked pane". There is one marked pane in the server at a time; it may be toggled or cleared with select-pane -m and -M (the border is highlighted). A new target '~' or '{marked}' specifies the marked pane to commands and it is the default target for the swap-pane and join-pane -s flag (this makes them much simpler to use - mark the source pane and then change to the target pane to run swapp or joinp).

* Spaces -> tabs.

* Update mailmap.

* Merge branch 'obsd-master'

* teminal -> terminal, from Corey Farwell.

* Merge branch 'master' of github.com:tmux/tmux

* Update TODO with some items from old SF tickets.

* SYNCING: Few tweaks

* SYNCING: Update for GH

* I no longer need to care about GCC 3.

* Note version this happened.

* Update FAQ for new behaviour.

* I don't think we should carry around scripts. I'm not too sure about examples/ at all, nobody is maintaining it...

* Remove old tools.

* Add a couple of presentations I wrote a few years ago. One for the ill-fated AsiaBSDCon in 2011 (canceled due to Fukushima) and the other for LinuxTag 11 in Berlin.

* Fix clone URL.

* Remove this file.

* HTML bits are now elsewhere.

* No more SF.

* No $Id$.

* Update mailing list addresses.

* -$Id$.

* $Id$ -> $OpenBSD$.

* $Id$ -> $OpenBSD$.

* Remove $Id$.

* Update TODO.

* Merge branch 'obsd-master'

* Missing t at end of response, from Vincent Bernat.

* Merge branch 'obsd-master'

* Clear signal handlers before event_reinit as apparently it can otherwise cause libevent to go strange.

* Merge branch 'obsd-master'

* does not need syslog.h

* Merge branch 'obsd-master'

* Don't use special strings if #() commands fail, just remove the format (as if the command produced nothing). Makes constructions that can fail like '#(test whatever && echo foo)' work as they did before.

* Expand formats again inside #(), and free the temporaries.

* Use RB_MIN to get the lowest index for the current window when creating grouped sessions, rather than using RB_ROOT.

* Merge branch 'obsd-master'

* Move the jobs output cache into the formats code so that #() work more generally (for example, again working in set-titles-string).

* Merge branch 'obsd-master'

* Return empty string if format is empty rather than attempting to allocate zero bytes.

* Merge branch 'obsd-master'

* In terminfo, sometimes cvvis implies cnorm and sometimes it doesn't, so don't assume it does. Fixes missing cursor with emacs-in-tmux-in-tmux.

* README.md: github-specific readme

* TRAVIS-CI: correct path to configure

* Hook repo to Travis-CI

* Merge branch 'obsd-master'

* To replace c0-*, add a high watermark to the pty event, and also backoff when the any of the ttys the pane is going to write to has buffered enough data.

* Tidy blank lines when outputting server info.

* Add a session_alerts format which is a list of all the alerts in the current session in symbolic form (something like "0!,4~,5!"). Use this in the default set-titles-string. Prompted by a request from Jan ONDREJ.

* Add bell-action "other" to pass through bells in all windows except the current, suggested by Jan ONDREJ.

* Left the c0-* options behind in the table.

* Remove the c0-* options which never really worked satisfactorily. Going to try something else...

* Add back __CYGWIN__ block

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Merge branch 'obsd-master'

* Put the tty structs together, and tabify.

* grid_marker_cell is no longer used.

* mode_key_entry can go into mode-key.c; also a few spaces->tabs.

* window_choose_mode_item can move into window-choose.c.

* Move input parser structs into input.c (removing fairly useless saved_cursor_[xy] formats as a side-effect).

* Remove some stuff that accidentally ended up here from portable, and remove a little-used debug function.

* Update environment when switching sessions as well as attaching, from Si Beaumont.

* Style spacing nits.

* queue.h should come from compat.h.

* array.h can be local to window-choose.c now.

* Use a TAILQ not array for find-window.

* Simplify environ_push so it doesn't need the ARRAY_* functions.

* If status line is at the top, the offset needs to be adjusted when drawing pane numbers.  Based on a diff from John O'Meara.

* Remove ARRAY_* from history and expand completion to complete a) layout names and b) targets beginning with -t or -s.

* Start working on 2.1

* CHANGES for tmux 2.0

* Merge branch 'obsd-master'

* Add a format window_linked which is 1 if a window has been linked multiple times, also remove the default space in window_flags and use a conditional to add it in window-status-format (this means additional flags can be added in the option without extra spaces). From Thomas Adam with tweaks by me.

* Turn cursor off during redraw, pointed out by George Nachman.

* Use the right index when expanding/collapsing tree, from Thomas Adam.

* Merge branch 'obsd-master'

* Do not complain when directions fail.

* If default-terminal is set to "screen" or "screen-*", emulate screen's historical (incorrect) behaviour for SGR 3 and send smso (standout). Previously, we would send sitm (italics) if the terminal outside had it and smso otherwise. This was acceptably until recently because xterm's terminfo entry lacked sitm, so most users got smso.

* Add tmux4.png.

* Renumber screenshots.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Update two of the screenshots.

* Merge branch 'obsd-master'

* But this does work.

* Upload all the files.

* This doesn't work.

* Add logo to www, also centre the page.

* Add tmux logo, createed by Jason Long.

* If looking for an index, don't fill in window when given a session.

* Do not do a search for the tty path if there isn't one.

* If can't find pane as a pane, try as a window; likewise if can't find window as a session.

* Add select-layout -o to undo the last layout change (apply the previously set layout).

* No paths.h on Solaris.

* Merge branch 'obsd-master'

* Do not include unattached clients when trying to find one for target.

* Reset cfg_ncauses to 0 as well or we could allocate the wrong size if called again.

* Assign to the right variable when comparing clients.

* Merge branch 'obsd-master'

* Rewrite of the target resolution internals to be simpler and more consistent but with much less duplication, but keeping the same internal API. Also adds more readable aliases for some of the special tokens used in targets (eg "{start}" instead of "^"). Some behaviours may have changed, for example prefix matches now happen before fnmatch.

* If the requested pane is already active, do not unzoom the window (or do anything else). Prevents mouse clicking when zoomed causing unzoom, reported by Jose Antonio Delgado Alfonso (with a different fix).

* Remove panes from layout if spawning them fails, reported by Anthony J Bentley.

* Merge branch 'obsd-master'

* Get rid of window_choose_list type.

* Fix some char* -> char *.

* Use a char **,u_int pair for cfg_causes.

* Make message log a TAILQ.

* Move the functions to convert ids from strings into session.c and window.c.

* Explicitly cancel mouse "button" mode, this happens implicitly with some one of the other things we send with xterm, but not with urxvt. Reported by sthen@.

* Merge branch 'obsd-master'

* Convert clients list into a TAILQ.

* Set working directory for run-shell and if-shell.

* Allow choice options (multiple states) to be toggled between states 0 and 1.

* Set up signal handler earlier so that we don't get zombies, reported by sobrado@.

* use reallocarray instead of calloc; avoid the zero before infill ok nicm

* Make session_has return a flag, returning the first winlink found is a recipe for errors.

* Change the windows array into an RB tree and fix some places where we were only looking at the first winlink for a window in a session.

* window_index is only used in one place (window_destroy) so inline it there.

* Merge branch 'obsd-master'

* Look up indexes as number before name, makes more sense if windows are named starting with numbers. From Thomas Adam.

* Always format real layout even when zoomed.

* Do not die on USR1 if any of the socket parent directories are missing. Reported by Robin Powell.

* Simplify error messages when socket connect fails, suggested by "Karthik K".

* The free callback could end up being fired before the done callback (happens on Cygwin), so use a reference count instead of a single flag. SF bug 188 reported by "iceboy".

* Fix moving windows to nonexistent indexes when renumber-windows is off. From Thomas Adam, reported by Daniel Levai and Theo Buehler.

* Bind mouse dragging so that it is passed through to applications if they want it rather than entering copy mode.

* Don't eat the mouse event that triggers a drag end because we may want to pass it on to application inside the pane.

* Put mouse_any_flag back, don't know where it went to (still in man page).

* Pass mouse events through to commands for if-shell.

* cmd_mouse_pane can return NULL, check for that.

* Remove unused-but-set variables, from Thomas Adam.

* Support for multiple key tables to commands to be bound to sequences of keys. The default key bindings become the "prefix" table and -n the "root" table. Keys may be bound in new tables with bind -T and switch-client -T used to specify the table in which the next key should be looked up. Based on a diff from Keith Amling.

* Style nit - unnecessary brackets.

* Merge branch 'obsd-master'

* Make jump-to-backward/jump-to-forward repeatable with jump-reverse/jump-again, from Jacob Niehus.

* Use a more sensible buffer size for flags string.

* +.

* tweak previous;

* Honour renumber-windows when unlinking a window, from Thomas Adam.

* Rewrite of tmux mouse support which was a mess. Instead of having options for "mouse-this" and "mouse-that", mouse events may be bound as keys and there is one option "mouse" that turns on mouse support entirely (set -g mouse on).

* Support setting the default window and pane background colours (window and active pane via window-style and window-active-style options, an individual pane by a new select-pane -P flag). From J Raynor.

* +.

* +.

* Merge branch 'obsd-master'

* Fix some issues in bright colour handling. Bold background doesn't exist so there is no reason for tty_check_bg to mess with the BRIGHT flag at all, ever. Also use aixterm colours for 256-to-16 translation if the terminal supports them. And there is no reason for tty_colours_bg to worry about whether the terminal supports them - tty_check_bg has already taken care of it.

* Use tty_term_flag not _has for flags, also fix a typo (position not permission).

* Fix setting old-style window -fg/-bg/-attr options that aren't global.

* Add a -x flag to copy-selection, append-selection and start-named-buffer to prevent it exiting copy mode after copying. From J Raynor with a few tweaks by me.

* in the case -> in this case.

* When replacing, don't free the old paste until after the new one's name has been copied. Fixes a use-after-free in window-copy.c. Bug reported by J Raynor (who also provided a different fix).

* Add a helper function to convert time, and add session_activity formats (the latter from Takatoshi Matsumoto).

* Fix some format specifier nits, from Ben Boeckel.

* Make place const to avoid a warning, from Ben Boeckel.

* set-titles-string now uses formats, not the status bits (so no #() for now). Reported by landry.

* Explicitly look for cpp and egrep to avoid AC_EGREP_CPP messing up output.

* Merge branch 'obsd-master'

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Merge branch 'tmp'

* When given an invalid style, don't set the option to the default. Fix from J Raynor. Also make style_parse not alter the grid_cell when it fails.

* Remove LocalWords.

* Revert "Add -Wno-format-nonliteral to Makefile.am"

* Add -Wno-format-nonliteral to Makefile.am

* Merge branch 'obsd-master'

* Take a reference to prevent cmdq being freed during the command. Can happen to cfg_cmd_q (possibly others) when source-file recurses into cmdq_continue. Fixes bug reported by Ismail Donmez and Theo Buehler.

* Merge clock-mode command into copy-mode.

* Add a note about cmd_find_*.

* Entries in the window list can be NULL, prompted by a crash seen by Ben Boeckel.

* Check for \0 in the right place, from J Raynor.

* Use the same time for both calls to format_expand_time.

* No paths.h on Solaris.

* Merge branch 'obsd-master'

* status_replace can now become local to status.c and it no longer needs the jobsflag argument. While here there is no need to repeat work that format_defaults already does.

* Use formats not status_replace for set-titles-string.

* Add format_expand_time and use it instead of status_replace where command execution is not needed.

* Move pane border options to window options rather than session, from Marc Finet.

* Reset bracket paste mode on detach.

* Remove a couple of now-unused variables.

* Wrap all the individual format_* calls in a single format_defaults functions.

* There is no need to save the guard state because the function checks it again anyway.

* Remove two unused arguments from status_replace.

* Tidy up detach-client a bit.

* Focus off needs to be sent with tty_raw, reported by Geoff Nixon.

* has-session is now part of new-session.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Don't leak the individual strings when copying environment.

* Spaces to tabs.

* In options-table.c r1.51 an extra space was added to the default status-right, overrunning status-right-length with long window titles. Allow for the extra space so the last digit of the year isn't lost.  ok nicm@

* typo in comment ;)  ok nicm

* Support blinking cursor mode, both the xterm CSI ?12 h/l and (the backwards) screen CSI 34 h/l. From Guanpeng Xu.

* Make a tmux-%u directory under TMUX_TMPDIR, like TMPDIR.

* Merge branch 'obsd-master'

* Replace <sys/param.h> with <limits.h> and other less dirty headers where possible.  Annotate <sys/param.h> lines with their current reasons.  Switch to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where sensible to avoid pulling in the pollution.  These are the files confirmed through binary verification. ok guenther, millert, doug (helped with the verification protocol)

* Remove an unnecessary variable and shorten a line.

* Shorten some long lines.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* We do not need to add /usr/local to CPPFLAGS; if configure managed to pass then the dependencies must already be in the search path. Reported by Romain Naour.

* correctly use HOST_NAME_MAX.

* Merge branch 'obsd-master'

* Revert to r1.16 since this is still clearly broken and I can't see how right now.

* Unzoom before kill, from Thomas Adam.

* Add missing default bindings, from Theo Buehler.

* Need param.h, from Ismail Donmez.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* t_kP is the same as PageUp, so no need for it, from Daniel Hahler.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Merge branch 'obsd-master'

* Notify on zoom/unzoom, from George Nachmann.

* Only redraw affected lines when selection changes with mouse. From Michael Graczyk.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Add missing va_end, from Thomas Jarosch.

* Add pane_dead_status for exit status of dead panes.

* Tweak ordering and whitespace.

* Merge branch 'obsd-master'

* Add -F to if-shell to allow it to be used to check for format or option values rather than executing a command.

* Permit option values to be used in formats.

* Another fix for insertion from Balazs Kezes. On insertion, size the line just enough for the inserted characters.

* Check ZOOMED flag on window.

* Remove dead code, from Thomas Adam.

* Prefer setvbuf() to setlinebuf() for portability; ok deraadt@

* Merge branch 'obsd-master'

* Label windows which are smaller than expected with a reason.

* Restore change in r1.17 but add checks to prevent the line length overflowing, from Balazs Kezes.

* Add -b to splitw like joinw, from Felix Rosencrantz.

* Merge branch 'obsd-master'

* Don't let force-width or force-height be < PANE_MINIMUM.

* Revert r1.17 as it breaks inserting in some cases.

* Expand formats in copy-pipe command, suggested by Suraj N Kurapati.

* Merge branch 'obsd-master'

* Two improvements to reflow from Balazs Kezes:

* Empty strings should be false too for #{?}, from Marc Finet.

* No need for $Id$ now.

* V should be vi not emacs, also sort. From Theo Buehler.

* +.

* Use KERN_PROC_CWD if supported, from Tiwei Bie.

* Wrap when copy mode is used for output, from Balazs Kezes.

* Use -a for terminal-overrides from Daniel Hahler.

* Add V for select line with vi(1) keys. From Juho Pohjala.

* Tidy up mode-mouse check.

* Do not put a space between status-left/status-right and the window list, instead move the space into the defaults for the options (so status-left now defaults to "[#S] ". From Balazs Kezes.

* Merge branch 'obsd-master'

* Merge linkw and movew which are virtually identical.

* Move cfg_causes local into cfg.c and remove struct causelist.

* Add pane_input_off format, from Anish R Athalye.

* Fix some spacing nits.

* Merge unlink-window into kill-window.

* Only redraw pane when it has actually changed.

* Save next item after firing command in case it has added to the queue.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* OS X lacks HOST_NAME_MAX, reported by Christian Ebert.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Merge branch 'obsd-master'

* Better format for printf format attributes.

* Move template defines back into .c files.

* Tidy up some includes.

* Move suspend-client code into detach-client.

* Argh, meant to remove this file...

* Move list-commands into list-keys.

* Missed a couple of cmd_entry struct members from previous.

* Instead of setting up the default keys by building the key struct directly with a helper function in the cmd_entry, include a table of bind-key commands and pass them through the command parser and a temporary cmd_q.

* Fix description of Ss and Se.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* OSdep:  Update for xrealloc() change

* Merge branch 'obsd-master'

* Add xreallocarray and remove nmemb argument from xrealloc.

* Use xrealloc(NULL, n, m) instead of xmalloc(n * m) to get overflow check.

* Top function key is F12 now.

* Take account of window-status-separator when checking window position, based on diff from Balazs Kezes.

* Update status when pane selected with mouse, from Balazs Kezes.

* Ignore ENXIO on Solaris as well, from Peter Schow.

* Copy ACS characters as UTF-8, from Balazs Kezes.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Fix osdep_get_cwd on Solaris 11, from J Raynor.

* Call waitpid on SIGCHLD even if client not attached, it is possible (on very slow platforms) for the first daemon() child to still be running when client_attached is set so we end up with a zombie. From J Raynor.

* Support using pane id as part of session or window specifier (so %1 means session-of-%1 or window-of-%1) and window id as part of session (so @1 means session-of-@1).

* Support ! for last pane.

* Merge branch 'obsd-master'

* Don't close random file descriptor on error, from J Raynor.

* I broke last change, fix so it works, from J Raynor.

* cdefs.h -> types.h.

* Solaris doesn't have flock and fcntl is useless so make a no-op flock. Reported by Dagobert Michelsen.

* Synchronize forkpty master and child to avoid hang on AIX with fast exiting child and output left in the queue, from J Raynor.

* Fix some comments (c -> colour) and join unnecessary line splits.

* Tweak www and add RELEASE variable for current release version so we don't need to turn it back and forth when updating.

* Stupid comment.

* Add window_last_flag and window_zoomed_flag. From John Morrissey.

* Fix typo (paneas -> panes).

* Wake up any clients waiting with the wait-for command when the server exits.

* Various minor style and spacing nits.

* Don't allow pasting into input-disabled panes, from Anish R Athalye.

* No need to repeat other-end more than once, from Juho Pohjala. Also add it to the commands list while here.

* Fix two copy mode problems:

* Add flags to selectp to enable and disable input to a pane, from Anish Athalye.

* Add compat/fparseln.c

* SYNCING:  Make a note about libutils

* Sync libutil from OpenBSD (imsg)

* Add compat/fparseln() for non-BSD systems

* Merge branch 'obsd-master'

* Remove support for the continuous reporting "any" mouse mode which never really worked properly and is rarely used.

* FAQ:  Mention Git before filing bug reports

* Revert the up/down wheel emulation for now, there will be a better way to do this along later for those who want it.

* lockf is entirely useless and it was a mistake to change to it, go back to using flock which actually works sensibly. Also always retry the lock to fix a potential race, and add some extra logging.

* Drop explicit support for F13-F20 and change to match the xterm terminfo entry:

* Show an error if cmd_find_session can't find the current session, like the other functions.

* An EOF is a good reason to close a connection.

* If a client is killed while suspended with ^Z so has gone through the MSG_EXITED dance, don't try to resume it since a) it's pointless and b) the tty structures have been cleaned up and tmux will crash.

* Track whether a process is a zombie or not yet fully built via flags PS_{ZOMBIE,EMBRYO} on the process instead of peeking into the process's thread data.  This eliminates the need for the thread-level SDEAD state.

* Handle escaped back slashes and missing new lines at end of line by using fparseln instead of reimplementing it on our own.

* Allow keys and send-keys to invisible panes, from saggy-kun at users dot sf dot net.

* Count mouse clicks correctly, from Balazs Kezes.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Notes for better mouse support.

* We have utmp with utempter now and that's the best we're going to get.

* Merge branch 'obsd-master'

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Remove some done, tweak some others.

* Comment style nits.

* Make -S- and -E- mean the start and end to capture-pane to avoid having to faff around with huge numbers to get everything.

* Might as well still allow autoconf 2.59.

* Copy newline when at EOL in vi(1) mode, from Balazs Kezes.

* Reset the buttons when the wheel is used, from Balazs Kezes.

* Some terminals send spurious releases for mouse wheel in SGR mouse mode, this causes confusion when tmux uses SGR outside but the application inside tmux is using conventional xterm mouse reporting. So suppress obviously bad input. From Timothy Allen, SF bug 128.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Build DEBUG with -O2 as well.

* Properly track switching G0 and G1 modes between US-ASCII and VT100 line drawing rather than just treating them as SO and SI.

* Reset properly when c0-change-trigger is increased from zero so panes don't get stuck.

* Handle the top bit of xterm(1)-style modifier keys, based on a diff from Balazs Kezes.

* Add some formats for pane bounds.

* Change key-table to mode-table to allow for some future work. From Keith Amling.

* Simplify copy lines, from Keith Amling.

* Now that cmdlists are reference counted, there is no need for two-step deletion via the dead_key_bindings tree. From Keith Amling.

* Don't allow multiple buffers with the same name, from Thomas Adam.

* Linux:  Add <time.h> to log.c

* Merge branch 'obsd-master'

* If multiple arguments are given to new-session, new-window, split-window, respawn-window or respawn-pane, pass them directly to execvp() to help avoid quoting problems. One argument still goes to "sh -c" like before. Requested by many over the years. Patch from J Raynor.

* Add a copy mode key binding to copy to a named buffer. From J Raynor.

* Add support for named buffers. If you don't name a buffer, things work much as before - buffers are automatically named "buffer0000", "buffer0001" and so on and ordered as a stack. Buffers can be named explicitly when creating ("loadb -b foo" etc) or renamed ("setb -b buffer0000 -n foo"). If buffers are named explicitly, they are not deleted when buffer-limit is reached. Diff from J Raynor.

* Just use char ** for argv like normal people, not char *const *.

* Send up and down keys for mouse wheel in alternate screen mode (when it normally does nothing), from Marcel Partap.

* Instead of forcing mouse scroll to 1 in choose mode, scale it down instead. Means modifier keys still increase the line count, just not as much. Based on a diff from Marcel Partap.

* Plug a memory leak, from J Raynor.

* Both the two previous ways of navigating panes by direction have irritating flaws:

* Handle colour 8 properly in the 256 colour palette, from Timothy Allen.

* Merge branch 'obsd-master'

* fcntl.h is still needed here.

* Typo in previous:  $(srcdir)

* Makefile.am:  Honour $srcdir for mdoc2man.awk

* specifying ECHOCTL once is enough ok nicm@

* Merge branch 'obsd-master'

* There is no longer a need for a paste_stack struct or for global_buffers to be global. Move to paste.c.

* Merge branch 'obsd-master'

* Differentiate between linked and unlinked window closes and renames, like we already do for adds. From Andre Masella.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* If pgrp fails in osdep_get_cwd, try sid. Fixes eg cat foo|less. From Balazs Kezes.

* #nnT went away a while ago, remove a leftover from the manpage.

* Add some UTF-8 utility functions and use them to prevent the width limit on formats from splitting UTF-8 characters improperly.

* Some more long lines.

* Next up is 2.0 not 1.10.

* Only scroll by one line at a time in choose mode, lists are generally pretty small.

* Set PATH explicitly, either from client or session environment. Previously it came from the session environment. From J Raynor.

* Wrap some long lines.

* Don't limit the DCS buffer to 256 bytes, expand it as needed. Requested by Suraj Kurapati.

* Remove some unnecessary includes and fix a typo.

* Correct the dance to fix the active pane in join-pane by pulling the (right) code from break-pane and window_remove_pane into a helper function.

* Remove the "info" message mechanism, this was only used for about five mostly useless and annoying messages. Change those commands to silence on success like all the others. Still accept the -q command line flag and "quiet" server option for now.

* Extend the -q flag to set-option to suppress errors about unknown options - this will allow options to be removed more easily.

* Do not show the -fg, -bg and -attr options. If asked for one explicitly, show the equivalent -style option instead.

* Remove the monitor-content option and associated bits and bobs. It's never worked very well. If there is a big demand for it to return, will consider better ways to do it.

* Memory leak in error path and unnecessary assignment, from clang.

* Remove a leftover prototype and fix some spacing.

* Remove the choose-list command to prepare for some later choose-* work.

* Because we pass the file descriptor from client to server, tmux can't usefully work if stdin is /dev/tty. Complain about it more clearly.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* +.

* Don't leak socketpair file descriptors if fork fails. Spotted by Balazs Kezes.

* Don't blindly increase offsets by the return value of snprintf, if there wasn't enough space this will go off the end. Instead clamp to the available space. Fixes crash reported by Julien Rebetez.

* save-buffer needs to use O_TRUNC.

* Remove <vis.h>; not used on Linux.

* Merge branch 'obsd-master'

* Work out mouse scroll wheel effect when the mouse is first detected and store it in struct mouse_event, reduce the scroll size the 3 but allow shift to reduce it to 1 and meta and ctrl to multiply by 3 if the terminal supports them, also support wheel in choose mode. From Marcel Partap.

* A couple of trivial mouse-related style nits.

* Support UTF-8 with choose-buffer, from Kosuke ASAMI. Also make buffer_sample bigger to let it trim at window right edge.

* Use the same logic for bell with and without visual-bell, from Filip Moc.

* Do not replace ## with # in status_replace1 because it'll be done later by the format code.

* Remove LocalWords.

* pane_start_path has gone away.

* missed commit matching log.c

* Don't crash with a zero-length argument to setb, from J Raynor.

* In four byte UTF-8 sequences, only three bits of the first byte should be used. Fix from Koga Osamu.

* Remove log_debug2 as well and simplify log.c.

* GRID_DEBUG is no longer needed.

* Remove unused log functions.

* Make message-limit a server option.

* Don't segfaut when the parent of the layout cell is NULL, from Thomas Adam.

* Add names for mouse button bits rather than using magic numbers, from Marcel Partap.

* Use hex constants rather than shifts for mouse events and flags, pointed out by Marcel Partap.

* Add setb -a to append and a copy mode append command, from J Raynor with minor changes.

* Make session_attached a count and add session_many_attached flag.

* Add start-of-list, end-of-list, top-line and bottom-line in choice mode, from madmaverick9 at roxxmail dot eu, similar diff a few days later from Marcel Partap.

* Having three *clock* files is ridiculous, remove clock.c.

* Don't write into buffer if no arguments, reported by Filipe Rosset.

* Change secondary device attributes response to \033[>84;0;0c which is unique for tmux.

* Don't crash with a zero-length argument to setb, from J Raynor.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* In four byte UTF-8 sequences, only three bits of the first byte should be used. Fix from Koga Osamu.

* Make -a append to top buffer if -b is not specified.

* Add osdep-cgywin.c as a copy of osdep-linux.c, from J Raynor.

* Remove log_debug2 as well and simplify log.c.

* GRID_DEBUG is no longer needed.

* Remove unused log functions.

* Make message-limit a server option.

* Don't segfaut when the parent of the layout cell is NULL, from Thomas Adam.

* Spaces to tabs.

* Add names for mouse button bits rather than using magic numbers, from Marcel Partap.

* Use hex constants rather than shifts for mouse events and flags, pointed out by Marcel Partap.

* Add setb -a to append and a copy mode append command, from J Raynor with minor changes.

* Make session_attached a count and add session_many_attached flag.

* Restore SunOS fix, noticed by Greg Onufer.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* www: Add link to CHANGES file for download tarball

* Add start-of-list, end-of-list, top-line and bottom-line in choice mode, from madmaverick9 at roxxmail dot eu, similar diff a few days earlier from Marcel Partap.

* Having three *clock* files is ridiculous, remove clock.c.

* Don't write into buffer if no arguments, reported by Filipe Rosset.

* Change secondary device attributes response to \033[>84;0;0c which is unique for tmux.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Add.

* Fix xterm-keys.vim syntax

* I prefer . here not :.

* Missing period.

* Use utempter to update utmp if it's around for configure, from madmaverick9 at roxxmail dot eu.

* Add to TODO.

* Change terminal-overrides to a server option (now that we have them), it doesn't make much sense as a session option.

* Go back to working on 1.10

* Update CHANGES and configure.ac for 1.9a release

* Merge branch 'obsd-master'

* Fix crash due to uninitialized lastwp member of layout_cell, reported by Balazs Kezes.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* FAQ about xterm-keys in emacs and vim, from Mark Oteiza.

* Fix -fg/-bg/-style with 256 colour terminals.

* Correct Linux-specific manpage sections

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Put each command on its own line and remove duplicates, from Daniel Hahler.

* dist: Call clean target before any other action

* Working on 1.10

* Update CHANGES and configure.ac for 1.9 release

* Merge branch 'obsd-master'

* Fix memory leaks with paste_replace, based on changes from J Raynor.

* Be consistent and allow only mouse down and mouse wheel for any pane with mouse-select-pane rather than just in copy mode, reported by Balazs Kezes.

* Don't crash when given a invalid colour, reported by Felix Rosencrantz, fix from Thomas Adam.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Merge branch 'obsd-master'

* Leftovers from removing 88 colour support, from Theo Buehler.

* If the terminfo entry has colors#256, assume that setaf and setab work and use them for the 256 colour set. If the terminfo entry doesn't have colors#256 and the user gives -2 to the client, use a \033[38;5;Xm sequence as before. Should allow fbterm to work with it's weird setaf and setab.

* Make status-interval of zero work as indented.

* Style nit - no space between function name and bracket.

* Missing *.

* Do not need to call winlink_find_by_window, from Filip Moc.

* Check for NULL session and whatnot in status_replace, from Thomas Adam.

* Make C-j the same as C-m, from Simon Nicolussi.

* Avoid use of uninitialized variable, from Thomas Adam.

* The last fix to xterm keys meant that some keys such as \033OA were being wrongly treated as partial matches. So both check xterm keys after standard keys and only wildcard the minimum required ('1' to '8'). Problems reported by Ralf Horstmann and Tim van der Molen.

* Sort and organize option names in tmux.vim

* Sort and organize commands in tmux.vim

* Remove references to 88colour support

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* fix some minor formatting glitches;

* Tidy up TODO list.

* Fixup BSD specific things from last merge

* Merge branch 'obsd-master'

* Break up and simplify screen_redraw_screen.

* Fix partial matches with xterm-keys on, from m0viefreak dot cm at googlemail dot com.

* Add \033[18t window operations from J Raynor.

* Fix missing argument, stupid last minute changes...

* Allow replacing each of the many sets of separate foo-{fg,bg,attr} options with a single foo-style option. For example:

* Remember the last active pane in the top-bottom or left-right cell so that it can be restored when moving back to that cell with selectp -L/-R/etc. From Suraj N Kurapati.

* Merge start-server into kill-server.

* Support paste key in copy mode input (for search etc). Also clamp length to screen width.

* Merge server-info into show-messages and remove some not useful output.

* Add AC_PROG_MKDIR_P.

* + to TODO.

* Do not permit periods in session names (colons are already banned). From J Raynor.

* Only exit copy mode at the bottom if no selection in progress, from Benoit Pierre.

* Merge branch 'obsd-master'

* Do not attempt to read .tmux.conf if we can't figure out a home directory, from Tiago Cunha.

* Couple of fixes from cppcheck via Tiago Cunha.

* Fix a memory/fd leak reported by Tiago Cunha.

* Similar to attach-session, make switch-client -t accept a window and pane. From Johannes Jakobsson.

* Allow attach-session -t to accept a window and pane to select them on attach. Based on a diff from J Raynor.

* Three small changes from Tiago Cunha:

* Style and comment fixes from Tiago Cunha.

* Simplify args_set, from Tiago Cunha.

* Remove unnecessary calls to va_start/va_end, from Tiago Cunha.

* NetBSD broke strnvis when they added it, check for that.

* Use 0 if O_DIRECTORY is missing, reported by Dagobert Michelsen.

* +.

* Note libevent version.

* +.

* +.

* Add comments to ACS table matching terminfo(5).

* Replace ## by # in format.

* With -k, kill window after using it to work out -c path. Reported by jmacristovao at gmail dot com.

* Handle empty current directory more gracefully.

* missing unsigned char casts areound tolower() ok nicm

* Include unistd.h as it is the standard location for getopt().

* Merge branch 'obsd-master'

* from nicm: : handle msgbuf_write() returning EAGAIN

* Support case insensitive searching in the same manner as emacs - all lowercase means case insensitive, any uppercase means case sensitive. From J Raynor.

* Correctly redraw the top two lines in copy mode when they are selected - the selection was being updated before the redraw so the markings were lost. Based on a fix from J Raynor.

* Key to swap to other end of selection (bound to o with vi keys), from J Raynor.

* Do not run any command line command from the client which starts the server until after the configuration file completes. This prevents it racing against run-shell or if-shell in .tmux.conf that run in the background.

* Don't turn on modifyOtherKeys by default, it is annoying if tmux is killed and it's left on and we can't turn it on and off like we do for attributes. It's not hard to enable in .Xresources or .Xdefaults anyway.

* Merge branch 'obsd-master'

* Fix detach -a by skipping clients where the session is NULL.

* Fix previous

* Fix up missing cwd definition

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Forward-declarations for osdep-linux

* Fixup osdep-* specific code

* Add destroy entry to TODO.

* + to TODO.

* + to TODO.

* ++ to TODO.

* Remove from TODO.

* Set EVENT_NOEPOLL on Linux again.

* Add entry about smaller clients based on text from Thomas Adam.

* Add subdir-objects to shut automake up

* Check setupterm() in libtinfo also

* Ignore .dirstamp files

* Add openat() to compat.

* Merge branch 'obsd-master' into mtemp

* Don't leak file descriptors in the rare MSG_VERSION case. From Chris Johnsen.

* Remove stray return, from Chris Johnsen.

* And get it right this time... don't leak if it is an empty string either.

* Bracket in the wrong place in description of c0-change-trigger.

* Fix leak in format_get_command.

* Remove the KERN_PROC_CWD the proc_current_path format (which is the only thing that uses it now).

* Use format_get_command() and some spacing tweaks.

* Pass -1 for cwd now not NULL.

* We accidentally haven't been using $TMUX to work out the session for a while and in fact it is less useful that using the client ttyname. So don't bother and don't pass it from the client. If we need it in future it is in c->environ.

* Remove now unused cmd_get_default_path.

* Don't boke when figuring out working directory from configuration file.

* Show session name in detached message. Requested by somebody a few months ago who didn't bother testing it. But it works for me anyway.

* Don't look at string[length - 1] if length == 0.

* Alter how tmux handles the working directory to internally use file descriptors rather than strings.

* Make tilde expansion in command strings work even if it isn't terminated by /.

* Similarly for MSG_COMMAND - allow full imsg limit not arbitrary 2048.

* retcode -> retval for exit message.

* Merge IDENTIFY_* flags with CLIENT_* flags.

* Remove CMD_SENDENVIRON.

* mouse-resize-pane: Only resize on border select

* Support -c for new-session, based on code from J Raynor.

* Make cmdq->client_exit a tristate (-1 means "not set") so that if explicitly set it can be copied from child to parent cmdq by if-shell and source-file. This fixes using attach or new. From Chris Johnsen.

* First period not last for host_short, from Michael Scholz.

* Don't treat TMUX_TMPDIR as a potential file

* Mark flags as optional and mutually exclusive. From Tiago Cunha.

* Trivial style and spacing nits.

* Remove the barely-used and unnecessary command check() function.

* Clear window->flags when clearing winlinks

* choose-tree: Reset top when toggling items

* Renumber windows: Lookup lastw via window not index

* Assign mouse x/y coords before checking them. When receiving mouse inputs, we should set the x/y coordinates earlier than we currently do, so that we aren't off-by-one in the case when the statusbar is at the top of the screen. By Thomas Adam.

* Accept multiple parameters to SM/RM/DECSET/DECRST, based on a diff from Hayaki Saito.

* Add automatic-rename-format option allowing automatic rename to use something other than pane_current_command.

* Allow nested format expansion.

* Add length limit operator for formats.

* Handle input mouse positions <33 (we already can generate them).

* Only include actual trailing spaces not unused cells with capturep -J, from George Nachman.

* Allow the file descriptor received from the client to be -1.

* Add formats for window flags.

* Missing space in refresh-client synopsis.

* Grouped sessions were being leaked on destroy, correctly free them.

* Make recalculate_sizes() handle an empty window with no active pane. This can happen when a window is in two sessions - it isn't destroyed immediately when the pane goes away but is left until the last session is destroyed. Fixes problems with grouped sessions reported by Daniel Ralston.

* Pass flags into cmdq_guard as an argument since sometimes cmdq->cmd can be NULL. Avoids crash when a command in a command client can't be parsed.

* Add openat() to compat.

* Pass -1 for cwd now not NULL.

* We accidentally haven't been using $TMUX to work out the session for a while and in fact it is less useful that using the client ttyname. So don't bother and don't pass it from the client. If we need it in future it is in c->environ.

* Remove now unused cmd_get_default_path.

* Don't boke when figuring out working directory from configuration file.

* Show session name in detached message. Requested by somebody a few months ago who didn't bother testing it. But it works for me anyway.

* Don't look at string[length - 1] if length == 0.

* Alter how tmux handles the working directory to internally use file descriptors rather than strings.

* Make tilde expansion in command strings work even if it isn't terminated by /.

* Similarly for MSG_COMMAND - allow full imsg limit not arbitrary 2048.

* Instead of fixed size buffers for some messages, send only the string length.

* retcode -> retval for exit message.

* Merge IDENTIFY_* flags with CLIENT_* flags.

* Bump protocol version and add new message types.

* Remove CMD_SENDENVIRON.

* Change the default for the default-path option to ~. This is a quick change to turn off the KERN_PROC_CWD code which is unpredictable. Later it will go away and there may be other changes to how this works.

* Ignore .dirstamp files

* Check setupterm() in libtinfo also

* Add subdir-objects to shut automake up

* Fix previous not to leak fd on failure, whoops.

* Fix previous not to lead fd on failure.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Use open(".")/fchdir() to save and restore current directory rather than getcwd()/chdir().

* Use open(".")/fchdir() to save and restore current directory rather than getcwd()/chdir().

* mouse-resize-pane: Only resize on border select

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Support -c for new-session, based on code from J Raynor.

* Make cmdq->client_exit a tristate (-1 means "not set") so that if explicitly set it can be copied from child to parent cmdq by if-shell and source-file. This fixes using attach or new. From Chris Johnsen.

* Restore missing key binding for %, from Chris Johnsen.

* First period not last for host_short, from Michael Scholz.

* layout-resize-pane-mouse: Consider visible panes only

* Don't treat TMUX_TMPDIR as a potential file

* Mark flags as optional and mutually exclusive.

* Add entry about smaller clients based on text from Thomas Adam.

* No space in lsw -a targets.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Set EVENT_NOEPOLL on Linux again.

* A couple of manpage fixes from Tiago Cunha.

* Trivial style and spacing nits.

* Remove from TODO.

* ++ to TODO.

* + to TODO.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Remove the barely-used and unnecessary command check() function.

* Clear window->flags when clearing winlinks

* choose-tree: Reset top when toggling items

* Renumber windows: Lookup lastw via window not index

* Assign mouse x/y coords before checking them

* Accept multiple parameters to SM/RM/DECSET/DECRST, based on a diff from Hayaki Saito.

* Add automatic-rename-format option allowing automatic rename to use something other than pane_current_command.

* Allow nested format expansion.

* Add length limit operator for formats.

* + to TODO.

* Handle input mouse positions <33 (we already can generate them).

* Only include actual trailing spaces not unused cells with capturep -J, from George Nachman.

* Allow the file descriptor received from the client to be -1 - it can be on Cygwin when stdin is not a terminal. Reported by A Young, SF bug 52.

* Add formats for window flags.

* Don't leak formats if they are added multiple times.

* Don't add client formats when they are NULL.

* Missing space in refresh-client synopsis.

* Grouped sessions were being leaked on destroy, correctly free them.

* Make recalculate_sizes() handle an empty window with no active pane. This can happen when a window is in two sessions - it isn't destroyed immediately when the pane goes away but is left until the last session is destroyed. Fixes problems with grouped sessions reported by Daniel Ralston.

* Pass flags into cmdq_guard as an argument since sometimes cmdq->cmd can be NULL. Avoids crash when a command in a command client can't be parsed.

* Add destroy entry to TODO.

* use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@

* Merge branch 'obsd-master'

* Add support for Cgywin, apparently it is enough just to open the tty again in the server and fd passing is not necessary. Needs some ifdefs unfortunately but no way around that and some of them can go next time we're willing to do a protocol bump. Patch from J Raynor jxraynor at gmail dot com.

* Make next-word-end work properly with vi(1) keys, reported by patrick keshishian.

* Merge branch 'obsd-master'

* Add pane_synchronized format, from Romain Francoise.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Section on clipboard, from Thomas Adam.

* Clarify error messages when setting options, from Thomas Adam.

* When the session option renumber-window is used, ensure we iterate over all sessions in that group when the winlinks are reordered, otherwise the winlink lists are out of sync with one another. From Thomas Adam.

* Whitespace nits, from Ben Boeckel.

* Implement s, S, C mode switch commands in vi(1) mode, from Ben Boeckel.

* Focus events can cause trouble if left on and they can't be turned off during idle periods (like the other states are) because we'd miss events. So add a server option to control them. Defaults to off.

* Always push a focus event when the application turns it on, prompted by discussion with Hayaki Saito a while ago.

* Mark control commands specially so the client can identify them, based on a diff from George Nachman a while back.

* +strings.h in compat/.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Don't set TMUX_CONF in tmux.h.

* Use _XPG6 on Solaris with GCC because the headers are insane and don't like GCC with -std=gnu99 and _XPG4_2. We should not really be using _XPG* at all but there doesn't seem to be a magic define that says "give me the latest standard", and things are further confused by the CMSG_DATA check in configure.ac which sets _XOPEN_SOURCE _XOPEN_SOURCE_EXTENDED.

* Focus events can cause trouble if left on and they can't be turned off during idle periods (like the other states are) because we'd miss events. So add a server option to control them. Defaults to off.

* Always push a focus event when the application turns it on, prompted by discussion with Hayaki Saito a while ago.

* Mark control commands specially so the client can identify them, based on a diff from George Nachman a while back.

* Merge branch 'obsd-master'

* revert r1.156 "Add support for focus notifications when tmux pane changes" beck@ found annoying beeps if a machine was shutdown while tmux is running and you then focus in/out of an xterm; kettenis tracked it down to 1.156.

* escape "Ss", becuase groff thinks it has found a macro;

* The actual terminfo entries we ended up with for cursor changes are Cs, Ce, Ss and Se (not Cc, Ce, Cs, Csr). So use and document these instead of the ones we were using earlier.

* Amend tmux.1 handling in .gitignore

* Merge branch 'obsd-master'

* Demote the old single-character replacement variables (#S and friends) to aliases of formats. From Tiago Cunha.

* Add host_short format, from Tiago Cunha.

* Use u_char for the send-keys string to avoid mangling top-bit-set characters when they are promoted to int and passed to window_pane_key. Reported by Jacob Bang.

* Instead of eating 1024 bytes or so for the arguments of each command, save memory by using an RB tree. From Tiago Cunha.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Add a COPYING file, suggested by Dagobert Michelsen.

* Merge branch 'obsd-master'

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Don't let cursor position overflow when reflowing, from Christopher Collins.

* Reserve space for \0 in cmd_print, from George Nachman.

* RIS should reset focus reporting, from Hayaki Saito.

* Rename tmux.1.in back to tmux.1 and generate tmux.1.{mdoc,man} instead.

* Don't limit width and height to 222 in standard mouse mode.

* Use $(srcdir) for generating tmux.1, reported by fasta_ on IRC.

* .Op Fl b not .Fl b for run-shell synopsis, from Ben Boeckel.

* Rename global configuration define.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Use sysconfdir for the location of global tmux.conf (but default it to /etc), based on changes from Dagobert Michelsen.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Merge branch 'obsd-master'

* When using choose-tree -u, start with the current window highlighted. From Thomas Adam.

* Get session of -t window rather than client's window.

* Call recalculate_sizes() after killing window in case it is in a grouped session, from Daniel Ralston.

* Pass tmux.1.in to awk on stdin rather than as an argument.

* Add compat for cfmakeraw, from Dagobert Michelsen.

* Use lockf which is more portable than flock, from Dagobert Michelsen.

* -paths.h. Fixes Solaris, from Dagobert Michelsen.

* Don't let server_client_check_focus use a dead bufferevent, from Romain Francoise.

* (long long) and %lld for time_t output ok nicm

* %zu format for size_t.

* Generate tmux.1 using mdoc2man.awk on Solaris, issue brought up and changes tested by Dagobert Michelsen.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Add back missing -V flag

* Merge branch 'obsd-master'

* Remove some Korean characters from the zero-width list that apparently shouldn't be there, from Jeong Mok Cho.

* Copy the client into the new cmdq in source-file so commands that work on it (such as new-session) can work. Fixes issue reported by oss-adv at users dot sf dot net.

* Call setlocale(LC_TIME) at startup.

* TODO tweaks.

* Send an SGR0 after turning on modifyOtherKeys to fix Terminal.app which treats \033[>4;1m and \033[4;1m (bold+underline). Reported & tested by otto@.

* Set EV_WRITE for jobs or run/if-shell jobs can hang. From Chris Johnsen.

* Fix bug where end guard in control mode was not printed after session destroyed, from George Nachman.

* Missed -o from set-window-option, from Ben Boeckel.

* Add wait-for to tmux.vim from Ben Boeckel.

* Need errno.h, reported by Swaroop M S.

* Remove some code not needed on OpenBSD.

* Use proc_bsdinfo which works on older OS X versions, from OZAKI Kiichi.

* TODO changes.

* If -s to swap-pane is not given, use the current pane.

* Make copy-mode -u still scroll up if already in copy mode, handy for people who bind it with -n.

* Tidy up and trim down TODO file.

* New code doesn't build on old versions of OS X so only support 10.7 and later. Reported by Jared Scheel and tested by Chris Johnsen.

* Add define for timersub to compat.h.

* Trivial typo fixes in changes.

* Add TMUX_TMPDIR variable to put the socket directory outside TMPDIR. From Ben Boeckel.

* Move the cursor back into the last column on CUU/CUD to match xterm behaviour. From George Nachman.

* Remove tmux's (already minimal) 88 colour support. Such terminals are few and unnecessary.

* Working on 1.9

* Update CHANGES and configure.ac for 1.8 release.

* Merge branch 'obsd-master'

* Only accept partial keys if the timer has not expired, fixes infinite loop when Escape is pressed the wrong number of times.

* Fix compiler warnings, missing #include. From Thomas Adam.

* Merge branch 'obsd-master'

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Remove compat/vis.h from cmd-save-buffer.

* Try to establish client for run-shell and if-shell if no -t.

* Revert the command-prefix change which breaks sequences of commands.

* Add to TODO.

* Add to TODO.

* Use -std=gnu99 not c99 with GCC.

* Portability fix-ups

* Fixup Makefile

* Merge branch 'obsd-master'

* Use -std=gnu99 not c99 with GCC.

* Spacing, warning nits.

* Set pane resize flag when needed.

* Sort includes and fix spaces.

* Man page fixes.

* b comes before t.

* Process ^[ as meta when a partial key is found.

* Add -P and -F to new-session.

* Create a new context when copying instead of using the input context. The input context may not exist yet. Fixes crash when copying from config file errors.

* Extend jobs to support writing and use that for copy-pipe instead of popen, from Chris Johnsen.

* Handle empty pending output (not a failure) and add \n. From George Nachman.

* Handle no client better in display-message.

* When only two panes in a window, only draw half the separating line as active.

* Only send end guard if begin was sent, from George Nachman.

* Include prefix on ids, from George Nachman.

* Don't zoom windows with one pane, from Romain Francoise.

* We ignore SIGWINCH until ready, so send a MSG_RESIZE immediately when becoming ready.

* Use single stdout and stderr for control clients.

* Add time and a command count to control mode guards, based on code from George Nachman.

* Fix handling of short (< 4 character) checksums and a bug with parsing old-style custom layouts. Based on fix from Chris Johnsen.

* Do not redraw panes if invisible.

* Rename session idx to session id throughout and add $ prefix to targets to use it, extended from a diff from George Nachman.

* Add wait-for -L and -U for lock and unlock, from Thiago Padilha.

* Add a wait-for command which blocks a client on a named channel until it is woken up again (with wait-for -S). From Thiago Padilha.

* Allow lastgc to be NULL in grid_string_cells so find-window doesn't crash, problem reported by eugene everson.

* Do not leak command in formats, from Romain Francoise.

* Add some additional debug logging.

* Continue the parent cmdq after sourcing a file.

* Preserve trailing spaces with capture-pane -J, from George Nachman.

* tty.path can be NULL, don't dereference it. From George Nachman.

* Remove some unused/unnecessary control notifications, from George Nachman.

* Add -q flags to shut up errors to capture-pane and show-options, from George Nachman.

* Send DSC 1000p at the beginning of a -CC client's lifetime and ST and the end, from George Nachman.

* Remove previous.

* Add -A flag to new-session to make it behave like attach-session if the session exists. If -A is used, -D behaves like -d to attach-session.

* Add resize-pane -Z to temporary zoom the active pane to occupy the full window or unzoom (restored to the normal layout) if it already zoomed, bound to C-b z by default. The pane is unzoomed on pretty much any excuse whatsoever.

* Add a -o option to set-option to prevent setting an option already set, from Thiago Padilha.

* Add a command queue to standardize and simplify commands that call other commands and allow a command to block execution of subsequent commands. This allows run-shell and if-shell to be synchronous which has been much requested.

* Expand format variables in the run-shell and if-shell shell commands, from Thiago Padilha.

* Add pane_tabs format to format_window_pane based on code from George Nachman.

* Handle focus events from the terminal, from Aaron Jensen.

* Fix error reporting for client commands by adding a flag to cmd_find_client to tell it whether or not to show errors, sometimes it's needed and sometimes not.

* Do pane resize ioctls once at the end of the server loop rather than immediately.

* Add option command-prefix which is automatically prepended to any command (apart from a naked default-shell). The default is "exec ".

* Add support for focus notifications when tmux pane changes, based on work by Aaron Jensen.

* Couple of fixes pointed out by jmc.

* Process ^[ as meta when a partial key is found.

* Add -P and -F to new-session.

* Add a load of miscellaneous pane formats, from George Nachman.

* Add session_set_current helper function, extracted from a diff from Aaron Jensen.

* Add -C and -J to capture pane to escape control sequences and to join wrapped line, based on a diff from George Nachman.

* evbuffer_readline returns allocated storage, don't leak it.

* Need to set clients in context before changing their reference count.

* Fix so capture-pane/save-buffer can work in control clients, from George Nachman.

* Add copy-pipe mode command to copy selection and also pipe to a command.

* Add -e flag to capture-pane to include embedded ANSI SGR escape sequences, from George Nachman.

* Don't use a target-client for stdout, just always cmdclient.

* Remove unnecessary initializers of cmd_ctx.

* load_cfg can actually use the same context now they are reference counted.

* Add functions to allocate and free command contexts rather than doing it all on the stack.

* Instead of skipping del_curterm on FreeBSD < 7, skip it on ncurses < 5.7. It looks like 5.6 on Linux has the problem too. Reported by Myles Dear.

* Prevent lock on control clients, not on others.

* Don't try to print unterminated strings when loading configuration file.

* Unbreak line wrapping.

* Use tty_raw on stop, not tty_puts.

* Don't hang when clearing line in choose mode now that the cursor stays at the end with wrap.

* Fix double space in sessions template.

* Add resize-pane -x and -y for absolute pane size (much requested).

* Implement DECAWM (SM/RM 7) using existing MODE_WRAP flag.

* Correctly handle UTF8 mouse option being toggled, from Egmont Koblinger.

* Support the latest theory for mouse input, this is enabled/disabled with SM/RM 1006 and is similar in style to SGR input: \033[<b;x;yM or \033[b;x;ym. From Egmont Koblinger.

* Add client_session and client_last_session formats.

* No more lint means no more ARGSUSED.

* In terminals with XT, turn on modifyOtherKeys=1 with the escape sequence and handle the most common set. Pass them through if xterm-keys is on.

* Create a new context when copying instead of using the input context. The input context may not exist yet.

* Instead of loads of little screen_write_*_on and off functions which just change mode flags, just have screen_write_mode_set and screen_write_mode_clear.

* Add various checks to turn off bits that can't work in control mode (such as lock).

* Do not include status line in size calculations in control mode.

* Don't set key KEYC_NONE on xterm_keys_find match()

* Include the \033 in the key tree and adjust key matching for this change.

* Support capture-pane -p to send to stdout.

* tweak previous; ok nicm

* Fix a couple of memory leaks, from Romain Francoise.

* Make choose-tree actually work again.

* Fix a comment for new key table names.

* Tidy by splitting default key tables into two.

* Add -c to refresh-client to set client size in control mode, based on code from George Nachman.

* Aargh. Spaces -> tabs.

* Clarify choose-tree entry in man page.

* Run session command before window in choose-tree.

* Do not crash when calling choose-tree with a command that changes the mode.

* Fix constness of cmd_template_replace, window_choose_add_item and window_choose_add_window.

* Add user options, prefixed with @. May be set to any arbitrary string.

* Add -v to set and setw to show only option value.

* Add a format client_prefix which is 1 if prefix key has been pressed, used for example #{?client_prefix,X,Y}. Also a few extra server_client_status needed.

* Show alias in lscm output.

* Rework reflow code so it does not do so much allocation which should be faster with large histories.

* Allow choose commands to be used outside tmux, so long as at least one client is attached.

* Extend jobs to support writing and use that for copy-pipe instead of popen, from Chris Johnsen.

* Handle empty pending output (not a failure) and add \n. From George Nachman.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Handle no client better in display-message.

* When only two panes in a window, only draw half the separating line as active.

* Don't let display-message crash if no client, from George Nachman.

* Only send end guard if begin was sent, from George Nachman.

* Include prefix on ids, from George Nachman.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Write escaped output in control mode rather than hex, from George Nachman.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Clarify zoom/unzoom, from Romain Francoise.

* Don't zoom windows with one pane, from Romain Francoise.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* We ignore SIGWINCH until ready, so send a MSG_RESIZE immediately when becoming ready.

* Don't add prefix to %output pane id.

* Clean up capture-pane and add -P option to dump pending output, based on code from George Nachman.

* Document control mode in the manpage, from George Nachman.

* Use single stdout and stderr for control clients.

* Fix if-shell and run-shell if there are no sessions. Batted around through several people, finished off by Chris Johnsen.

* Add a home and end as modified by xterm in keypad mode, from Chris Johnsen.

* Fix a warning.

* Add time and a command count to control mode guards, based on code from George Nachman.

* Fix handling of short (< 4 character) checksums and a bug with parsing old-style custom layouts. Based on fix from Chris Johnsen.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Zoom script is no longer needed.

* Do not redraw panes if invisible.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Rename session idx to session id throughout and add $ prefix to targets to use it, extended from a diff from George Nachman.

* Fix --disable-static, reported by Shea Levy.

* Add wait-for -L and -U for lock and unlock, from Thiago Padilha.

* Add a wait-for command which blocks a client on a named channel until it is wokrn up again (with wait-for -S). From Thiago Padilha.

* Allow lastgc to be NULL in grid_string_cells so find-window doesn't crash, problem reported by eugene everson.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Do not leak command in formats, from Romain Francoise.

* Unzoom on last-pane and fix a typo, from Romain Francoise.

* Add some additional debug logging.

* Continue the parent cmdq after sourcing a file.

* Preserve trailing spaces with capture-pane -J, from George Nachman.

* Print %%error not %%end guard on error, from George Nachman.

* tty.path can be NULL, don't dereference it. From George Nachman.

* Remove some unused/unnecessary control notifications, from George Nachman.

* Add -q flags to shut up errors to capture-pane and show-options, from George Nachman.

* Send DSC 1000p at the beginning of a -CC client's lifetime and ST and the end, from George Nachman..

* Remove previous

* Plug small memory leak in run-shell

* Add -a to capture-pane to capture alternate screen, from George Nachman.

* Use \\ not \ for escaping \.

* Add -A flag to new-session to make it behave like attach-session if the session exists. If -A is used, -D behaves like -d to attach-session.

* Add resize-pane -Z to temporary zoom the active pane to occupy the full window or unzoom (restored to the normal layout) if it already zoomed, bound to C-b z by default. The pane is unzoomed on pretty much any excuse whatsoever.

* Add a -o option to set-option to prevent setting an option already set, from Thiago Padilha.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Add a command queue to standardize and simplify commands that call other commands and allow a command to block execution of subsequent commands. This allows run-shell and if-shell to be synchronous which has been much requested.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Expand format variables in the run-shell and if-shell shell commands, from Thiago Padilha.

* Tidy TODO and nuke stuff that is done in some form or not going to happen.

* Add to TODO.

* The visit -> Visit

* www Project Page -> SourceForge Page

* Merge send-prefix into send-keys.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Merge show-buffer into save-buffer.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Add pane_tags format to format_window_pane based on code from George Nachman.

* Handle focus events from the terminal, from Aaron Jensen.

* Use -O2 without debugging.

* Fix error reporting for client commands by adding a flag to cmd_find_client to tell it whether or not to show errors, sometimes it's needed and sometimes not.

* Allow display-message with no curclient.

* Missing PANE_RESIZE define.

* Do pane resize ioctls once at the end of the server loop rather than immediately.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Add pane_current_command format.

* Remove a couple of FAQ bits that are out of date and not frequent.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Add option command-prefix which is automatically prepended to any command (apart from a naked default-shell). The default is "exec ".

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Add support for focus notifications when tmux pane changes, based on work by Aaron Jensen.

* Add a load of miscellaneous pane formats, from George Nachman.

* Add session_set_current helper function, extracted from a diff from Aaron Jensen.

* Add to TODO.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Add -C and -J to capture pane to escape control sequences and to join wrapped line, based on a diff from George Nachman.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* evbuffer_readline returns allocated storage, don't leak it.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Remove stray blank line.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Need to set clients in context before changing their reference count.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Clear last attributes after reset in string_cells, from George Nachman.

* Fix so capture-pane/save-buffer can work in control clients, from George Nachman.

* Include ML and IRC in the text.

* Tweak bold link.

* Simplify main www page.

* Move NOTES->README, move Vim syntax file documentation to the file itself and otherwise tweak some bits.

* Prevent lock on control clients, not on others.

* Add copy-pipe mode command to copy selection and also pipe to a command.

* Don't try to print unterminated strings when loading configuration file.

* Add -e flag to capture-pane to include embedded ANSI SGR escape sequences, from George Nachman.

* Don't use a target-client for stdout, just always cmdclient.

* Remove unnecessary initializers of cmd_ctx.

* load_cfg can actually use the same context now they are reference counted.

* Unbreak line wrapping.

* Add functions to allocate and free command contexts rather than doing it all on the stack.

* Use tty_raw on stop, not tty_puts.

* Don't hang when clearing line in choose mode now that the cursor stays at the end with wrap.

* Fix double space in sessions template.

* Add resize-pane -x and -y for absolute pane size.

* Implement DECAWM (SM/RM 7) using existing MODE_WRAP flag.

* Correctly turn handle UTF8 mouse option being toggled, from Egmont Koblinger.

* Support the latest theory for mouse input, this is enabled/disabled with SM/RM 1006 and is similar in style to SGR input: \033[<b;x;yM or \033[b;x;ym. From Egmont Koblinger.

* Add client_session and client_last_session formats.

* No more lint means no more ARGSUSED.

* Remove stray test code which would convert abc to x.

* In terminals with XT, turn on modifyOtherKeys=1 with the escape sequence and handle the most common set. Pass them through if xterm-keys is on.

* I strongly suspect it is possible for tmux to block on detach in tty_raw, so make the fd blocking again much later and have tty_raw just retry the write a few times.

* Instead of loads of little screen_write_*_on and off functions which just change mode flags, just have screen_write_mode_set and screen_write_mode_clear.

* Add various checks to turn off bits that can't work in control mode (such as lock).

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Do not include status line in size calculations in control mode.

* Don't set key KEYC_NONE on xterm_keys_find match()

* Fix a couple of memory leaks, from Romain Francoise.

* Don't omit half the default table (!= not ==).

* Include the \033 in the key tree and adjust key matching for this change.

* Make choose-tree actually work again.

* Support capture-pane -p to send to stdout.

* Fix a comment for new key table names.

* Fix function parameter to tty_keys_free.

* Tidy by splitting default key tables into two.

* Add -c to refresh-client to set client size in control mode, based on code from George Nachman.

* Spaces -> tabs.

* Do not leak formats in status_replace.

* Clarify choose-tree entry in man page.

* Run session command before window in choose-tree.

* Do not crash when calling choose-tree with a command that changes the mode.

* Fix constness again, sigh.

* No more need for freefn.

* Fix constness of window_choose_add_item and _window.

* Fix constness of cmd_template_replace.

* Fix choose-tree usage.

* Add user options, prefixed with @. May be set to any arbitrary string.

* Return error for --foo when using compat/getopt.c.

* Add -v to set and setw to show only option value.

* Use proc_pidinfo on Darwin for process name too, from OZAKI Kiichi.

* Remove stray change accidentally committed.

* Add a format client_prefix which is 1 if prefix key has been pressed, used for example #{?client_prefix,X,Y}. Also a few extra server_client_status needed.

* Allow formats in status options.

* Show alias in lscm output.

* Rework reflow code so it does not do so much allocation which should be faster with large histories.

* Allow choose commands to be used outside tmux, so long as at least one client is attached.

* Remove free callback for window_choose_data objects.

* Miscellaneous tidying of choose API, including:

* Add to TODO.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Add to TODO list.

* Minor update to .gitignore

* Use osdep_get_cwd() for format change

* Merge branch 'obsd-master'

* Automatically reflow wrapped lines when a pane is resized, requested by many over the years and finally implemented by Richard Woodbury.

* Don't set some string formats if the string is NULL.

* Only set AUTO{MAKE,CONF}_VERSION on OpenBSD

* Corrections to SYNCING

* Unused variable/type nit from Thomas Adam.

* Add -Wdeclaration-after-statement.

* Merge branch 'obsd-master'

* Rather than having two grids for each pane, one for ASCII and one for UTF-8, collapse the two together. Simplifies the code at the expense of more memory (which can probably be reduced again later).

* Style nits - return (x) not return x.

* Merge branch 'obsd-master'

* Do not allow cursor colours to be set beginning with ? as that will report the colour, from Hayaki Saito.

* Fix some blank line nits.

* Merge branch 'master' of ssh://git.code.sf.net/p/tmux/tmux-code

* Update www for new SF URLs.

* Updated SYNCING

* Merge branch 'obsd-master'

* Remove the layout undo/redo code which never really worked.

* Implement ECH (erase character, CSI X). Reported by Christian Neukirchen.

* If timing between keys is less than (by default) 1 millisecond, assume the text is being pasted. assume-paste-time option changes the value (0 disables). Based on a diff from Marcin Kulik.

* Merge branch 'obsd-master'

* Fix keyword matching.

* Add ^ and $ special command targets to select lowest and highest numbered windows, from Raghavendra D Prabhu.

* Add -T option to select-window to toggle to last window if already current, from Raghavendra D Prabhu.

* Add missing function prototype.

* Add a -u flag to choose-tree to start uncollapsed, from Raghavendra D Prabhu.

* We no longer use struct eproc for kinfo_proc in sysctl.h so there is no direct need for sys/proc.h or sys/resource.h.  Some consumers of kinfo_proc need these for the proc flags and rlimit defines like RLIM_INF so add the appropriate includes to them. OK deraadt@ sthen@

* Change load_cfg to fix a crash reported by jasper.

* Use the CMD_*_USAGE defines consistently, from Thomas Adam.

* Merge branch 'obsd-master'

* .+

* Handle resetting 256-colours properly when parsing #[default], #[fg=default] and #[bg=default] styles.

* Use strlcat not strncat in load_cfg and some other trivial tidying from Tiago Cunha.

* Fix argument order in a log statement.

* Simplify command string parsing with a helper function from Tiago Cunha.

* Fix return value of load_cfg, from Thomas Adam.

* Merge branch 'obsd-master'

* Support middle-click paste, based on a diff from Ailin Nemui.

* Support the 47 and 1047 SM and RM sequences (alternate screen without cursor), requested by I forget who ages ago.

* Merge branch 'obsd-master'

* Correctly aggregate together errors from nested config files (with source-file). Fix by Thomas Adam, reported by Sam Livingstone-Gray

* Allow cmd-run-shell to accept -t to specify the pane to display the output, requested by Alexander Tsepkov.

* When scrolling in copy mode with the mouse, scroll screen rather than moving cursor. This change from Ailin Nemui, alternative to a change from Stephen Hicks.

* Revert last, after discussion it isn't necessary.

* Add window-status-last-* options, from Boris Faure.

* Fix session choice so that preferring unattached sessions actually works, reported by Drew Frank.

* Call realpath earlier on the socket directory path rather than on the socket file path because the latter may not exist yet and in that case realpath is allowed to fail. From Romain Francoise.

* Merge branch 'obsd-master'

* Merge branch 'master' of ssh://tmux.git.sourceforge.net/gitroot/tmux/tmux

* Put helper function back, will be needed in a bit.

* Merge branch 'obsd-master'

* Add halfpage commands to mode command string table (missed by accident), from Thomas Adam.

* Clarify some points about config files, notably that they are only read at server start. From Thomas Adam.

* Use a utility function for common code to show errors in config file, from Thomas Adam.

* Sanitise additional .mailmap entries

* Merge branch 'obsd-master'

* Add .mailmap for commit author translations

* Show last client activity time in default choose-client list.

* Merge branch 'obsd-master'

* fix an off-by-one

* Merge branch 'obsd-master'

* Make mouse event structure clearer by defining events (up, click, drag) and simplifying how buttons and wheels are represented, from Ailin Nemui. Should be no functional changes.

* Merge branch 'obsd-master'

* Add ability to active pane in list-windows and find-window formats, from Carl Henrik Lunde.

* Fix BELL_NONE which had been broken in some code reorganisation or other also don't redraw unnecessarily. From Seiji Ohashi.

* Fix bad size in memcpy from Romain Francoise.

* Fix typo bell->bells from Thomas Adam.

* +.

* Merge branch 'obsd-master'

* Fix some function prototypes from Helmut Tessarek.

* Link to git instructions from index.html.

* Don't push all tags when releasing tmux

* Merge branch 'master' of ssh://tmux.git.sourceforge.net/gitroot/tmux/tmux

* Update website.

* Working on 1.8

* Update NOTES, CHANGES, configure.ac for 1.7 release

* Merge branch 'obsd-master'

* Fix a use-after-free when collapsing the tree in choose mode, from Carl Henrik Lunde.

* Merge branch 'obsd-master'

* Add tree keys to vi mode too, missed by accident.

* Remove references to PATCHES file

* Make some tweaks to NOTES and add a paragraph on git rather than huge PATCHES file.

* Reference PATCHES document from TODO file

* Add PATCHES document

* Add explanatory sections to TODO file

* +.

* Add choose-list to tmux.vim

* Update TODO list.

* Merge branch 'obsd-master'

* Allow session tree (C-b s) to expand and collapse sessions with left/right/space keys. From Thomas Adam.

* Remove some out of date text from man page, from Thomas Adam.

* Merge branch 'obsd-master'

* Do not test client flags against TTY_FREEZE bit, reported by Tom Ryder.

* Merge branch 'obsd-master'

* Do not leak file descriptor if not a tty, reported by Sebastien Marie.

* Merge branch 'obsd-master'

* Fix up missing bits.

* Add notification for input from a pane, from George Nachman.

* Fix search forward so it can match strings on the last line, SF bug 3571114 from "LiJunLe".

* Merge branch 'master' of ssh://tmux.git.sourceforge.net/gitroot/tmux/tmux

* Don't rely on "-s ours" for merging

* Merge branch 'obsd-master'

* Fix some UTF-8 Japanese issue on OS X, SF bug 3566884.

* Use ACS characters for choose-tree arrows based on diff from Romain Francoise.

* Merge branch 'obsd-master'

* Add control_write_buffer, from George Nachman.

* Use pgrp of pty fd not pid of immediate child when recovering current working directory (like current process). From Marcel Partap.

* Use pgrp of pty fd not pid of immediate child when recovering current working directory (like current process). From Marcel Partap.

* Fix some UTF-8 Japanese issue on OS X, SF bug 3566884.

* Use ACS characters for choose-tree arrows based on diff from Romain Francoise.

* Merge branch 'master' of ssh://tmux.git.sourceforge.net/gitroot/tmux/tmux

* Add release instructions for new tmux versions

* .+ SYNCING.

* Add SYNCING document

* Merge branch 'obsd-master'

* Handle empty list properly in choose-list, based on fix from Thomas Adam.

* We can't tell what the terminal has done with a DCS string, so reset the cursor and attributes afterwards.

* Fixup Makefile.am

* Trivial code simplification from Tim Ruehsen.

* Remove xterm CRA support - support is patchy and it will be done better using margins.

* Use the right index when adding item in choose-tree, from Thomas Adam.

* When choosing a pane found by find-window, switch to that pane rather than just the window. Also use a helper function for the inner loop.

* Rename variables to something a but more understandable.

* add cmd-choose-list to allow arbitrary options to be selected. From Thomas Adam.

* Remove an unused variable.

* Send notifications to control clients. Also don't redraw client when suspended.

* Change format of choose-tree arrows slightly, from Romain Francoise.

* If stdin in the client is enable immediately, tmux will eat anything sent to stdin before it is needed, which can be inconvenient (eg pasting commands). Instead, start with stdin disabled and reuse MSG_STDIN from server->client to mean that stdin should be enabled. Based on a diff from Chris Johnsen.

* Can't call evtimer_pending on uninitialized events, call evtimer_initialized first. Reported by Vladimir Lomov, fix from Thomas Adam slightly modified by me.

* Trivial code simplification from Tim Ruehsen.

* .gitignore + Makefile Makefile.in configure

* Add .gitignore

* Make autogen.sh executable

* Change WWW links to Git not Subverson.

* Remove xterm CRA support - support is patchy and it will be done better using margins.

* Use the right index when adding item in choose-tree, from Thomas Adam.

* When choosing a pane found by find-window, switch to that pane rather than just the window. Also use a helper function for the inner loop.

* Rename variables to something a but more understandable.

* add cmd-choose-list to allow arbitrary options to be selected. From Thomas Adam.

* Remove an unused variable.

* Send notifications to control clients. Also don't redraw client when suspended.

* Change format of choose-tree arrows slightly, from Romain Francoise.

* If stdin in the client is enable immediately, tmux will eat anything sent to stdin before it is needed, which can be inconvenient (eg pasting commands). Instead, start with stdin disabled and reuse MSG_STDIN from server->client to mean that stdin should be enabled. Based on a diff from Chris Johnsen.

* Can't call evtimer_pending on uninitialized events, call evtimer_initialized first. Reported by Vladimir Lomov, fix from Thomas Adam slightly modified by me.

* Sync OpenBSD patchset 1168:

* Sync OpenBSD patchset 1167:

* Sync OpenBSD patchset 1166:

* Sync OpenBSD patchset 1165:

* Sync OpenBSD patchset 1164:

* Sync OpenBSD patchset 1163:

* Sync OpenBSD patchset 1162:

* Change a log to fprintf that was missed last time around, from Tiago Cunha.

* Instead of requiring a prompt to enter all numbers >10, go back to 0-9a-z and add A-Z and enter the prompt when M-0 to M-9 are pressed (like in copy mode). Prompted by request from mcbride@, help from Thomas Adam.

* xterm won't reach version 500 for a while so set that as the upper limit.

* Fix up window reference counting and don't crash if the rename timer fires while the window is dead but still referenced. Fixes problem reported by Michael Scholz.

* +.

* Boldify windows with alerts in choose-* list.

* Tidy up tty_write, from Sean Estabrooks.

* Use a separate define for each default format template and strip clutter from the choose-tree defaults.

* Add a patch missed during a merge sometime to use TAILQ_FOREACH_SAFE. From Tiago Cunha.

* Remove osdep include.

* Sync OpenBSD patchset 1160:

* Sync OpenBSD patchset 1159:

* Sync OpenBSD patchset 1158:

* Sync OpenBSD patchset 1157:

* Sync OpenBSD patchset 1156:

* Sync OpenBSD patchset 1155:

* Sync OpenBSD patchset 1154:

* Sync OpenBSD patchset 1153:

* Add to TODO.

* Simplify width calculation (all numbers always sequential) and don't rely on uninitialized data, from Thomas Adam.

* Remove dead code, from Sean Estabrooks.

* Another missing format from sam at sltosis.org.

* Fix a return type.

* Instead of numbering choose mode items 0-9a-z and then nothing, number them all and if there are more than 10 use a prompt when 0-9 is pressed. From Thomas Adam.

* Add some missing formats from Samuel Le Thiec.

* Sync with reality.

* Document pane_index variable, from sam at sltosis dot org.

* Add a queue of notifys and a way to turn them off and on (we do not want notifys to happen during some commands). Based on code from George Nachman.

* Sync OpenBSD patchset 1152:

* Now that the queue _SAFE macros are available, use them instead of rolling our own. This is analogous to the recent changes to the detach-client and kill-{session,window} commands.

* Sync with OpenBSD. Mostly because of the added _SAFE macros which is needed by an upcoming change.

* Nuke unused variable from Thomas Adam.

* Remove remaining xfree calls from the portable version.

* Sync OpenBSD patchset 1151:

* Sync OpenBSD patchset 1150:

* Sync OpenBSD patchset 1149:

* Sync OpenBSD patchset 1148:

* Sync OpenBSD patchset 1147:

* Update list of sources to reflect the recent changes introduced by the choose-tree command.

* Sync OpenBSD patchset 1146:

* Sync OpenBSD patchset 1144:

* Add.

* Make command exec functions return an enum rather than -1/0/1 values and add a new value to mean "leave client running but don't attach" to fix problems with using some commands in a command sequence. Most of the work by Thomas Adam, problem reported by "jspenguin" on SF bug 3535531.

* xfree is not particularly helpful, remove it. From Thomas Adam.

* +.

* Move a NULL check inside a function, from Tiago Cunha.

* Fix choose-tree usage string.

* remove extraneous line;

* Add choose-tree command to show windows and sessions in the same list. Change choose-window and -session to use the same code. From Thomas Adam.

* Sort SRCS list.

* + entry to show default options, suggested by Thomas Adam.

* Clear flags across all sessions, from Thomas Adam.

* Sync OpenBSD patchset 1143:

* Sync OpenBSD patchset 1142:

* Sync OpenBSD patchset 1141:

* Sync OpenBSD patchset 1140:

* Provide common helper function for adding windows and sessions to choose lists and expand %% in command before using it rather than at callback time. From Thomas Adam.

* Clean up and simplify the choose mode code, from Thomas Adam.

* Trim a blank line.

* Remove a couple of unused variables from redbrain at gcc dot gnu dot org.

* More ifdef goo is needed due to NOKERNINFO.

* Sync OpenBSD patchset 1139:

* Add control.c to the list of sources.

* Sync OpenBSD patchset 1138:

* Sync OpenBSD patchset 1137:

* Sync OpenBSD patchset 1136:

* Sync OpenBSD patchset 1135:

* Sync OpenBSD patchset 1134:

* Sync OpenBSD patchset 1133:

* Sync OpenBSD patchset 1132:

* Actually write all the data to stdout/stderr.

* Add a skeleton mode to tmux (called "control mode") that let's tmux commands be sent and output received on stdout. This can be used to integrate with other terminal emulators and should allow some other things to be made simpler later. More to come so doesn't do much yet and deliberately not documented.

* Tidy up bell code, from Thomas Adam.

* Add a couple of NULL pointer checks to key binding functions, from jspenguin on SF bug 3535531.

* Do not crash when the current session has no window, fixes a bug reported by Giorgio Lando. Fix from Thomas Adam.

* Add -a for kill-session, from Thomas Adam.

* Add -a flag for detach-client, from Thomas Adam.

* Simplify references to alerts in the man page, from Thomas Adam.

* Do not use stderr for log file and don't call log_close when not needed.

* Do not use stderr for log file and don't call log_close when not needed.

* Sync OpenBSD patchset 1130:

* Sync OpenBSD patchset 1129:

* Sync OpenBSD patchset 1128:

* Sync OpenBSD patchset 1127:

* Sync OpenBSD patchset 1126:

* Sync OpenBSD patchset 1125:

* Sync OpenBSD patchset 1124:

* Sync OpenBSD patchset 1123:

* Sync OpenBSD patchset 1122:

* Add a simple zoom script from Juan Ignacio Pumarino.

* Add pane title to choose-window template and use the right index for the pane, from Romain Francoise.

* Use RB_FOREACH_SAFE as winlinks are being removed, from Chris Johnsen.

* Use session from -t for killw -a, from Chris Johnsen.

* Use default-shell not _PATH_BSHELL to spawn commands, pointed out by Dennis G?nnewig and Thomas Adam.

* Trim a double space from template.

* Strip layout from choose-windows again (leave in list-windows), suggested by Romain Francoise, diff from Thomas Adam.

* Fix client templates, from Romain Francoise.

* Simplify logging and just fprintf(stderr, ...) for early errors.

* Remove an extraneous word.

* Use a predefined structure for not-space cells used to set attributes.

* Sync OpenBSD patchset 1121:

* Sync OpenBSD patchset 1120:

* Sync OpenBSD patchset 1119:

* Sync OpenBSD patchset 1118:

* Sync OpenBSD patchset 1117:

* Sync OpenBSD patchset 1116:

* Sync OpenBSD patchset 1115:

* Sync OpenBSD patchset 1114:

* Sync OpenBSD patchset 1113:

* Sync OpenBSD patchset 1112:

* Store client in tty struct directly instead of using a callback function pointer.

* Store mouse data in tty structure not on the stack.

* Switch all of the various choose- and list- commands over to the format infrastructure, from Thomas Adam.

* Add a helper function to send ready message.

* Use tty_pane_full_width macro in some more places.

* If there are any terminals with insert mode but not ich1, they can go through the slow path. Tidies code slightly.

* Move some common code to repeat spaces into a function.

* Instead of passing stdin/stdout/stderr file descriptors over imsg and handling them in the server, handle them in the client and pass buffers over imsg. This is much tidier for some upcoming changes and the performance hit isn't critical.

* +/- from Thomas Adam.

* Add FAQ entry on terminal scrollback, from Andrew Pimlott.

* Ignore line continuation when escaped as \\, from Simon Nicolussi.

* Use -t for move-window with -r rather than dying. Reported by Ben Boeckel and Thomas Adam.

* Sync OpenBSD patchset 1111:

* Sync OpenBSD patchset 1110:

* Sync OpenBSD patchset 1109:

* Sync OpenBSD patchset 1108:

* Sync OpenBSD patchset 1107:

* Sync OpenBSD patchset 1106:

* +.

* Add a helper function to open the terminal for attach-/new-session.

* Only enter copy mode on scroll up, from Ailin Nemui.

* Tidy up by adding a macro for the pane being the full screen width, from Ailin Nemui.

* Missing ()s in macros.

* Pull CRA out into a separate function and add ERA, from Ailin Nemui.

* Make unbind-key -a work with -t, based on a diff from Kazuhiko Sakaguchi.

* Sync OpenBSD tree.h due to patchset 1104. Prompted by ore on #tmux.

* Sync OpenBSD patchset 1105:

* Sync OpenBSD patchset 1104:

* Sync OpenBSD patchset 1103:

* Sync OpenBSD patchset 1102:

* default-path has the same possibilities as new-window -c now.

* Add a flag to move-window to renumber the windows in a session (closing any gaps) and add an option to do this automatically each time a window is killed. From Thomas Adam.

* Use int not u_char for colours from options since they may have bit 8 set to mark them as 256-colour. Reported by Chris Johnson.

* Add a buffer with all input from last ground state, will be used for control mode. From George Nachman.

* Sync OpenBSD patchset 1101:

* Sync OpenBSD patchset 1100:

* Sync OpenBSD patchset 1099:

* Sync OpenBSD patchset 1098:

* Sync OpenBSD patchset 1097:

* Sync OpenBSD patchset 1096:

* Sync OpenBSD patchset 1095:

* Sync OpenBSD patchset 1094:

* Add missing prototype.

* Use an enum for client exit reasons, from George Nachman.

* Do not return a buffer on the stack, mentioned by jsg a while ago.

* Use a helper function to fire choose callback.

* Add window-status-separator option, from Thomas Adam.

* Add -a flag to kill-window, from Thomas Adam.

* Fix printing commands with no arguments, from Benjamin Poirier.

* Handle partial keys properly by making sure the timer has actually expired, fixes problems with mintty reported by Michael Simpson.

* Sync OpenBSD patchset 1093:

* Sync OpenBSD patchset 1092:

* Turn automatic-rename off properly if turned off by renaming a window. Reported by Romain Francoise.

* Stop accepting new clients for 1 second on EMFILE/ENFILE. Based on ongoing fixes to other daemons by Theo.

* Sync OpenBSD patchset 1091:

* Sync OpenBSD patchset 1090:

* Sync OpenBSD patchset 1089:

* Sync OpenBSD patchset 1088:

* Sync OpenBSD patchset 1087:

* Sync OpenBSD patchset 1086:

* Sync OpenBSD patchset 1085:

* Sync OpenBSD patchset 1084:

* Adjust OpenBSD patchset 1083 to the portable version.

* Sync OpenBSD patchset 1083:

* Sync OpenBSD patchset 1082:

* Sync OpenBSD patchset 1081:

* Do not fire name timer when automatic-rename is off, from Tim Ruehsen a while ago.

* Fix comment for mouse bits.

* Fix some indentation.

* Simplify mouse input function.

* Minor style nits - return ().

* Turn some errors down to info.

* Fix option name.

* Add a layout history which can be stepped through with select-layout -u and -U commands (bound to 'u' and 'U' by default).

* Add pane_current_path format, suggested by Mikolaj Kucharski.

* Only exit mouse mode on scroll wheel when actually reaching the end of the history, from James Nylen.

* +.

* Only find each window once no matter how many panes, from Jonathan Daugherty.

* Sync OpenBSD patchset 1080:

* Sync OpenBSD patchset 1079:

* Sync OpenBSD patchset 1078:

* Sync OpenBSD patchset 1077:

* Sync OpenBSD patchset 1076:

* Sync OpenBSD patchset 1075:

* Sync OpenBSD patchset 1074:

* Sync OpenBSD patchset 1073:

* Sync OpenBSD patchset 1072:

* Sync OpenBSD patchset 1071:

* Add sys/file.h.

* Accept an argument to show-environment to show one variable, based on a diff from Kazuhiko Sakaguchi.

* Some terminals respond to secondary DA with primary (they ignore the intermediate character). So ignore the possible responses to primary DA.

* Fix save-buffer usage, from Kazuhiko Sakaguchi.

* Remove a stale comment.

* Add -C -N -T flags to find-window to find in content, name, title. From Jonathan Daugherty.

* Check changes_timer with event_initialized before event_del.

* 50 is a too low trigger default on larger terminals, bump to 250.

* Add a simple form of output rate limiting by counting the number of certain C0 sequences (linefeeds, backspaces, carriage returns) and if it exceeds a threshold (current default 50/millisecond), start to redraw the pane every 100 milliseconds instead of making each change as it comes. Two configuration options - c0-change-trigger and c0-change-interval.

* +.

* Move MSG_IDENTIFY to the last sent by the client, this will be needed by control clients and irrelevant for others.

* Sync OpenBSD patchset 1070:

* Add notify.c to the list of sources.

* Sync OpenBSD patchset 1069:

* Sync OpenBSD patchset 1067:

* Sync OpenBSD patchset 1066:

* Sync OpenBSD patchset 1065:

* Sync OpenBSD patchset 1064:

* Sync OpenBSD patchset 1063:

* Sync OpenBSD patchset 1062:

* Sync OpenBSD patchset 1061:

* Sync OpenBSD patchset 1060:

* Sync OpenBSD patchset 1059:

* Sync OpenBSD patchset 1058:

* Sync OpenBSD patchset 1057:

* Sync OpenBSD patchset 1056:

* Sync OpenBSD patchset 1055:

* Sync OpenBSD patchset 1054:

* Sync OpenBSD patchset 1053:

* Sync OpenBSD patchset 1052:

* Sync OpenBSD patchset 1051:

* Sync OpenBSD patchset 1050:

* Sync OpenBSD patchset 1049:

* Sync OpenBSD patchset 1048:

* Sync OpenBSD patchset 1047:

* Sync OpenBSD patchset 1046:

* Sync OpenBSD patchset 1045:

* Sync OpenBSD patchset 1044:

* Sync OpenBSD patchset 1043:

* On xterm 271 and later, put the terminal into SCL 5 and use DECCRA for scrolling the region in panes (if the large region check isn't hit). With help from Ailin Nemui.

* Add notify hooks for various events, the functions are currently empty stubs but will be filled in for control mode later. From George Nachman.

* $Id$ -> $OpenBSD$.

* Use snprintf for constructing attribute string, from Tim Ruehsen.

* Add a wrap-search option to turn off wrapping of searches in copy mode. From Jacobo de Vera.

* Michael Krysiak points out that some terminals (eg mintty) have cursor styles 5 and 6 too, so allow them to be set.

* Need to call recalculate_sizes() when changing window with the mouse, from marcel partap.

* Add -q option to set-option to turn off info message, from marcel partap.

* Break out termios initialization into a separate function, from George Nachman.

* Do not clear to end of line if the line is full, fixes missing last character in rightmost pane.

* Use the region lower not the pane size to work out where the bottom line is.

* Tweak last fix to actually hit the right end of pane.

* Fix warnings. Doh.

* Check event_initialized before event_del if event may not have been set up; libevent2 complains about this. Reported by Moriyoshi Koizumi.

* Redirect libevent logging to tmux's log.

* Revert screen-write.c r1.54 and fix the bug properly. After wrapping a line in a pane, the cursor needs to move to the next line unless it scrolled.

* +.

* +.

* Send secondary DA to terminals with XT in terminfo when starting up and parse it to work out the xterm version.

* Respond to secondary DA requests.

* Fix a warning. Doh.

* Add a helper function for enabling an optimization to make some code clearer.

* Store context off before moving the cursor when wrapping, to fix long standing bug drawing over the status line.

* +.

* Add -P/-F flags to break-pane too, from George Nachman.

* Erm, use EL in a way that actually works...

* Use EL to clear to end of line if possible.

* Fix trailing \, pointed out by Romain Francoise and a few others.

* Always remember last cursor position when moving up or down, not just for if crossing zero length lines. From Itay Perl.

* Remove some bits leftover from unused backoff code.

* Add a missing call to window_set_name, from George Nachman.

* Use a lock file and flock() to serialize server start, avoids problems when running a bunch of tmux from cron at the same time. Based on a diff from Tim Ruehsen.

* Sync OpenBSD patchset 1042:

* Sync OpenBSD patchset 1041:

* Sync OpenBSD patchset 1040:

* Sync OpenBSD patchset 1039:

* Sync OpenBSD patchset 1038:

* Sync OpenBSD patchset 1037:

* Sync OpenBSD patchset 1036:

* free -> xfree.

* Add -F format to new-window and split-window to use with the -P flag, from George Nachman.

* Accept hex values as keys, needed for send-keys, based on a diff from George Nachman.

* Add A and I keys for vi status line editing.

* Terminate strftime buffer properly and free format string, whoops. From Tiago Cunha.

* Support "bracketed paste" mode. This adds a -p flag to paste-buffer - if this is used and the application has requested bracketed pastes, then tmux surrounds the pasted text by \033[200~ and \033[201~. Applications like vim can (apparently) use this to avoid, for example, indenting the text. From Ailin Nemui.

* Sync OpenBSD patchset 1035:

* Sync OpenBSD patchset 1034:

* Sync OpenBSD patchset 1032:

* Sync OpenBSD patchset 1031:

* The wlmouse offset should be part of the client, not the server. From Ailin Nemui.

* Add move-pane command (like join-pane but allows the same window). Also -b flag to join-pane and move-pane to place the pane to the left or above. From George Nachman.

* ANSIfy function prototypes, from Tim Ruehsen.

* Add printf attribute to a couple of functions, from Tim Ruehsen.

* +book at http://pragprog.com/book/bhtmux/tmux

* Remove accidentally committed option.

* Allow a single option to be specified to show-options to show just that option.

* Use format for display-message, based on a diff from George Nachman.

* +.

* Sync OpenBSD patchset 1030:

* Sync OpenBSD patchset 1029:

* Sync OpenBSD patchset 1028:

* Sync OpenBSD patchset 1026:

* Sync OpenBSD patchset 1026:

* Update, from Ben Boeckel.

* Sort some entries, from Ben Boeckel.

* Add a wrapper function tty_set_size from George Nachman.

* Don't die if fail to get root directory, from Ben Boeckel.

* Check for the right return value from sscanf.

* Document option values, particularly that omitting on|off for a flag is a toggle.

* Sync OpenBSD patchset 1025:

* Sync OpenBSD patchset 1024:

* Sync OpenBSD patchset 1023:

* Sync OpenBSD patchset 1022:

* Adjust function name to the portable version.

* Sync OpenBSD patchset 1021:

* Add -l flag to send-keys to send input literally (without translating key names). From Frank Terbeck.

* Move window name changes into wrapper function window_set_name, from George Nachman.

* Do not change pane when changing window with mouse on status line, pointed out by Romain Francoise.

* Get client_width and client_height the right way round, from Stephen Thirlwall.

* Provide defined ways to set the various default-path possibilities: ~ for home directory, . for server start directory, - for session start directory and empty for the pane's working directory (the default). All can also be used as part of a relative path (eg -/foo). Also provide -c flags to neww and splitw to override default-path setting.

* Sync OpenBSD patchset 1020:

* Sync OpenBSD patchset 1019:

* Sync OpenBSD patchset 1018:

* Sync OpenBSD patchset 1017:

* Sync OpenBSD patchset 1016:

* Add pane id to each pane in layout description (while still accepting the old form). Based on diff from George Nachman.

* id -> ID; ok nicm

* Don't print double spaces in list output.

* Give each window a unique id, like panes but prefixed with @. Based on work from George Nachman.

* Enforce history-limit option when clearing the screen, memory leak spotted by R I Pienaar.

* Sync OpenBSD patchset 1015:

* Sync OpenBSD patchset 1014:

* Sync OpenBSD patchset 1013:

* Sync OpenBSD patchset 1012:

* Add an option to move the status line to the top of the screen, requested by many.

* Call bufferevent_free before closing file descriptor associated with it or bugs in $EventMechanism on $OtherOS makes libevent get it's knickers in a twist. From Dylan Alex Simon.

* Fill in osdep_get_cwd on Darwin, from Alex Ernst.

* Terminate strftime buffer properly even if a really long format string is given, from Tiago Cunha.

* Fix memory leak in error path, from Tiago Cunha.

* Create a debug build by default.

* Working on 1.7.

* Major changes since the previous version.

* Add notes about some potential configuration file breaking in the 1.6 release.

* Done.

* Releases don't have debugging enabled.

* Sync OpenBSD patchset 1011:

* Sync OpenBSD patchset 1010:

* Expand the Id keyword.

* Remove unused backoff code that doesn't do any good.

* Show pane size in top right of display panes mode.

* Sync OpenBSD patchset 1009:

* it's -> its.

* Sync OpenBSD patchset 1008:

* Sync OpenBSD patchset 1007:

* Sync OpenBSD patchset 1006:

* Sync OpenBSD patchset 1005:

* Sync OpenBSD patchset 1004:

* Sync OpenBSD patchset 1003:

* Use RB trees not SPLAY.

* Drop the ability to have a list of keys in the prefix in favour of two separate options, prefix and prefix2. This simplifies the code and gets rid the data options type which was only used for this one option.

* Add strings to allow the aixterm bright colours to be used when configuring colours, requested by Elliott Cable a few months ago.

* One day I will actually fix ALL the warnings before I commit...

* Add a -R flag to send-keys to reset the terminal. Written ages ago and Suggested by someone, I forget who.

* Only hide flags on the current window when the session is attached, from Roland Walker.

* Sync OpenBSD patchset 1002:

* Sync OpenBSD patchset 1001:

* Sync OpenBSD patchset 1000:

* Sync OpenBSD patchset 999:

* Sync OpenBSD patchset 998:

* Sync OpenBSD patchset 997:

* Set IUTF8 in termios where supported, suggested by Egmont Koblinger.

* Add some const and fix a warning.

* Add some trivial additional status line attributes from jwcxz at users dot sourceforge dot net.

* Remove trailing spaces.

* Add an option to disable the window rename escape sequence, from Romain Francoise.

* Add space movement keys for vi mode in the status line from Ben Boeckel.

* Calculate last position correctly for UTF-8 wide characters, reported by Matthias Lederhofer.

* Sync OpenBSD patchset 995:

* Sync OpenBSD patchset 995:

* Add a man page section on window names and pane titles, from Felix Rosencrantz.

* Show how to set default-path to revert to tmux's old behaviour of opening new windows in the current working directory at the time tmux was started, it's not obvious. naddy@ agrees this is a useful inclusion.

* Sync OpenBSD patchset 994:

* Sync OpenBSD patchset 993:

* Sync OpenBSD patchset 992:

* $Id$ not $OpenBSD$.

* Sync OpenBSD patchset 991:

* Sync OpenBSD patchset 990:

* Add CNL and CPL escape sequences.

* Allow $HOME as default-path in tmux.conf so the same config file can be used on different machines regardless of where the user's home directory is. ok nicm

* Add \033[s and \033[u to save and restore cursor position.

* Extend history that can be captured to INT_MIN rather than SHRT_MIN. From Chris Johnsen.

* Reset flags on every loop or it is displayed too often, from Chris Johnsen.

* Sync OpenBSD patchset 989:

* Sync OpenBSD patchset 988:

* formatting errors, found using freebsd's "igor";

* Fix so that when mouse-select-pane and mouse-select-window are both enabled, clicking on the status line does not change the current pane. From Romain Francoise.

* Change the way the working directory for new processes is discovered. If default-path isn't empty, it is used. Otherwise:

* Change the way the working directory for new processes is discovered. If default-path isn't empty, it is used. Otherwise:

* Sync OpenBSD patchset 986:

* Sync OpenBSD patchset 985:

* Sync OpenBSD patchset 984:

* Sync OpenBSD patchset 983:

* Support "jump to" like vi in copy mode using t and T keys. Also add x and X for delete in edit mode.

* Log terminal overrides.

* Add home and end keys for command prompt, from Matthias Lederhofer.

* Make M-f and M-b work the same at the command prompt as in copy mode, pointed out by Romain Francoise.

* New commands and options. From Ben Boeckel.

* Sync OpenBSD patchset 982:

* Sync OpenBSD patchset 981:

* Sync OpenBSD patchset 980:

* Sync OpenBSD patchset 979:

* Add word movement and editing command for command prompt editing, from Ben Boeckel.

* Move word-separators to be a session rather than window option, from Ben Boeckel.

* Add a pane_index format string and use it, from Ben Boeckel.

* Make window_pane_index work the same as window_index, from Ben Boeckel.

* +.

* Typo. From Bastien Dejean.

* Add command colour options. From Ben Boeckel.

* Sync OpenBSD patchset 978:

* Sync OpenBSD patchset 977:

* Sync OpenBSD patchset 976:

* Fix a trivial copy-and-paste error (sx->sy), from Chris Johnsen.

* Add.

* Missing bits for new keys and buffer indexes, from Tiago Cunha

* Option to change status line (message) background when using vi keys and in command mode. From Ben Boeckel.

* Sync OpenBSD patchset 975:

* Sync OpenBSD patchset 974:

* Sync OpenBSD patchset 973:

* Sync OpenBSD patchset 972:

* Sync OpenBSD patchset 971:

* minor formatting fix;

* Use pkg-config for libevent.

* Add screen*:XT to terminal-overrides for tmux-in-tmux, from Romain Francoise.

* Add.

* Missing -o on usage for pipe-pane, from Tiago Cunha.

* Didn't really think the else behaviour through - requiring argv to contain "else" is silly so just omit that, also some manpage tweaks. From Tiago Cunha.

* When copying, make repeat count indicate buffer to replace if used.

* Recognise special keys and binds with multiple modifiers. From Bastien Dejean.

* Sync OpenBSD patchset 970:

* Sync OpenBSD patchset 969:

* Sync OpenBSD patchset 968:

* Sync OpenBSD patchset 967:

* Sync OpenBSD patchset 966:

* Sync OpenBSD patchset 965:

* Sync OpenBSD patchset 964:

* Sync OpenBSD patchset 963:

* Done.

* Alias NPage/PPage as PageDown/PgDn/PageUp/PgUp to reduce occasional confusion.

* Support for \e[3J to clear the history. Also send the corresponding terminfo code (E3) before locking.

* Done!

* Try to resolve relative paths for loadb and saveb (first using client working directory if any then default-path or session wd).

* For initial session, use size of command client even if detached.

* Ignore LC_ALL and LC_CTYPE if they are empty as well as unset.

* Add client formats, from Ben Boeckel.

* Plug a memory leak and update some comments, from Tiago Cunha.

* +.

* +.

* Add an else clause for if-shell, from "arno-" on SourceForge.

* Add manpage, also spaces->tabs.

* Fix some warnings with newer autoconf, from Matt Curtis.

* Sync OpenBSD patchset 962:

* Sync OpenBSD patchset 961:

* Sync OpenBSD patchset 960:

* Sync OpenBSD patchset 959:

* Sync OpenBSD patchset 958:

* Done.

* Add a few more formats for panes (tty, pid, start cmd/cwd).

* Add.

* Add.

* Separate dfly from fbsd as one or the other keeps becoming incompatible ;-). From Antonio Huete Jimenez

* Add -S option to refresh-client to redraw status line, from Marco Beck.

* Reject $SHELL if it is not a full path.

* +.

* Tweaks to the format parts, from Tiago Cunha.

* The HAVE_DIRFD check should be for dirfd() not /proc/$$/fd. Doh.

* +.

* Fix typo: ) -> }.

* Sync OpenBSD patchset 957:

* Sync OpenBSD patchset 956:

* Sync OpenBSD patchset 955:

* Sync OpenBSD patchset 954:

* Add format.c to the list of sources.

* Sync OpenBSD patchset 953:

* Add build instructions based on diff from Frank Terbeck.

* Use %u for process group on Sun OS.

* Mark dead panes with some text saying they are dead, suggested by and with help from Randy Stauner.

* Another memory leak from Tiago Cunha.

* Plug memory leak, from Tiago Cunha.

* tweak previous;

* Add initial framework for more powerful formatting of command output and use it for list-{panes,windows,sessions}. This allows more descriptive replacements (such as #{session_name}) and conditionals.

* Sync OpenBSD patchset 951:

* Sync OpenBSD patchset 950:

* Sync OpenBSD patchset 949:

* libm isn't needed anymore.

* Sync OpenBSD patchset 948:

* -lm is no longer needed, from Tiago Cunha.

* Support \ for line continuation in the configuration file, from Julius Plenz.

* Add pane-base-index option, from Ben Barbour.

* Add a tty_bell wrapper function, from Dylan Alex Simon.

* There is no need to use sqrt()/INFINITY here which simplifies the code and makes it more portable, from Havard Eidnes.

* Sync OpenBSD patchset 947:

* Sync OpenBSD patchset 946:

* Sync OpenBSD patchset 945:

* Sync OpenBSD patchset 944:

* Sync OpenBSD patchset 943:

* Fix a couple of memory leaks, from marcel partap.

* Add a -r flag to switch-client to toggle the client read-only flag. From Johan Commelin.

* +.

* Add up/down/left/right keys in vi edit mode. From "livibetter" SF bug 3385651.

* Use key_bindings_remove for unbind-key -a to allow it to work from key bindings. From "miaout17" SF bug 3392063.

* Correctly skip existing numbers when generating the name for a new session.

* +.

* +.

* Sync OpenBSD patchset 942:

* Sync OpenBSD patchset 941:

* Sync OpenBSD patchset 940:

* $Id$ not $OpenBSD$.

* Sync OpenBSD patchset 939:

* fix error in previous;

* Extend the mode-mouse option to add a third choice which means the mouse does not enter copy mode. Patch from SF bug 3374493.

* Do not require a client here, or pipe-pane will not work from the command line.

* Add.

* Add.

* Fix --enable-static and add a different check for b64_ntop that might work on OS X.

* Sort options alphabetically, from Tiago Cunha.

* Can't use the same va_list twice, from Emanuele Giaquinta.

* Typo.

* Compatibility for b64_ntop, missing from some alternative libc.

* +.

* Only get -lrt when needed, from Pietro Cerutti.

* Typo, from Si Feng.

* Bump version and create a debug build by default.

* Changes for 1.5.

* Releases don't have debugging enabled.

* Use an empty CFLAGS by default to prevent autoconf from setting it when debugging isn't enabled.

* Delete subversion directories before the actual tarball is created.

* Done.

* HP-UX should work now.

* Expand the Id keyword.

* Add missing $Id$.

* Sync OpenBSD patchset 938:

* Pass the right size to calloc (* not **).

* Unused variable.

* Pass the right size to calloc (* not **).

* Sync OpenBSD patchset 936:

* Do not continue to send data to suspended/locked clients or there will be a huge rush of it after they are resumed/unlocked. The main output path was fine but status line updates and the terminal state reset code were missed.

* Sync OpenBSD patchset 935:

* flags[] should be initialized. From Thomas Adam.

* Sync OpenBSD patchset 934:

* Sync OpenBSD patchset 933:

* Make confirm-before prompt customizable with -p option like command-prompt. Also move responsibility for calling status_replace into status_prompt_{set,update} and add #W and #P to the default kill-window and kill-pane prompts. By Tiago Cunha.

* Fix a couple of comments.

* Sync OpenBSD patchset 932:

* Sync OpenBSD patchset 931:

* Done too.

* Show full targets for lsp/lsw -a.

* Done too.

* These are done.

* Use screen_reinit for respawn-pane to keep history and call input_init for respawn-window to break out of waiting for DCS/OSC to finish.

* Sync OpenBSD patchset 930:

* Sync OpenBSD patchset 929:

* Sync OpenBSD patchset 928:

* Change the list-keys format so that it shows the keys using actual tmux commands which should be able to be directly copied into the config file. From Markus Schnalke, tweaked by me.

* Sync OpenBSD patchset 927:

* Sync OpenBSD patchset 926:

* Sync OpenBSD patchset 925:

* Add an option to trigger the terminal bell when there is an alert, from Marco Beck.

* Include the existing window and session name in the prompt when renaming and add a new key binding ($) for rename session. From Tiago Cunha.

* Allow the initial context on prompts to be set with the new -I option to command-prompt. From Tiago Cunha.

* +.

* PANE_FREEZE doesn't do anything anymore, so remove it.

* tparm requires 10 arguments on Solaris.

* +.

* trunk/tmux not tmux/tmux

* Tweaks, one thing I have an uncommitted fix for.

* PatchSet 924 Date: 2011/06/05 12:19:03 Author: nicm Branch: HEAD Tag: (none) Log: Add a respawn-pane command, from Marcel Partap.

* Removed file.

* PatchSet 923 Date: 2011/06/05 11:53:05 Author: nicm Branch: HEAD Tag: (none) Log: Get rid of the layout string code which tries to walk through the layout hierarchy and instead just look at what panes are actually in the window.

* PatchSet 922 Date: 2011/05/30 22:02:28 Author: nicm Branch: HEAD Tag: (none) Log: Fix a typo, spotted by Michal Mazurek..

* Add a couple of extra xterm-style keys that gnome terminal provides, from Dustin Kirkland.

* Add a respawn-pane command, from Marcel Partap.

* Add.

* Get rid of the layout string code which tries to walk through the layout hierarchy and instead just look at what panes are actually in the window.

* Add.

* Add.

* Fix a typo, spotted by Michal Mazurek..

* $Id$ not $OpenBSD$.

* Sync OpenBSD patchset 921:

* Sync OpenBSD patchset 920:

* Sync OpenBSD patchset 819:

* One of these gives us b64_ntop.

* Trim another useless if statement, from Ailin Nemui.

* Add.

* Memory leak in error path, from Tiago Cunha.

* Nuke a redundant if statement, from Tiago Cunha.

* Bye bye stray tmux directory.

* ...

* ...

* ...

* ...

* ...

* .

* Update links.

* Sync OpenBSD patchset 918:

* Sync OpenBSD patchset 917:

* Sync OpenBSD patchset 916:

* Sync OpenBSD patchset 915:

* Sync OpenBSD patchset 914:

* Someone mentioned this at LinuxTag as well.

* tweak the TERMINFO section; ok nicm

* Pass prompts through status_replace so that they can be more helpful (such as showing the previous session name when renaming). From Tiago Cunha.

* Support DECSCUSR sequence to set the cursor style with two new terminfo(5) extensions, Cs and Csr. Written by Ailin Nemui.

* Support xterm(1) cursor colour change sequences through terminfo(5) Cc (set) and Cr (reset) extensions. Originally by Sean Estabrooks, tweaked by me and Ailin Nemui.

* Add.

* Sync OpenBSD patchset 913:

* Sync OpenBSD patchset 912:

* Sync OpenBSD patchset 911:

* Sync OpenBSD patchset 910:

* Sync OpenBSD patchset 909:

* Sync OpenBSD patchset 908:

* Sync OpenBSD patchset 907:

* Sync OpenBSD patchset 906:

* Sync OpenBSD patchset 905:

* Sync OpenBSD patchset 904:

* Support setting the xterm clipboard when copying from copy mode using the xterm escape sequence for the purpose (if xterm is configured to allow it).

* +.

* Add three new copy-mode commands - select-line, copy-line, copy-end-of-line. From Dave Disser and Randy Stauner a while back.

* +.

* Update from Tiago Resende.

* Use xfree not free, from Tiago Cunha.

* Use button mouse mode not any for copy mode, fixes issues with putty. From Ailin Nemui.

* Add some stuff mentioned to me at LinuxTag.

* +.

* Reset last pane properly when using break-pane as well, fixes a problem reported to Debian by Hannes von Haugwitz (bug 622677).

* Reset last pane on swap-pane across windows, fixes crash noticed by hsim at gmx.li.

* Only select pane on click, not drag. From hsim at gmx.li.

* Fix a couple of memory leaks, from Tiago Cunha.

* Fix a memory leak if cmd_pane_session succeeds, from Tiago Cunha.

* Add a new option, mouse-resize-pane. When on, panes may be resized by dragging their borders. From hsim at gmx.li.

* Use the tsl and fsl terminfo(5) capabilities to update terminal title and automatically fill them in on terminals with the XT capability (which means their title setting is xterm-compatible). From hsim at gmx.li.

* Sync OpenBSD patchset 903:

* Sync OpenBSD patchset 901:

* Sync OpenBSD patchset 900:

* Sync OpenBSD patchset 899:

* Change window with mouse wheel over status line if mouse-select-window is on, from marcel partap.

* Don't need vis.h anymore.

* Don't use strnvis for the title as it breaks UTF-8. set-titles is now off by default and we have to trust the terminal can understand what we send it anyway so there isn't any harm.

* Check if mouse-select-pane is ON not off when setting mouse flags, reported by oga.

* Only redraw the status line on command update, not the entire client (big DOH).

* Sync OpenBSD patchset 898:

* Sync OpenBSD patchset 897:

* Sync OpenBSD patchset 896:

* Sync OpenBSD patchset 895:

* Provide #h for short hostname (no domain) from Michal Mazurek.

* Tweak copy behaviour slightly in vi mode to be closer to real vi. From Tiago Resende.

* When mode-mouse is on (it is off by default), automatically enter copy mode when the mouse is dragged or the mouse wheel is used. Also exit copy mode when the mouse wheel is scrolled off the bottom. Discussed with and written by hsim at gmx dot li.

* Add.

* POSIX only guarantees uname() will return a non-negative value on success.

* |PatchSet 894 |Date: 2011/04/18 21:57:16 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |The mouse should only work in copy mode if mode-mouse is set, not just |mouse-select-pane.

* |PatchSet 893 |Date: 2011/04/18 20:49:05 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Add an option (mouse-select-window) which allows the mouse to be used by |clicking on the status line, written by hsim at gmx dot li.

* |PatchSet 891 |Date: 2011/04/17 20:28:09 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Add -t to list-clients, based on a diff from Zac Sprackett.

* |PatchSet 890 |Date: 2011/04/17 20:21:19 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Fix character position check, from Tiago Resende.

* |PatchSet 889 |Date: 2011/04/11 17:44:36 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |-s comes before -t and also add -s to command syntax. Prompted by jmc.

* Sync man page.

* PatchSet 887 Date: 2011/04/10 04:20:59 Author: guenther Branch: HEAD Tag: (none) Log: Switch back from KERN_PROC2/kinfo_proc2 to KERN_PROC/kinfo_proc now that we've got name we want for the API we want

* |PatchSet 886 |Date: 2011/04/09 21:00:29 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Since buffers are now global, bump the default buffer-limit a bit higher |to 20 rather than 9.

* The mouse should only work in copy mode if mode-mouse is set, not just mouse-select-pane.

* Add an option (mouse-select-window) which allows the mouse to be used by clicking on the status line, written by hsim at gmx dot li.

* new sentence, new line;

* Window content backup script from Victor J Orlikowski.

* Add -t to list-clients, based on a diff from Zac Sprackett.

* Fix character position check, from Tiago Resende.

* Add tmuxinator.

* Add some third party stuff.

* +.

* Add.

* a independent -> an independent.

* -s comes before -t and also add -s to command syntax. Prompted by jmc.

* Entry on italics from Tiago Resende.

* Add -s option to detach all clients attached to a session, from Zac Sprackett.

* Add -s option to detach all clients attached to a session, from Zac Sprackett.

* Switch back from KERN_PROC2/kinfo_proc2 to KERN_PROC/kinfo_proc now that we've got name we want for the API we want

* Since buffers are now global, bump the default buffer-limit a bit higher to 20 rather than 9.

* If the terminal supports sitm for italics, use it instead of standout (smso). From Tiago Resende.

* If the terminal supports sitm for italics, use it instead of standout (smso). From Tiago Resende.

* Manual date.

* |PatchSet 884 |Date: 2011/04/06 22:51:31 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Change so that an empty session name always means the current sessions |even if given with, for example, -t '', and explicitly forbid empty |session names and those containing a : when they are created.

* |PatchSet 883 |Date: 2011/04/06 12:36:26 |Author: miod |Branch: HEAD |Tag: (none) |Log: |Avoid using NULL in non-pointer contexts: use 0 for integer values and '\0' |for chars.

* |PatchSet 882 |Date: 2011/04/05 20:37:01 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Add a flag to cmd_find_session so that attach-session can prefer |unattached sessions when choosing the most recently used (if -t is not |given). Suggested by claudio@.

* |PatchSet 881 |Date: 2011/04/05 19:55:38 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Bind C-u to delete-line in vi mode like ksh does, suggested by thib.

* |PatchSet 880 |Date: 2011/04/01 17:59:11 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |"or" should be on a line on its own here so it is not emphasised as |well.

* |PatchSet 879 |Date: 2011/03/29 22:09:13 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |For convenience, work out what type of option is being set by name |regardless of the -s or -w flags (these remain documented however).

* |PatchSet 878 |Date: 2011/03/29 22:07:08 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Checking for particular options and redrawing is not necessary as we |already redraw unconditionally.

* |PatchSet 877 |Date: 2011/03/29 21:31:22 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Update an out-of-date and inaccurate comment.

* |PatchSet 876 |Date: 2011/03/29 20:30:16 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Change -t on display-message to be target-pane for the #[A-Z] |replacements and add -c as target-client.

* |PatchSet 875 |Date: 2011/03/29 00:13:00 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Add -a and -s options to lsp to list all panes in the server or session |respectively. Likewise add -s to lsw. From Ben Boeckel.

* |PatchSet 874 |Date: 2011/03/28 21:17:39 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Allow a start and end line to be specified for capture-pane which may be |negative to capture part of the history. Prompted by request from Victor |J Orlikowski.

* |PatchSet 873 |Date: 2011/03/28 20:44:31 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Style: uint -> u_int and a missing else.

* |PatchSet 872 |Date: 2011/03/27 21:36:19 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Set the terminal blocking again earlier, before sending the reset |sequences.

* |PatchSet 871 |Date: 2011/03/27 21:31:25 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |Don't include meta twice when working out the flags to output for |xterm-style keys - bit 3 is accepted on input but not on output. Also a |style nit in the header.

* PatchSet 870 Date: 2011/03/27 21:27:26 Author: nicm Branch: HEAD Tag: (none) Log: Give each pane created in a tmux server a unique id (starting from 0), put it in the TMUX_PANE environment variable and accept it as a target. Suggested by and with testing and tweaks from Ben Boeckel.

* Change so that an empty session name always means the current sessions even if given with, for example, -t '', and explicitly forbid empty session names and those containing a : when they are created.

* Add a couple of items.

* Avoid using NULL in non-pointer contexts: use 0 for integer values and '\0' for chars.

* Add a flag to cmd_find_session so that attach-session can prefer unattached sessions when choosing the most recently used (if -t is not given). Suggested by claudio@.

* Bind C-u to delete-line in vi mode like ksh does, suggested by thib.

* "or" should be on a line on its own here so it is not emphasised as well.

* For convenience, work out what type of option is being set by name regardless of the -s or -w flags (these remain documented however).

* Checking for particular options and redrawing is not necessary as we already redraw unconditionally.

* Update an out-of-date and inaccurate comment.

* Change -t on display-message to be target-pane for the #[A-Z] replacements and add -c as target-client.

* Add -a and -s options to lsp to list all panes in the server or session respectively. Likewise add -s to lsw. From Ben Boeckel.

* Allow a start and end line to be specified for capture-pane which may be negative to capture part of the history. Prompted by request from Victor J Orlikowski.

* Add.

* Style: uint -> u_int and a missing else.

* Add.

* Done.

* Set the terminal blocking again earlier, before sending the reset sequences.

* Don't include meta twice when working out the flags to output for xterm-style keys - bit 3 is accepted on input but not on output. Also a style nit in the header.

* Give each pane created in a tmux server a unique id (starting from 0), put it in the TMUX_PANE environment variable and accept it as a target. Suggested by and with testing and tweaks from Ben Boeckel.

* Fix to properly wrap wide characters, from Micah Cowan.

* Fix to properly wrap wide characters.

* Sync OpenBSD patchset 868:

* Sync OpenBSD patchset 867:

* Sync OpenBSD patchset 866:

* Sync OpenBSD patchset 864:

* Sync OpenBSD patchset 863:

* Fix an incorrect test which was always true (oupper is always < olower), from Yusuke ENDOH.

* Prevent tiled producing a corrupt layout when only one column is needed, from Karl Ferdinand Ebert.

* Support passing through escape sequences to the underlying terminal by using DCS with a "tmux;" prefix. Escape characters in the sequences must be doubled. For example:

* Use the right asprintf since we don't support truly broken platforms right now.

* Two fixes by Micah Cowan: make mouse work properly beyond >127 on signed char architectures and properly parse $TMUX by stopping the socket path at the first comma.

* Fix sscanf that was guaranteed to always fail.

* Make sure non-UTF8 mouse coordinates are kept to 8-bit values.

* Fix a typo that meant we did not reset the background colour when it was omitted in a 256-colour SGR ([48;5m). From Yusuke ENDOH.

* Add a -P option to detach to HUP the client's parent process (usually causing it to exit as well).

* +.

* Sync OpenBSD patchset 862:

* Sync OpenBSD patchset 861:

* Sync OpenBSD patchset 860:

* Sync OpenBSD patchset 859:

* Sync OpenBSD patchset 858:

* Sync OpenBSD patchset 857:

* Sync OpenBSD patchset 856:

* Sync OpenBSD patchset 855:

* Sync OpenBSD patchset 854:

* Sync OpenBSD patchset 853:

* Sync OpenBSD patchset 852:

* Sync OpenBSD patchset 848:

* Spacing.

* Expand an entry.

* Solaris is SunOS.

* Size on split-window is -l not -s. Doh.

* Don't require -d with -x or -y since it could be in the config file.

* Redraw pane borders when switching to last pane.

* Free old argument even if setting to NULL.

* Accept tcgetattr/tcsetattr failure, fixes problems with fatal() if the terminal disappears while locked.

* Use input_clear to reset the APC, DCS, OSC state or it could be reused improperly by a later state. From Kevin Goodsell.

* Unused declaration.

* Remove some that are done and some that are duplicates or no longer needed.

* Simplify the way jobs work and drop the persist type, so all jobs are fire-and-forget.

* Use LIST_* not SLIST_*.

* When clearing the entire screen, clear lines that are used into the history like xterm does. Requested ages ago by someone I've forgotten.

* Check if the index is in use and fail before creating the child process, rather than leaving a stray child on failure.

* While here, maximum percentage is 100 not INT_MAX. Oops.

* While here, maximum percentage is 100 not INT_MAX. Oops.

* Size is -l not -s.

* Size is -l not -s.

* Allow top-bit-set characters to be used for key bindings, from Tiago Cunha.

* Set $TMUX without the session when background jobs are run.

* Make bind-key accept characters with the top-bit-set and print them as octal.

* Sync OpenBSD patchset 847:

* Sync OpenBSD patchset 846:

* Sync OpenBSD patchset 845:

* Sync OpenBSD patchset 844:

* Sync OpenBSD patchset 843:

* Sync OpenBSD patchset 842:

* Sync OpenBSD patchset 841:

* Sync OpenBSD patchset 840:

* Sync OpenBSD patchset 839:

* Sync OpenBSD patchset 838:

* Sync OpenBSD patchset 837:

* Sync OpenBSD patchset 836:

* Sync OpenBSD patchset 835:

* Sync OpenBSD patchset 834:

* Sync OpenBSD patchset 833:

* Link with libm due to the upcoming patchset.

* Support for HP-UX.

* Only have one asprintf implementation, that's likely to always work.

* Fix bind-key -t.

* Only set a mouse mode for mouse-select-pane if none already set by the mode (any will do).

* Mouse highlight mode (1001) requires a program to cooperate so supporting it through tmux is not as easy as this, remove it for now.

* Support -x and -y for new-session to specify the initial size of the window if created detached with -d.

* Whoops, did not mean to do this.

* osdep-linux.c

* The maximum history-limit was accidentally reduced, fix it back to INT_MAX.

* Clarify alternate-screen description a little.

* Er, fix next and previous session functions to actually work, part 2.

* Fix next and previous session functions to actually work.

* Log termios backspace for each client since it is used to recognise backspace input.

* Use TMPDIR if set, from Han Boetes.

* Trim spaces.

* Better __progname check.

* Copy osdep-unknown.c for AIX to make @PLATFORM@ work.

* Check for optarg, optind, optreset.

* unbind-key -a is allowed no arguments.

* +.

* Remove a bit of text that makes exit-unattached description unclear.

* Add missing arguments to some options.

* Move all calls to fcntl(...O_NONBLOCK) into a function and clear the flag on the stdio file descriptors before closing them (fixes things like "tmux ls && cat").

* Accept colours of the hex form #ffffff and translate to the nearest from the xterm(1) 256-colour set.

* +.

* Sync OpenBSD patchset 813:

* Bring the last remaining bits of dist.mk.

* Sync OpenBSD patchset 832:

* Remove dead files entries.

* Sync OpenBSD patchset 831:

* Sync OpenBSD patchset 830:

* cmd-generic.c isn't needed anymore due to OpenBSD patchset 829.

* Remove compat include.

* More _SOURCES.

* Sync OpenBSD patchset 829:

* Sync OpenBSD patchset 828:

* Sync OpenBSD patchset 827:

* Missing HAVE_STDINT_H.

* Whoops, command-prompt can take 0 or 1 argument.

* Whoops, bad copy and paste.

* Support --enable-static.

* Now that parsing is common, merge some of the small, related commands together to use the same code.

* argc will be 1 not 2 with no option value.

* Clean up and simplify tmux command argument parsing.

* libevent-2 works now as well.

* Zap paths.h include.

* Update _SOURCES.

* Sync OpenBSD patchset 826:

* More indentation tweaking.

* Include all osdep-*.c in dist.

* Support for UTF-8 mouse input (\033[1005h). This was added in xterm 262 and supports larger terminals than the older way.

* Sync OpenBSD patchset 825:

* Sync OpenBSD patchset 824:

* Sync OpenBSD patchset 823:

* Sync OpenBSD patchset 822:

* Sync OpenBSD patchset 821:

* Sync OpenBSD patchset 820:

* Sync OpenBSD patchset 819:

* Sync OpenBSD patchset 818:

* Handle a # at the end of a replacement string (such as status-left) correctly. Found by Thomas Adam.

* Wrap long line differently.

* Fail if no libevent or curses, from Thomas Adam.

* Move the user-visible parts of all options (names, types, limit, default values) together into one set of tables in options-table.c. Also clean up and simplify cmd-set-options.c and move a common print function into option-table.c.

* Make version more prominent.

* libevent 2 works now as well.

* suspend-client has used -t for the client target (like everything else) for ages, fix the usage string and man page and trim some leftover code.

* Add.

* Add.

* Last few tables that should be const.

* Sprinkle a little more const.

* Another table that should be const.

* Key table should be const.

* Also done.

* Remove some done or duplicates, reorder.

* Add a -P option to new-window and split-window to print the new window or pane index in target form (useful to pass it into other commands).

* Don't reset the activity timer for unattached sessions every second, this screws up the choice of most-recently-used. Instead, break the time update into a little function and do it when the session is attached.

* Remove unused variable.

* And moar.

* Make indentation better.

* Default enable-debug to on in CVS (can be changed for releases).

* RCS $Id$.

* Switch tmux to use autoconf and automake.

* Sync OpenBSD patchset 817:

* Sync OpenBSD patchset 816:

* Sync OpenBSD patchset 815:

* +.

* fix trailing whitespace;

* Remove some unused defines.

* Fix BUFFERS section now they are global.

* Change from a per-session stack of buffers to one global stack which is much more convenient and also simplifies lot of code. This renders copy-buffer useless and makes buffer-limit now a server option.

* Done.

* Global paste buffers instead of per-session which renders copy-buffer useless. As a consequence buffer-limit is now a server option.

* Sync OpenBSD patchset 812:

* Sync OpenBSD patchset 811:

* Add a function to create window flags rather than doing the same thing in two places. From Thomas Adam.

* Stray blank line.

* epoll on Linux is broken with /dev/null so it needs to be disabled.

* Support all four of the xterm mouse modes. Based on a diff from hsim at gmx.li.

* Allow the config file parser and source-file to return "don't exit" to the client to let attach work from configuration files.

* Working on 1.5.

* Major changes since the previous version.

* No point in talking about this here when it's already covered by other files.

* Bump VERSION and comment FDEBUG.

* usage output should fit on a 80 column display.

* Sync OpenBSD patchset 810:

* Sync OpenBSD patchset 809:

* tweak previous;

* Add a missing .Pp and sort options alphabetically, from Tiago Cunha.

* Sync OpenBSD patchset 808:

* Sync OpenBSD patchset 807:

* server_kill_window can modify the RB tree so don't use RB_FOREACH, fixes crash seen by Dan Harnett.

* Style tweaks.

* Sync OpenBSD patchset 806:

* Sync OpenBSD patchset 805:

* Sync OpenBSD patchset 804:

* Sync OpenBSD patchset 803:

* Sync OpenBSD patchset 802:

* Sync OpenBSD patchset 801:

* Sync OpenBSD patchset 800:

* Sync OpenBSD patchset 799:

* Store sessions in an RB tree by name rather than a list, this is tidier and allows them to easily be shown sorted in various lists (list-sessions/choose-sessions).

* Fix another stray addition that was too early. Oops.

* Undo a change to next/previous session that got mixed in prematurely.

* Dead sessions are never on the active sessions list, so the SESSION_DEAD flag is effectively unused. Remove it.

* Use pointer rather than index for the client's last session.

* Unify the way sessions are used by callbacks - store the address and use the reference count, then check it is still on the global sessions list in the callback.

* Don't nuke the index counter when a session group comes up.

* Add other-pane-height and other-pane-width options, allowing the width or height of the smaller panes in the main-horizontal and main-vertical layouts to be set. Mostly from David Goodlad.

* "So you have screwed up your /dev/null?" From Mathias Gumz.

* Read ${X} environment variables in strings and $HOME from the global environment rather than getenv, this allows them to be updated during the configuration file.

* Read ${X} environment variables in strings and $HOME from the global environment rather than getenv, this allows them to be updated during the configuration file.

* Track the last session for a client and add a flag to switch-client and a key binding (L) to move a client back to its last session.

* Track the last session for a client and add a flag to switch-client and a key binding (L) to move a client back to its last session.

* Remove a bunch of stuff that is done a few that aren't going to happen and remove the priority list for now.

* Fix rectangle copy to behave like emacs - the cursor is not part of the selection on the right edge but on the left it is.

* Fix rectangle copy to behave like emacs - the cursor is not part of the selection on the right edge but on the left it is.

* Make the prompt history global for all clients which is much more useful than per-client history.

* Oops, these functions return a const char *, so make the local variable const as well.

* Make the prompt history global for all clients which is much more useful than per-client history.

* -V to report version, SF issue 3038862.

* Rephrase a confusing sentence.

* Rephrase a confusing sentence.

* In the built-in layouts, distribute the panes more evenly. Set the default value of main-pane-width to 80, rather than 81. By Micah Cowan.

* Some do still need -lrt.

* In the built-in layouts, distribute the panes more evenly. Set the default value of main-pane-width to 80, rather than 81.

* Add an option to alert (monitor) for silence (lack of activity) in a window. From Thomas Adam.

* Add an option to alert (monitor) for silence (lack of activity) in a window. From Thomas Adam.

* PatchSet 790 Date: 2010/11/29 19:45:58 Author: nicm Branch: HEAD Tag: (none) Log: If VISUAL or EDITOR contains "vi", configure mode-keys and status-keys to vi.

* PatchSet 789 Date: 2010/11/22 21:13:13 Author: nicm Branch: HEAD Tag: (none) Log: There is somewhere that WINDOW_HIDDEN is getting set when it shouldn't be and I can't find it, but the flag itself is a useless optimisation that only applies to automatic-resize windows, so just dispose of it entirely.

* PatchSet 788 Date: 2010/11/15 06:52:11 Author: nicm Branch: HEAD Tag: (none) Log: Show more window and pane flags in list-* output, and put layout on the same line.

* PatchSet 787 Date: 2010/11/14 09:04:22 Author: nicm Branch: HEAD Tag: (none) Log: Update man page for update-environment.

* PatchSet 786 Date: 2010/11/14 08:58:25 Author: nicm Branch: HEAD Tag: (none) Log: Don't allow last and active window to become the same - a very bad move when the active window is closed and freed. Reported by sthen@.

* Add XAUTHORITY to update-environment, requested by Andreas Kloeckner.

* PatchSet 784 Date: 2010/11/11 20:54:06 Author: nicm Branch: HEAD Tag: (none) Log: Flag to flush all key bindings from Rob Paisley.

* PatchSet 783 Date: 2010/11/11 20:51:30 Author: nicm Branch: HEAD Tag: (none) Log: Declaration in header should be extern.

* PatchSet 782 Date: 2010/11/01 20:59:45 Author: nicm Branch: HEAD Tag: (none) Log: Typo, from Rob Paisley.

* |--------------------- |PatchSet 781 |Date: 2010/10/29 21:11:57 |Author: nicm |Branch: HEAD |Tag: (none) |Log: |We now send argv to the server after parsing it in the client to get the |command, so the client should not modify it. Instead, take a copy. Fixes |parsing command lists, reported by mcbride@. | |Members: |       cmd-list.c:1.5->1.6 |       cmd.c:1.45->1.46 |       tmux.h:1.244->1.245

* Another.

* And moar.

* Moar.

* + SF requests.

* Using working directory always, from Vivien Mallet.

* +.

* If VISUAL or EDITOR contains "vi", configure mode-keys and status-keys to vi.

* +.

* There is somewhere that WINDOW_HIDDEN is getting set when it shouldn't be and I can't find it, but the flag itself is a useless optimisation that only applies to automatic-resize windows, so just dispose of it entirely.

* +.

* Show more window and pane flags in list-* output, and put layout on the same line.

* Update man page for update-environment.

* Don't allow last and active window to become the same - a very bad move when the active window is closed and freed. Reported by sthen@.

* +.

* Whoops, get the logic the right way round.

* Add XAUTHORITY to update-environment, requested by Andreas Kloeckner.

* Flag to flush all key bindings from Rob Paisley.

* Declaration in header should be extern.

* Fix AIX warnings.

* malloc(0) may return NULL, so only assume that is an error if allocating more than zero.

* AIX doesn't have daemon().

* Bring back fuzz.c.

* >4 now.

* Typo, from Rob Paisley.

* We now send argv to the server after parsing it in the client to get the command, so the client should not modify it. Instead, take a copy. Fixes parsing command lists, reported by mcbride@.

* I am almost certain we don't need crypt or rt now, and it builds fine on Linux without.

* And more.

* Style tweaks.

* Compat for closefrom().

* Put setproctitle back under HAVE_SETPROCTITLE.

* Remove redundant preprocessor check (it's already taken care of by tmux.h).

* Ugh. Don't know how this happened, but make it compile by removing duplicate code.

* Sync OpenBSD patchset 780:

* Sync OpenBSD patchset 779:

* Sync OpenBSD patchset 778:

* Sync OpenBSD patchset 777:

* Zap paths.h compat include.

* Sync OpenBSD patchset 776:

* Sync OpenBSD patchset 775:

* Helper script which greps for compat includes that shouldn't be present in all files but compat.h.

* Sync OpenBSD patchset 774:

* Sync OpenBSD patchset 773:

* Sync OpenBSD patchset 772:

* Sync OpenBSD patchset 771:

* Rewrite the screen vs tmux bit to be more accurate and complete and less subjective.

* Add a last-pane command (bound to ; by default). Requested ages ago by somebody whose name I have forgotten.

* When removing a pane, don't change the active pane unless the active pane is actually the one being removed.

* Mark repeating keys with "(repeat)" in the key list.

* Merge the before and after attach client code into one in client.c (instead of two in tmux.c and client.c).

* +ttyfast.

* Make stdio blocking again before calling shell command with -c.

* Trying to set FD_CLOEXEC on every fd is a lost cause, just use closefrom() before exec.

* Fall back on normal session choice method if $TMUX exists but is invalid rather than rejecting.

* Use an explicit event rather than event_once for the main event so it can be removed when the client becomes ready.

* Treat the meta bit in the xterm extended modifier key set as the same as escape (tmux's meta). From Emanuele Giaquinta.

* Put "or" on new line from command with .Ic.

* Sync OpenBSD patchset 770:

* Sync OpenBSD patchset 769:

* Sync OpenBSD patchset 767:

* Sync OpenBSD patchset 766:

* Sync OpenBSD patchset 765:

* Sync OpenBSD patchset 764:

* Set cause when failing due to linking a window to itself, from Martin Pieuchot.

* Skip NULL entries in the sessions list when choosing the next session, from Simon Olofsson.

* Nuke a leftover RB tree declaration spotted by blambert.

* Two new options:

* Modify the permissions on the socket when adding or removing +x to show attached sessions, rather than replacing them.

* detach-on-destroy is a session option, not server.

* done

* Sync OpenBSD patchset 763:

* Sync OpenBSD patchset 762:

* Sync OpenBSD patchset 761:

* Sync OpenBSD patchset 760:

* Update, from Daniel Thau.

* Ugh. Pass the right type into tty_term_has. Teaches me to make last minute changes :-/.

* Use UTF-8 line drawing characters on UTF-8 terminals. Fixes some stupid terminals (I'm looking at you, putty) which disable the vt100 ACS mode switching sequences in UTF-8 mode.

* Ignore terminal overrides settings without a value.

* When resizing the copy mode screen, don't allow it to end up with the viewable position beyond the size of the history.

* Sync OpenBSD patchset 759:

* Sync OpenBSD patchset 758:

* Add -n and -p flags to switch-client to move to the next and previous session (yes, it doesn't match window/pane, but so what, nor does switch-client).

* Do not crash if the screen size is too small for the indicator in copy mode.

* Solaris 9 has no stdint.h, ugh. Reported by a couple of people most recently Timothy Larson.

* Sync OpenBSD patchset 757:

* Sync OpenBSD patchset 756:

* Sync OpenBSD patchset 755:

* Simplify xterm modifier detection by treating as a bitmask + 1. Spotted by and diff from Emanuele Giaquinta.

* Reset running jobs when the status line is enabled or disabled as well, some people have it bound to a key.

* +.

* +.

* Add missing prototype.

* +.

* Sync OpenBSD patchset 754:

* Sync OpenBSD patchset 753:

* Sync OpenBSD patchset 752:

* Sync OpenBSD patchset 751:

* Sync OpenBSD patchset 750:

* When destroying a pane, reset any mode (which reenables pane bufferevent) before freeing the bufferevent.

* Can't call event_del() without event_set() first - so call event_set() when setting up the client.

* MSG_EXIT can now have a return code in the message, so check for that size as well. Stops the client fatal()ing on exit.

* Do not call event_del() for signals after fork(), just use sigaction() directly instead - calling libevent functions after fork() w/o event_reinit() is a bad idea, even if in this case it was harmless.

* +-.

* Do not need to dup() the tty fd sent from the client because it is already dup()d again later. Fixes a leak seen by espie@.

* Sync OpenBSD patchset 749:

* Sync OpenBSD patchset 748:

* Sync OpenBSD patchset 747:

* Sync OpenBSD patchset 746:

* Sync OpenBSD patchset 745:

* Sync OpenBSD patchset 744:

* Do not allow duplicate session names to be created, reported by Dominik Honnef, patch from Thomas Adam.

* Handle failure to change mode, to avoid dying when switching into copy mode when already in a different mode. Reported by "Florian".

* Usage string fixes from Ben Boeckel.

* Treat trying to link or move to the same window as an error to avoid removing it accidentally.

* Change the way backoff works. Instead of stopping reading from the pty when the client tty backs up too much, just stop updating the tty and only update the internal screen. Then when the tty recovers, force a redraw.

* Show which pane is active in the list-panes output, suggested by Dominik Honnef.

* Sync OpenBSD patchset 742:

* Sync OpenBSD patchset 741:

* Basic GNU bash completion from Frank Barknecht.

* switch back to kqueue for now, since (a) kqueue has been fixed to deal with strange devices and (b) since there appears to be a bull in the poll code in libevent as well... requested by nicm who is away

* How to blank on lock, from Thomas Adam, slightly tweaked by me.

* No more up-pane/down-pane.

* dup() the stdin fd so it isn't closed twice (once for stdin, once for tty).

* Sync with reality, per SF bug #3035214.

* When changing so that the client passes its stdout and stderr as well as stdin up to the server, I forgot one essential point - the tmux server could now be both the producer and consumer. This happens when tmux is run inside tmux, as well as when piping tmux commands together.

* kqueue(2) is currently broken when used with /dev/null and a few other devices.

* Fix a crash: if remain-on-exit is set and the pane has exited, the buffers may not be valid, so do not try to disable/enable them when switching to copy mode.

* Don't enable/disable invalid event pointers. Fixes SF #3033119.

* Sync OpenBSD patchset 738:

* Sync OpenBSD patchset 737:

* Don't return if in the current window since we may want to report a bell (if bell-action any/current), just clear the flag so the status line doesn't show the bell.

* Solaris has MAXHOSTNAMELEN in netdb.h.

* Send the \n to stdout with the message, not stderr... doh.

* Don't hard-code the username.

* Working on 1.4.

* Changes for 1.3.

* Done.

* Bump VERSION, and comment FDEBUG.

* Sync OpenBSD patchset 736:

* Sync OpenBSD patchset 735:

* Sync OpenBSD patchset 734:

* some escapes i missed;

* Make pane/window wrapping more logical (so with 10 windows, +10 from window 5 stays in the same place), and tidy the code. From Tiago Cunha.

* Return the command client return code with MSG_EXIT now that MSG_ERROR and MSG_PRINT are unused.

* Sync OpenBSD patchset 733:

* Sync OpenBSD patchset 732:

* Sync OpenBSD patchset 731:

* Sync OpenBSD patchset 730:

* Update.

* Sync OpenBSD patchset 729:

* Sync OpenBSD patchset 728:

* Sync OpenBSD patchset 727:

* replace some magic mouse constants with defines for clarity. ok nicm

* Custom layouts. list-windows command displays the layout as a string (such as "bb62,159x48,0,0{79x48,0,0,79x48,80,0}") and it can be applied to another window (with the same number of panes or fewer) using select-layout.

* Send all three of stdin, stdout, stderr from the client to the server, so that commands can directly make use of them. This means that load-buffer and save-buffer can have "-" as the file to read from stdin or write to stdout.

* Store the current working directory in the session, change the default-path option to default to empty and make that mean that the stored session CWD is used.

* New option, detach-on-destroy, to set what happens to a client when the session it is attached to is destroyed. If on (the default), it is detached; if off, it is switched to the most recently active session.

* Use server_destroy_session() for kill-session.

* Setting the cmdlist pointer in the bind-key to NULL to prevent it being freed after the command is executing is bogus because it may still be needed if the same command is going to be executed again (for example if you "bind-key a bind-key b ..."). Making a copy is hard, so instead add a reference count to the cmd_list.

* Update.

* Nuke vis.h.

* Sync OpenBSD patchset 726:

* Sync OpenBSD patchset 725:

* Sync OpenBSD patchset 724:

* Sync OpenBSD patchset 723:

* Sync OpenBSD patchset 722:

* Add a choose-buffer command for easier use of the paste buffer stack.

* Extend the -t:+ and -t:- window targets for next and previous window to accept an offset such as -t:+2. From Tiago Cunha.

* Having a list of winlinks->alerts for each session is stupid, just store the alert flags directly in the winlink itself.

* Rename activity->alert in a couple of functions for consistency.

* Done.

* Give tmux sockets (but not the containing folder) group permissions. This allows hardlinks to the sockets to be used more easily.

* +.

* Ensure we overwrite UTF-8 wide characters properly, and never overwrite characters we weren't overlapping.  Fixes "disappearing wide characters" glitch. From Micah Cowan.

* Ensure we overwrite wide characters properly, and never overwrite characters we weren't overlapping. Fixes "disappearing wide characters" glitch.

* Sync OpenBSD patchset 720:

* Sync OpenBSD patchset 719:

* Last change erroneously used the target argument for looking up the client which caused pipe-pane to fail when used from the command line. Instead pass NULL which should use the current client.

* Add a missing command and some missing Ic, from Tiago Cunha.

* +.

* Use a macro-based mask for obtaining a key or modifier-set from the combination. Display C-@, etc, as C-Space, in list-keys. By Micah Cowan.

* imsg was moved into libutil on OpenBSD.

* Sync OpenBSD patchset 717:

* Sync OpenBSD patchset 716:

* Sync OpenBSD patchset 715:

* Sync OpenBSD patchset 714:

* Sync OpenBSD patchset 713:

* Sync OpenBSD patchset 710:

* Sync OpenBSD patchset 709:

* Sync OpenBSD patchset 708:

* Sync OpenBSD patchset 706:

* Sync OpenBSD patchset 705:

* Sync OpenBSD patchset 704:

* No vis.h in here.

* Sync OpenBSD patchset 702:

* Sync OpenBSD patchset 701:

* Sync OpenBSD patchset 700:

* Use a macro-based mask for obtaining a key or modifier-set from the combination. Display C-@, etc, as C-Space, in list-keys.

* Must allocate for putenv.

* Only need to build setenv.c once.

* Couple of missing command aliases/flags, from Tiago Cunha.

* Fix problems with window sizing seen by Raghavendra D Prabhu when starting tmux from .xinitrc.

* Support the status_replace # replacement sequences in the pipe-pane command, thanks to Andrea Barisani.

* Shut up gcc4 warnings.

* This ioctl(TIOCGWINSZ) call is no longer necessary, the result is never used and the server now does it later on the tty fd directly.

* Should be const char *.

* Fix binding of C-Space/C-@, from Micah Cowan.

* Make start-of-line work the same as end-of-line on wrapped lines (jump to real start if at edge of screen). By Micah Cowan.

* Make double start-of-line do what double end-of-line does, on wrapped lines.

* Allow C-Space to work correctly once again, and forbid nonsensical combinations such as C-Enter or C-Escape.

* When the mode-mouse option is on, support dragging to make a selection in copy mode.

* Better to say "command key bindings" since we've just called them command keys.

* There is no real reason not to list all the key bindings here rather than just a selection.

* +.

* Move imsg into libutil and add a man page.

* Rename some imsg bits to make namespace collisions less likely buf to ibuf, buf_read to ibuf_read, READ_BUF_SIZE to IBUF_READ_SIZE.

* Don't die if the client has been detached when the job finishes, just don't display the output.

* Fix an out-of-date comment.

* +.

* Pass in the session, rather than the client, to window modes' key() function. We were only ever using the client to find the session anyway.

* Pass in the session, rather than the client, to window modes' key() function. We were only ever using the client to find the session anyway.

* Enhance paste-buffer to allow lines to be separated by any string, from Andrea Barisani.

* Spacing nits.

* Solaris 9 is missing CMSG_ALIGN and some of the RFC2292 CMSG_*. From Dagobert Michelsen.

* Solaris 9 doesn't have setenv and unsetenv so add compat versions, based on code from Dagobert Michelsen.

* Fix bad merge, from Romain Francoise.

* +.

* Colour+attribute options for status line alerts, from Alex Alexander.

* Accept (and document) "none" instead of "default" for attributes as it is clearer and avoids confusion with default colours.

* Use $OpenBSD$.

* Update.

* Sync OpenBSD patchset 698:

* Sync OpenBSD patchset 697:

* Sync OpenBSD patchset 696:

* Sync OpenBSD patchset 693:

* Sync OpenBSD patchset 692:

* Sync OpenBSD patchset 691:

* Sync OpenBSD patchset 688:

* Use LC_ALL for sed too since apparently some platforms play silly games in other locales.

* +.

* Catch SIGHUP and terminate if running as a client. This prevents clients from being left hanging around when, for example, a SSH session is disconnected.

* Identical behaviour to select-prompt can now be obtained with command-prompt, so remove select-prompt and change ' to be bound to command-prompt -p index "select-window -t :%%".

* Put this back in with the initialisation in the right order.

* Revert last change, it appears to be broken somehow.

* Make signal handler setup/teardown two common functions instead of six, and reset SIGCHLD after fork to fix problems with some shells. From Romain Francois.

* Make C-] and other punctuation-based control key combinations work again.

* sort options.

* +.

* Make the active pane border have a green foreground instead of background by default.

* Fix crash when resizing in copy mode, when cursor can end up outside screen.

* Avoid crashing in copy-mode during resize, when our history-viewing offset is larger than the new total number of history lines.

* imsg.h does not need sys/tree.h.

* Add a tiled layout, originally from Liam Bedford a while ago, fixed up by me.

* When converting A-Z into a control character, want to subtract 64 not 65... whoops.

* When converting A-Z into a control character, want to subtract 64 not 65... whoops.

* Use INSTALL so people on Solaris can set it to ginstall.

* Support NetBSD 6 which will now have its own terminfo (yay).

* Sync OpenBSD patchset 686:

* Sync OpenBSD patchset 685:

* Sync OpenBSD patchset 684:

* Mark zombie windows as dead in choose-window list, from Romain Francoise.

* Done.

* Don't set user and group with install, from Nicolas Pinto.

* Rewrite key string conversions to be readable and to work properly for multiple modifiers.

* Sync OpenBSD patchset 683:

* Sync OpenBSD patchset 682:

* Catch SIGCHLD to avoid a zombie, from patrick keshishian.

* +.

* Fix typo in escape state table leading to fatal() when \033} or \033~ was entered, from Chris Johnsen.

* If remain-on-exit is set, both the error callback and a SIGCHLD could destroy the same pane (because the first one doesn't remove it from the list of panes), causing the pane bufferevent to be freed twice. So don't free it if the fd has already been set to -1, from Romain Francoise.

* Fix use-after-free of the window link when it is part of a grouped session (and hence could have been recreated), from Micah Cowan.

* Sync OpenBSD patchset 680:

* Don't try to use a window-link that may have been freed.

* there can be only one rpathbuf

* Remove XXX comment and just close received fd if calloc() fails.

* Sync nit.

* Unbreak. Whoops.

* Man page sync.

* From Bob Beck:

* -s src-pane.

* Dead assignment.

* Run job commands explicitly in the global enviroment (which can be modified with setenv -g) rather than with the environment tmux started with.

* Squash a function that is only called in a callback into the callback function.

* Stupid style nits.

* Merge copy mode and output mode, dropping the latter. Idea and code from Micah Cowan.

* window-more.c is now defunct.

* +.

* FreeBSD kqueue is broken before 8.

* Mention title setting, and the new default.

* Merge output (more) and copy modes into one single mode (called copy).

* rather than using an empty "" as the default window title, put the hostname of the machine we are running on in there.

* tweak;

* Should be -s for src pane.

* Dead assignment, found with clang.

* Run job commands explicitly in the global enviroment (which can be modified with setenv -g) rather than with the environment tmux started with.

* Squash a function that is only called in a callback into the callback function.

* libevent needs librt on Linux, from Aaron Isotton.

* Don't accept keys with modifiers as input. Fixes crash reported by Brian R Landy.

* Don't accept keys with modifiers as input. Fixes crash reported by Brian R Landy.

* +.

* Nuke unused functions.

* -a flag to insert a window after an existing one, moving other windows up as necessary.

* Don't leak job command in #().

* +.

* -a flag to insert a window after an existing one, moving other windows up necessary.

* dispense with some wacky escape sequences;

* Dead functions, lint.

* Reset output functions too when changing client after attaching, to avoid crash if a command in a sequence after new/attach causes output.

* paste-buffer should be per pane, from C. Coutinho.

* Nuke unused variable.

* Add vi-style "jump" commands for copy mode, from Micah Cowan.

* Support up, down, left, right movement through panes with -UDLR flags to select-pane.

* Accept a full key match (not a partial) even if there is data left in the buffer.

* New input parser based on http://vt100.net/emu/dec_ansi_parser.

* +.

* Reset output functions too when changing client after attaching.

* paste-buffer should be per pane, from C. Coutinho.

* Unused variable.

* Minor Nazi style tweaks to previous, and man page rephrasery.

* Jump-forward, jump-backward in copy mode, based on vi's F and f commands.

* Support up, down, left, right movement through panes with -UDLR flags to select-pane.

* Accept a full key match (not a partial) even if there is data left in the buffer.

* +.

* New input parser based on http://vt100.net/emu/dec_ansi_parser.

* + an item.

* Quick prioritise for 1.3.

* Fix a use-after-free when cancelling copy mode, or trying to repeat cancel.

* Avoid use-after-free when cancelling copy mode.

* +.

* Mention dependencies.

* Working on 1.3.

* Done.

* Update CHANGES, and NOTES for the 1.2 release.

* Bump VERSION.

* Prepare the tree for the 1.2 release.

* Plug memory leak, from Gregory Thiemonge.

* Sync OpenBSD patchset 658:

* Sync OpenBSD patchset 657:

* Sync OpenBSD patchset 656:

* +.

* Permit keys in copy mode to be prefixed by a repeat count, entered with [1-9] in vi mode, or M-[1-9] in emacs mode.

* +.

* Extend the end-of-line key so that in normal mode a second press moves the cursor to the end of a wrapped line (if present) and in rectangle mode it toggles between the end of the text and the last cell on the line.

* Some done, some tidying, some added.

* Check for colour and attribute modifications early so the translated values can be stored in the cached terminal attributes rather than the requested (untranslated) values. Prevents tmux clearing and setting the attributes for every character when using aixterm colours.

* + and -.

* Sync OpenBSD patchset 655:

* Sync OpenBSD patchset 654:

* Update.

* Sync OpenBSD patchset 653:

* Sync OpenBSD patchset 652:

* Sync OpenBSD patchset 651:

* Sync OpenBSD patchset 650:

* Sync OpenBSD patchset 649:

* Sync OpenBSD patchset 648:

* Typo fix from Tim van der Molen.

* Don't set the terminal to nonblocking on detach until we have finished with it entirely.

* +.

* +

* Option to set the characters considered word separators in copy mode, from Micah Cowan.

* In load-buffer, read until EOF rather than using stat() and reading a fixed size. Allows use of FIFOs and whatnot. From Tiago Cunha, idea from Fulvio Ciriaco.

* Another copy mode fix from Micah Cowan: in rectangle copy mode, the cursor should not wrap at the end of the text on the line but should be allowed to move freely.

* Display -t argument to new-session, from Tiago Cunha.

* have_arg matches buf so it is no longer necessary, spotted by Tim van der Molen.

* copy mode uses the real screen as backing and if it is updated while copying, strange things can happen. So, freeze reading from the pty while in copy mode.

* Sync OpenBSD patchset 647:

* Sync OpenBSD patchset 646:

* Sync OpenBSD patchset 645:

* Sync OpenBSD patchset 644:

* Sync OpenBSD patchset 643:

* Make next-word stop at beginning of word even if it is at the start of the line, from Micah Cowan.

* +.

* Man page additions/improvements, thanks to Robin Lee Powell.

* Don't strip add newline if only copying part of wrapped line. Problem spotted by and fix from Micah Cowan.

* +.

* Add "N" key to search the opposite way from the last search (reverse of "n"), from Micah Cowan.

* Clarify default status-right, from Seth Wright.

* Update.

* Sync OpenBSD patchset 642:

* Sync OpenBSD patchset 641:

* Sync OpenBSD patchset 640:

* Sync OpenBSD patchset 639:

* Sync OpenBSD patchset 638:

* Sync OpenBSD patchset 637:

* Sync OpenBSD patchset 636:

* Sync OpenBSD patchset 635:

* Add an option to disable the smcup/rmcup alternate screen behaviour inside tmux. From clemens fischer.

* next-layout is bound to Space not C-Space.

* Use the array.h code for the causes list.

* Support attaching a client read-only with a new -r flag to the attach-session command.

* Change nested check to compare server socket path rather than just assuming that if $TMUX is set it is nested. From Micah Cowan.

* Clean up $TMUX parsing, from Micah Cowan, tweaked by me.

* Rectangle copy support, from Robin Lee Powell.

* Instead of bailing out on the first configuration file error, carry on, collecting all the errors, then start with the active window in more mode displaying them.

* Update.

* Sync OpenBSD patchset 634:

* Sync OpenBSD patchset 633:

* Sync OpenBSD patchset 632:

* Sync OpenBSD patchset 631:

* +.

* vi-style B, W and E keys in copy mode to navigate between words treating only spaces as word separators. Also add . to the list of word separators for standard word navigation.

* Read the path from $TMUX if it is present and -L and -S are not given. Based on a diff from Micah Cowan.

* Option to display the active pane in a different colour with the display-panes command. From Paul Hoffman, thanks.

* +.

* Fix divide by zero on small windows with main-* layouts.

* Make it detect multiple options with a single leading `-' (eg set -gw).

* Sync OpenBSD patchset 630:

* Sync OpenBSD patchset 629:

* Sync OpenBSD patchset 628:

* Sync OpenBSD patchset 626:

* Sync OpenBSD patchset 625:

* Old comment.

* If redrawing line 0 of the screen onto the tty, there can't be a wrap flag on the previous line, so move the cursor. Fixes status line redraw issues when resizing in choose mode and hopefully at other times as well.

* Add scroll-up/scroll-down for choose/more mode, from Micah Cowan.

* Remove unnecessary comparison, pointed out by Tiago Cunha.

* Fix DPADD, from Brad.

* +.

* Don't stop parsing command sequences when a command requests the client to stick around (attach-session/new-session).

* Ignore SIGHUP as well.

* Sync OpenBSD patchset 624:

* Sync OpenBSD patchset 623:

* Sync OpenBSD patchset 622:

* Sync OpenBSD patchset 621:

* Sync OpenBSD patchset 620:

* Sync OpenBSD patchset 619:

* Sync OpenBSD patchset 618:

* Sync OpenBSD patchset 617:

* Typo, from Micah Cowan.

* Actually bind the new key to e.

* Calculate offset correctly, fixes incorrect offset and prevents crash when status-left is empty. From Micah Cowan.

* Alter next-word to have vi-like movement behaviour, and add next-word-end with the existing emacs behaviour. From Micah Cowan.

* Actually use the copy made when no newline is found, from martynas@.

* Hugely simplify window_copy_cursor_next_word, which was way overcomplicated.

* Update the selection properly after goto line or searching.

* Top/bottom of history mode keys, diff from Micah Cowan, tweaked by me.

* +.

* Sync OpenBSD patchset 616:

* Sync OpenBSD patchset 615:

* Sync OpenBSD patchset 614:

* Sync OpenBSD patchset 613:

* Redraw properly when scrolling backward and the cursor is on the last line. Based on a fix from Micah Cowan.

* +.

* When a window is destroyed, remove all links to it from each session rather than just the first. Reported by Robin Lee Powell.

* Don't leak if arguments appear multiple times, from Tiago Cunha.

* Use C-e and C-y for scrolling in vi mode, from Micah Cowan.

* +.

* Sync OpenBSD patchset 612:

* Sync OpenBSD patchset 611:

* Don't leak line, from Tiago Cunha.

* Permit !, + and - to be used for window targets to specify last window (!), or next and previous window by number (+ and -).

* XHTML validation issues, from Mike Putnam.

* As of release 1.0, the server automatically sets the status-utf8, and utf8 options if started with -u.

* Done.

* Sync OpenBSD patchset 610:

* +.

* Missing Pp, from Tiago Cunha.

* Sync OpenBSD patchset 609:

* Sync OpenBSD patchset 608:

* Sync OpenBSD patchset 607:

* Add vim-style key bindings file from Daniel Thau.

* ++.

* Document swap-pane -d.

* +.

* Permit S- prefix on keys for shift. Relatively few terminals support this (basically xterm only) and even fewer have them in terminfo (kLFT2 and kRIT2).

* key should be an int not a char.

* +OpenBSD FAQ.

* New screenshot.

* s/new-window/new-session/

* $OpenBSD$ not $Id$

* Sync OpenBSD patchset 605:

* Update.

* Do not include paths.h, since it's OS-dependent.

* Sync OpenBSD patchset 604:

* Sync OpenBSD patchset 603:

* Sync OpenBSD patchset 602:

* Sync OpenBSD patchset 601:

* Sync OpenBSD patchset 600:

* Sync OpenBSD patchset 599:

* mouse-select-pane has to redraw the borders now too.

* New command, join-pane, to split and move an existing pane into the space (like splitw then movep, or the reverse of breakp).

* Fix this properly.

* Don't return the root cell if the string doesn't match.

* Use the specified pane for size calculations. Doh.

* Change split-window to accept a pane target (it should be split-pane but renaming the command would be annoying).

* Correctly clear 256-colour flag for aixterm colours.

* Sync OpenBSD patchset 598:

* Update.

* Sync OpenBSD patchset 597:

* Sync OpenBSD patchset 596:

* Sync OpenBSD patchset 595:

* +.

* Fix selection behaviour when the cursor is moved backwards (ie so the selection start is after the end).

* Options to set the colour of the pane borders, with different colours for the active pane.

* Use the target print function for copy-mode, spotted by Tiago Cunha.

* +.

* Use tcflush(3) instead of TIOCFLUSH, from Ed Schouten.

* Sync OpenBSD patchset 594:

* Sync OpenBSD patchset 593:

* Sync OpenBSD patchset 592:

* Sync OpenBSD patchset 591:

* Fix the logic so that transition from a 256 colour to default works properly.

* Nuke some stray debugging.

* +.

* Use sysctl() KERN_PROC2 instead of KERN_PROC, as the latter's ABI is sensitive to changes in struct proc.

* +.

* Fix a couple of problems with grouped sessions reported by danh: redraw properly and choose the correct last window after a window is killed.

* Sync OpenBSD patchset 590:

* FreeBSD 6.x has a bug and crashes in del_curterm, so ifdef it out on that platform.

* Allow keys to be replaced and reorder the table so that terminfo-defined keys (or terminal-overrides) take precedence over internally defined.

* Add note about TERM, add putty Ctrl entry.

* Sync OpenBSD patchset 589:

* Update.

* Sync OpenBSD patchset 588:

* Sync OpenBSD patchset 587:

* Pass through the aixterm bright colours if the terminal supports them (>= 16 colours).

* Add server options to completion as well.

* New server option, escape-time, to set the timeout used to detect if escapes are alone or part of a function key or meta sequence.

* +.

* Tweak text slightly.

* FAQ about grouped sessions.

* Sync OpenBSD patchset 586:

* Look in /opt/blah on OS X, from simmel.

* Use quiet variable, and add missing sentinel to options array.

* Update.

* Sync OpenBSD patchset 585:

* Sync OpenBSD patchset 584:

* Add "server options" which are server-wide and not bound to a session or window. Set and displayed with "set -s" and "show -s".

* Permit panes to be referred to as "top", "bottom", "top-left" etc, if the right pane can be identified.

* Sync OpenBSD patchset 583:

* Sync OpenBSD patchset 582:

* Sync OpenBSD patchset 581:

* Sync OpenBSD patchset 580:

* Sync OpenBSD patchset 579:

* Sync OpenBSD patchset 578:

* vte is buggy and doesn't home the cursor after changing the scroll region. Several people are hitting this, so add a workaround.

* Wrap at 80 columns.

* Massive spaces->tabs and trailing whitespace cleanup, hopefully for the last time now I've configured emacs to make them displayed in really annoying colours...

* Eliminate duplicate code and ease the passage for server-wide options by adding a -w flag to set-option and show-options and making setw and showw aliases to set -w and show -w.

* Solaris requires this header ordering.

* Reflect the keypad mode of the application so that numlock works.

* Quick way to turn UTF-8 on in putty.

* Update.

* Sync OpenBSD patchset 577:

* Sync OpenBSD patchset 576:

* Sync OpenBSD patchset 575:

* Close the pane if the process died due to a signal, not just if it exited normally.

* New command, capture-pane, which copies the entire pane contents to a paste buffer. From Jonathan Alvarado.

* Look for mice and xterm keys before standard function keys as they are less likely to be partial versions.

* Handle partial xterm function key sequences.

* +.

* Sync OpenBSD patchset 574:

* Sync OpenBSD patchset 573:

* Sync OpenBSD patchset 572:

* Sync OpenBSD patchset 571:

* Sync OpenBSD patchset 570:

* Sync OpenBSD patchset 569:

* Sync OpenBSD patchset 568:

* Sync OpenBSD patchset 567:

* Sync OpenBSD patchset 566:

* Sync OpenBSD patchset 565:

* Sync OpenBSD patchset 564:

* Sync OpenBSD patchset 563:

* Sync OpenBSD patchset 562:

* Sync OpenBSD patchset 561:

* Sync OpenBSD patchset 560:

* Add a couple of comments.

* This doesn't need to be u_int.

* Make types clearer and lint happier.

* Fix type - attributes should be u_char not int.

* Change paranoia check to check for <= 0 and to avoid warning.

* Tidy up various bits of the paste code, make the data buffer char * and add comments.

* Continue rather than returning if not a mouse key, to avoid hanging on any function key...

* Remove a couple of unused arguments where possible, and add /* ARGSUSED */ to the rest to reduce lint output.

* Rename a variable to something more helpful.

* Get a u_char from the string, otherwise it isn't possible to enter \0377 as it is mistaken for EOF (doh).

* Handle the possibility of partial mouse reads, and fix a comment while here.

* Emulate il1, dl1, ich1 to run (albeit slowly) with vt100 feature set.

* Despite terminfo being in use for around 20 years, NetBSD still haven't got their act together, so add an ifdef to use ncurses.h instead of curses.h.

* Output the right keys for application and number keypad modes (they were the wrong way round).

* Add a -p flag to display-message to print the output rather than displaying in the status line, this allows things like "display -p '#W'" to find the current window index.

* Sync.

* +.

* +load average.

* Done.

* Add cursor keys to the key names list.

* Sync OpenBSD patchset 559:

* Sync OpenBSD patchset 558:

* Sync OpenBSD patchset 557:

* Sync OpenBSD patchset 556:

* Sync OpenBSD patchset 555:

* Use home from struct passwd if HOME is empty as well as if it is NULL, and fix a style nit. Both from Tiago Cunha.

* When -h and -p are given to split-window, calculate the percentage size using the width instead of the height.

* +.

* Display UTF-8 properly in status line messages and prompt. Cursor handling is still way off though.

* Remove oldest messages from log when limit is hit, not newest.

* Sync OpenBSD patchset 554:

* Update.

* Sync OpenBSD patchset 553:

* Sync OpenBSD patchset 552:

* Sync OpenBSD patchset 551:

* Sync OpenBSD patchset 550:

* Update.

* Sync OpenBSD patchset 549:

* Sync OpenBSD patchset 548:

* Sync OpenBSD patchset 547:

* Sync OpenBSD patchset 546:

* Sync OpenBSD patchset 545:

* Get some brackets in the right place so ## works. Also fix a space in a comment.

* Change status line drawing to create the window list in a separate screen and then copy it into the status line screen. This allows UTF-8 in window names and fixes some problems with #[] in window-status-format.

* Two new options, window-status-format and window-status-current-format, which allow the format of each window in the status line window list to be controlled using similar # sequences as status-left/right.

* tweak previous;

* Revert to xterm-keys off by default. It was on as an experiment to see if the option could be removed, but it affects vi, so we have to keep the option, and a conservative default is better.

* Tidy up by breaking the # replacement code into a separate function, also add a few comments.

* Don't interpret #() for display-message, it usually doesn't make sense and may leak commands.

* Missed an unused variable :-/.

* Cleanup by moving various (mostly horrible) little bits handling UTF-8 grid data into functions in a new file, grid-utf8.c, and use sizeof intead of UTF8_DATA.

* +.

* Add a per-client log of status line messages displayed while that client exists. A new message-limit session option sets the maximum number of entries and a command, show-messages, shows the log (bound to ~ by default).

* Mark -n keys with (no prefix) rather than [].

* Sync OpenBSD patchset 544:

* Sync OpenBSD patchset 543:

* Sync OpenBSD patchset 542:

* Sync OpenBSD patchset 541:

* Permit top-bit-set characters to be entered in the status line. They could already be set from the shell and are just passed through when printing (so invisible characters or displaying on terminals with different character sets may cause problems).

* In choose mode, assign each item a number or lowercase letter from those available and accept that as a shortcut key for the item.

* A screen can be one cell wide; don't crash if that is the case.

* I made a complete horlicks of the last change, fix it so it doesn't either lead to a double free or free the item after the end of the array.

* Sync OpenBSD patchset 540:

* Sync OpenBSD patchset 539:

* Sync OpenBSD patchset 538:

* Sync OpenBSD patchset 537:

* Sync OpenBSD patchset 536:

* Sync OpenBSD patchset 535:

* Tweak a comment and add some spacing.

* Get rid of the ugly CMD_CHFLAG macro and use a const string (eg "dDU") in the command entry structs and a couple of functions to check/set the flags.

* Unreachable statement, found by lint.

* Tidy up and fix some types, prompted by lint via deraadt.

* imsg_read returns ssize_t not int, pointed out by lint via deraadt.

* Destroy panes immediately rather than checking them all every loop.

* Sync OpenBSD patchset 534:

* Sync OpenBSD patchset 533:

* Sync OpenBSD patchset 532:

* Sync OpenBSD patchset 531:

* Sync OpenBSD patchset 530:

* Sync OpenBSD patchset 529:

* Sync OpenBSD patchset 528:

* Sync OpenBSD patchset 527:

* Use winlink_remove() to remove old winlinks when synchronizing grouped sessions rather than doing it manually and not adjusted the reference count. Fixes crash seen by Dan Harnett.

* Zap unused functions, prompted by deraadt.

* Emulate the ri (reverse index) capability: this allows tmux to at least start on Sun consoles (TERM=sun or sun-color), even if there appear to still be problems on some boxes (my Blade 100 is fine but edd's Blade 1000 shows odd screen corruption).

* Support rxvt-style keys again, but this time: support all the variations, put them in as raw escape sequences rather than fiddling with the values from terminfo, put them /after/ the terminfo values so the latter take precedence.

* Rewrite a confusing loop when freeing the arg array on exit and move the check for argv being NULL, prompted by parfait via deraadt.

* Add an explicit zero-length check for UTF-8 input data, prompted by a report from parfait via deraadt.

* Free the pane bufferevent when the fd is closed (the signal could come before the error callback).

* OS X is still broken, so ask libevent not to use kqueue or poll.

* Only need to chmod +x or -x the socket when a client is created, lost or attached, rather than every event loop.

* Sync OpenBSD patchset 526:

* Sync OpenBSD patchset 525:

* Sync OpenBSD patchset 524:

* Sync OpenBSD patchset 523:

* Sync OpenBSD patchset 522:

* Sync OpenBSD patchset 521:

* Sync OpenBSD patchset 520:

* Sync OpenBSD patchset 519:

* Sync OpenBSD patchset 518:

* There is no real standard for modifier plus function keys. Previously, tmux output some from rxvt but in other ways did the same as xterm or other terminals, but this is a bit inconsistent.

* Don't output rxvtisms either.

* Twiddling the last bit is an rxvtism, so do not support it in the table by default.

* Whoops, this is needed for last commit as well.

* Lookup key as a named key (eg 'Space') before checking for single character keys, makes C-Space/M-Space etc resolve to the correct key code.

* Don't return 1 unless there was actually a problem (signal/lost server) rather than for all events (normal exit/detach/etc).

* +.

* Just ignore tty fd errors rather than dying, stops the server dying if the session is disconnected abrubtly (eg ssh ~.).

* +.

* The input key should be a u_char. Fixes top-bit-set input problem reported by ajacoutot@.

* Constify buf.

* Sync OpenBSD patchset 517:

* Sync OpenBSD patchset 516:

* Sync OpenBSD patchset 515:

* Sync OpenBSD patchset 514:

* Sync OpenBSD patchset 513:

* Sync OpenBSD patchset 512:

* Sync OpenBSD patchset 511:

* Sync OpenBSD patchset 510:

* Sync OpenBSD patchset 509:

* Sync OpenBSD patchset 508:

* Sync OpenBSD patchset 507:

* Make it compile on the portable version.

* Sync OpenBSD patchset 506:

* Sync OpenBSD patchset 505:

* Sync OpenBSD patchset 504:

* Sync OpenBSD patchset 503:

* Sync OpenBSD patchset 502:

* Sync OpenBSD patchset 501:

* Sync OpenBSD patchset 500:

* Sync OpenBSD patchset 499:

* Sync OpenBSD patchset 498:

* Sync OpenBSD patchset 497:

* Sync OpenBSD patchset 496:

* Sync OpenBSD patchset 495:

* Sync OpenBSD patchset 494:

* Sync OpenBSD patchset 493:

* Sync OpenBSD patchset 492:

* Adjust recent libevent changes to the portable version.

* Sync OpenBSD patchset 491:

* Don't try enable/disable the event if the window pane is dead (fd == -1), as the event will have been freed.

* Clear to the end of the screen from the right starting point when drawing line-by-line (in panes or if ed not supported). Fixes problem spotted by Frank Terbeck.

* Old xterm F1-F4 are \033O_P not \033[O_P.

* Unused variable. Aargh.

* Switch the tty key tree over to an (unbalanced) ternary tree which allows partial matches to be done (they wait for further data or a timer to expire, like a naked escape).

* Working on 1.2.

* Use %%VERSION%% so the Makefile can replace it by VERSION.

* Update CHANGES, and NOTES for the 1.1 release.

* Bump VERSION.

* Prepare the tree for the 1.1 release.

* key_string_lookup_key uses a static buffer, so copy its output into the working buffer before calling the command print function which can also use it (eg send-keys).

* Key flags are only used for initialisation so they are not needed in the main tty_key struct.

* EVLOOP_ONCE takes care of the wakeup, so no need to call event_loopexit(NULL).

* Now all timers are events, there is no longer any need to wake up every 50 ms - only wake up when an event happens.

* Switch tty key input over to happen on a read event. This is a bit more complicated because of escape input, but in that case instead of processing a key immediately, schedule a timer and reprocess the bufer when it expires.

* Convert the key repeat timer to an event.

* Change window name change to use a timer event rather than a gettimeofday() check every loop.

* Move status timer check into the global once-per-second timer, this could maybe be done better but one every second is better than once every 50 ms.

* Use timeout events for the identify and message timers.

* Don't reenlist the client imsg event every loop, instead have a small function to it and call it after the event triggers or after a imsg is added.

* Sync OpenBSD patchset 490:

* Sync OpenBSD patchset 489:

* Sync OpenBSD patchset 488:

* Adjust OpenBSD patchset 487 to the portable version, and while there drop malloc_options on DragonFlyBSD, and FreeBSD.

* It would help if I read my own comments... make alt keys work again by sending alt AND the key not alt instead of it.

* Move some common code into a function.

* Sync OpenBSD patchset 487:

* Tell the client to exit on configuration file error.

* Sync OpenBSD patchset 486:

* Sync OpenBSD patchset 485:

* Bye-bye buffer*.c.

* Sync OpenBSD patchset 484:

* Convert the window pane (pty master side) fd over to use a bufferevent.

* Sync OpenBSD patchset 483:

* Call event_init() before loading the config file, since potentially it could set up events.

* Sync OpenBSD patchset 482:

* Sync OpenBSD patchset 481:

* Sync OpenBSD patchset 480:

* Switch window pane pipe redirect fd over to a bufferevent.

* Switch tty fds over to a bufferevent.

* Add back JOB_PERSIST checks that got lost.

* Switch jobs over to use a bufferevent.

* A couple of minor cosmetic changes.

* Initial changes to move tmux to libevent.

* Unused (but assigned to) variable, found by lint.

* Ignore the colour on space, /not/ the attributes.

* Fix the reverse emulation when a terminal doesn't have setab to use the correct fg/bg (adjusted if spaces) and happen before attribute setting.

* Change declaration and use of malloc_options to be more standard, from Tim van der Molen.

* Don't backoff based on suspended or deda clients as they are always likely to have data backed up.

* Add an activity time for clients, like for sessions, and change session and client lookup to pick the most recently used rather than the most recently created - this is much more useful when used interactively and (because the activity time is set at creation) should have no effect on source-file.

* If it isn't available explicitly, work out the current client in a similar way to the current session - build a list of the possibilities then pick the newest.

* Change session and client activity and creation time members to have more meaningful names.

* tv member of struct paste_buffer is updated but not otherwise used, so remove it.

* Fix vi page up mode key (from naddy), add missing half page keys, and sort.

* Sync OpenBSD patchset 479:

* Sync OpenBSD patchset 478:

* Sync OpenBSD patchset 477:

* Sync OpenBSD patchset 476:

* Sync OpenBSD patchset 475:

* Sync OpenBSD patchset 474:

* Sync OpenBSD patchset 473:

* Sync OpenBSD patchset 472:

* +.

* Double the escape timer (the time after a \033 is received before tmux gives up waiting to see if it is part of a key sequence and passes it through) to 500 ms, the previous setting was too fast. Suggested by naddy.

* Example from Thayer Williams.

* When matching the session names with -t, look for exact matches first before trying partial matches.

* Leftover unused variable :-/.

* There isn't much point in doing lstat before connect so instead just do connect and handle ENOENT from it which is a little tidier.

* Reorder slightly to tidy code.

* Add a flag for jobs that shouldn't be freed after they've died and use it for status jobs, then only kill those jobs when status-left, status-right or set-titles-string is changed.

* Missing setenv/showenv aliases.

* +-.

* Missing ;. From eric@ ages ago.

* Sync OpenBSD patchset 471:

* Sync OpenBSD patchset 470:

* Sync OpenBSD patchset 469:

* Sync OpenBSD patchset 468:

* Sync OpenBSD patchset 467:

* Sync OpenBSD patchset 466:

* Sync OpenBSD patchset 465:

* Sync OpenBSD patchset 464:

* Sync OpenBSD patchset 463:

* Sync OpenBSD patchset 462:

* Sync OpenBSD patchset 461:

* Sync OpenBSD patchset 460:

* Sync OpenBSD patchset 459:

* Sync OpenBSD patchset 458:

* Sync OpenBSD patchset 457:

* Sync OpenBSD patchset 456:

* Sync OpenBSD patchset 455:

* Sync OpenBSD patchset 454:

* Sync OpenBSD patchset 453:

* Sync OpenBSD patchset 452:

* Sync OpenBSD patchset 451:

* If any client currently displaying a window pane has more than 1 KB of output buffered, don't accept any further data from the process running in the pane.

* Sync OpenBSD patchset 450:

* Sync OpenBSD patchset 449:

* Sync OpenBSD patchset 448:

* Sync OpenBSD patchset 447:

* Sync OpenBSD patchset 446:

* Sync OpenBSD patchset 445:

* Add a minor optimisatin: if the character being printed is space, don't worry about setting the background colour or attributes (except reverse).

* Twaek this slightly to avoid confusing use of flags variable.

* Setting SGR0 when setting the fg and bg has problems if only one of the two is meant to be default, so rewrite the code to move this outside, move setting colours before attributes and generally clean up.

* Move the poll registration functions into the server-*.c files.

* tabs are better; ok nicm

* Clear signal flags /before/ taking action and continue afterwards to reduce chance of dropping signals. Pointed out by deraadt@.

* Call fstat() after fopen() rather than stat() before.

* Reset the umask right after fopen to avoid leaving it changed on error, noticed by deraadt@.

* Use strlcpy instead of strncpy, pointed out by deraadt.

* Don't do anything in the client callback if the client has already died to avoid a use-after-free (the callback is used twice, once for the client itself and once for the tty). Fixes crashes seen by Han Boetes.

* Nuke accidentally-committed debugging statement.

* Not all terminals swap CSI and SS3 on ctrl, so remove that.

* Rewrite xterm-keys code (both input and output) so that works (doesn't always output the same modifiers, accepts all the possible input keys) and is more understandable.

* Support the (mostly new) function key+modifier caps (kIC-kIC7). Most of these will be caught (soon) by the xterm keys code in xterm itself but some other descriptions such as rxvt define them as well.

* RHS spacing.

* Fix in IE6.

* Spacing tweaks.

* On second thoughts, drop the rxvt output entirely.

* Set the output code for ctrl+cursor keys correctly, and disable (comment) rxvt-style output.

* As we always put the cursor keys into application mode, assume keys sent with CSI have ctrl.

* Tidy up table.

* Drop INPUTKEY_CTRL and just handle it as part of the table.

* Add or fix some comments.

* Tidy up table.

* Rename keypad keys to something more useful.

* Remove the xterm-keys code which is broken (a replacement is coming but some more cleanup is needed first).

* Add missing license.

* Don't try to continue processing a client if the session has been destroyed.

* +confirm-before.

* Add or clarify licenses where appropriate.

* Remove -d from tmux.1 as well.

* Remove the -d flag to tmux and just use op/AX to detect default colours.

* +.

* +time.h.

* Sync OpenBSD patchset 444:

* Sync OpenBSD patchset 443:

* Update.

* Sync OpenBSD patchset 442:

* Sync OpenBSD patchset 441:

* Mustn't forget this.

* Much improved web page from Mike Putnam.

* Update.

* [ is a punctuation character and should be escaped with Ql. Although the current groff version we have seems to handle it fine, other versions are not so tolerant.

* cc -> $(CC)

* Bring a comment into line with reality.

* -a option to kill all except current pane. From Tiago Cunha, thanks!

* Sync OpenBSD patchset 440:

* Sync OpenBSD patchset 439:

* Adjust OpenBSD patchset 438 to the portable version.

* Sync OpenBSD patchset 438:

* Sync OpenBSD patchset 437:

* Sync OpenBSD patchset 436:

* Fix CVS keyword.

* Sync OpenBSD patchset 435:

* Sync OpenBSD patchset 434:

* Sync OpenBSD patchset 433:

* Sync OpenBSD patchset 432:

* Sync OpenBSD patchset 431:

* Sync OpenBSD patchset 430:

* Sync OpenBSD patchset 429:

* Sync OpenBSD patchset 428:

* Sync OpenBSD patchset 427:

* Sync OpenBSD patchset 426:

* Sync OpenBSD patchset 424:

* Sync OpenBSD patchset 422:

* Sync OpenBSD patchset 421:

* Sync OpenBSD patchset 420:

* Sync OpenBSD patchset 419:

* Sync OpenBSD patchset 418:

* Sync OpenBSD patchset 417:

* Sync OpenBSD patchset 416:

* Sync OpenBSD patchset 415:

* Sync OpenBSD patchset 414:

* Sync OpenBSD patchset 413:

* Support the bright fg/bg colour SGR 90-97 and 100-107.

* Redraw checks have to after handling input or pane redraw flags set by key presses will not be acted on.

* The client buffers have to be checked after every event in order to catch the escape timers and properly reset the cursor.

* Split the server code handling clients, jobs and windows off into separate files from server.c (merging server-msg.c into the client file) and rather than iterating over each set after poll(), allow a callback to be specified when the fd is added and just walk once over the returned pollfds calling each callback where needed.

* Only redraw the pane when changing mode, not the entire window.

* Merge prepare_cmd into main as it is short and only called once.

* Tidy identify message send into a separate function.

* Don't try to unsuspend a client if it isn't suspended.

* Client tidying: get rid of client_ctx struct in favour of two variables in client.c, and move the functions in client-fn.c into other files.

* Unused variable.

* Remove unused function.

* Nuke dead store.

* Now we are correctly not redrawing the whole pane on linefeed, redo the last-cursor-position code to move to the right position when panes reach EOL.

* Tweak descriptions for up/down pane to be clearer.

* Don't redraw the scroll region on linefeed/reverse index unless it is necessary (the cursor is at the bottom/top). Should fix slow cursor movement when using vi in a pane spotted by pirofti@.

* Some terminals don't correctly clear their let's-wrap flag after changing the scroll region (which moves the cursor to 0,0). This means that if the cursor was at the edge of the screen, any further output after scroll region change incorrectly causes a line wrap. Add a workaround to move the cursor to position 0 if it is at the screen edge before changing scroll region.

* Getting the read and write ends of the pipe the right way round is usually recommended. DOH.

* Getting the read and write ends of the pipe the right way round is usually recommended. DOH.

* +.

* %zu not %u, doh.

* Sort out stdout before stdin/stderr in case the stdout side of the pipe got one of their fds.

* Correctly nuke the EOL $ marker when scrolling, reported by martynas@, thanks.

* Try to reduce the UTF-8 mess.

* UTF-8 combined character fixes.

* Move the check for whether to force a line wrapper lower down into the tty code where it has access to the tty width, which is what should have been checked.

* Nuke stray blank line.

* +.

* Stop updating the screen when not in output mode, stops copy mode getting confused.

* +.

* Always move the cursor position on !xenl terminals, since there is no invisible last cursor position.

* Don't print wide characters at screen width - 1. Matches uterm behaviour and is probably a better idea anyway.

* Instead of having a complicated check to see if the cursor is in the last position to avoid an explicit wrap, actually move it there.

* When checking whether the region will scroll and the cursor position is thus unsuitable for using CUD/CUU, check the current cursor position not the target position.

* +.

* Sync OpenBSD patchset 412:

* Turn off stupid warnings when using Sun CC.

* Fill in the tty name in SunOS's forkpty compat, and use it in osdep_getname. From Todd Carson.

* The pane pty name isn't useful for anything so show the pane number instead.

* Sync OpenBSD patchset 411:

* Sync OpenBSD patchset 409:

* Sync OpenBSD patchset 408:

* Sync OpenBSD patchset 407:

* Fix CVS keyword.

* Update.

* Sync OpenBSD patchset 406:

* Sync OpenBSD patchset 405:

* Sync OpenBSD patchset 404:

* Sync OpenBSD patchset 403:

* Sync OpenBSD patchset 402:

* Sync OpenBSD patchset 401:

* Sync OpenBSD patchset 400:

* Sync OpenBSD patchset 399:

* Sync OpenBSD patchset 398:

* Sync OpenBSD patchset 397:

* Sync OpenBSD patchset 396:

* Sync OpenBSD patchset 395:

* Sync OpenBSD patchset 394:

* Sync OpenBSD patchset 393:

* Sync OpenBSD patchset 392:

* Sync OpenBSD patchset 391:

* cmd_find_client shouldn't die when there is an empty slot in the clients array. DOH.

* Don't let cmd_lookup_client find clients w/o a session.

* Support for automatic-rename for Solaris thanks to Todd Carson.

* Don't allow cmd_lookup_client to test clients without a session.

* Move lines into the history when scrolling even if the scroll region is not the entire screen.

* Handle DECCOLM by just emulating its side-effect of clearing the screen.

* +.

* +.

* Lots of stuff is done done done.

* Add mode keys to move the cursor to the top, middle and bottom of the screen. H/M/L in vi mode and M-R/M-r in emacs (bottom of screen not bound in emacs).

* Do this in a better way - print messages when exiting with nonzero.

* Don't print exit messages when used as a login shell, requested by martynas@ a while back.

* Don't try to use \n across scroll region when doing \r\n either.

* When a session is unattached, reset its activity timer to prevent it locking instantly when reattached.

* Instead of using something sort of similar for both newline checks, use something the same. Doesn't fix the bug I'm looking for though :-/.

* +.

* When drawing lines that have wrapped naturally, don't force a newline but permit them to wrap naturally again. This allows terminals that use this to guess where lines start and end for eg mouse selecting (like xterm) to work correctly.

* When backspace is received at the beginning of a line and the previous line was wrapped, move the cursor back up to the end of the previous line.

* Don't run through the column unchanged case if the row was unchanged but there were no suitable optimisations, instead make it an else to fall through to absolute addressing.

* If the vertical cursor movement crosses the scroll region, CUU and CUD shouldn't be used even if VPA isn't present - in that case CUP should be used.

* Wrap a couple of long lines.

* Use absolute movement if right at the end of the line as it isn't a reliable place to move from relatively.

* Use relative cursor movement instead of absolute when possible and when supported by the terminal to reduce the size of the output data (generally about 10-20%).

* Permit attributes to be turned off in #[] by prefixing with "no", for example "noblink".

* Similarly add a tty_cursor_pane function to tidy up most of the calls.

* _absolute is redundant, just use tty_region.

* Cleanup: use two functions for region setting, one for absolute and one inside pane.

* Reduce diff with OpenBSD.

* Sync OpenBSD patchset 390:

* Sync OpenBSD patchset 389:

* Sync OpenBSD patchset 388:

* No paths.h in here, as well.

* Sync OpenBSD patchset 387:

* Sync OpenBSD patchset 386:

* Sync OpenBSD patchset 385:

* Sync OpenBSD patchset 384:

* Sync OpenBSD patchset 383:

* Sync OpenBSD patchset 382:

* Sync OpenBSD patchset 381:

* Sync OpenBSD patchset 380:

* Sync OpenBSD patchset 379:

* Sync OpenBSD patchset 378:

* Update.

* Sync OpenBSD patchset 377:

* Sync OpenBSD patchset 376:

* Sync OpenBSD patchset 375:

* Do not include paths.h, since it's OS-dependent, due to OpenBSD patchset 374.

* Sync OpenBSD patchset 374:

* Update.

* Sync OpenBSD patchset 373:

* Sync OpenBSD patchset 372:

* Sync OpenBSD patchset 371:

* Update.

* Sync OpenBSD patchset 370:

* Sync OpenBSD patchset 369:

* Like linefeed, don't set the scroll region for reverse index unless it will be needed.

* +.

* punctuation fix;

* Done or not doing.

* Set the current window pointer to NULL when killing a winlink that is to be replaced with link-window -k. This prevents it being pushed onto the last window stack and causing a use-after-free.

* Add a pipe-pane command to allow a pane to be piped to a shell command, for example:

* Convert if-shell over to the background job framework as well.

* Remove a debugging leftover and add copyright.

* Switch run-shell over to queue the command in the background like #().

* There isn't much point in having a free function if it isn't used.

* Collect status from dead jobs and don't invoke the callback until both all input (the socket is closed) and status is available.

* Clean up by introducing a wrapper struct for mouse clicks rather than passing three u_chars around.

* Braek some bits out of server_fill_client() that aren't really related to polling into their own function.

* Put all jobs on a global all_jobs list and use that in server.c instead of running through all the clients.

* -scroll mode which is dead.

* Split list-panes off from list-windows.

* pcvt25 has AX but in fact the console doesn't support it.

* Accept key and mouse input for keys in zombified windows if they are in a mode..

* When a window is zombified and automatic-rename is on, append [dead] to the name.

* Update.

* Rather than running status-left, status-right and window title #() with popen immediately every redraw, queue them up and run them in the background, starting each once every status-interval. The actual status line uses the output from the last run.

* New option, mouse-select-pane. If on, the mouse may be used to select the current pane.

* There is no point setting the scroll region up for line feeds unless scrolling is actually going to happen, so don't.

* Add "grouped sessions" which have independent name, options, current window and so on but where the linked windows are synchronized (ie creating, killing windows and so on are mirrored between the sessions). A grouped session may be created by passing -t to new-session.

* Support for individual session idle time locking. May be enabled by turning off the lock-server option (it is on by default). When this is off, each session locks when it has been idle for the lock-after-time setting. When on, the entire server locks when ALL sessions have been idle for their individual lock-after-time settings.

* Instead of passing a struct pollfd ** around through various functions, build them into a tree and then convert into a flat poll array before and after poll.

* Sync with reality.

* Sync OpenBSD patchset 368:

* Update.

* Sync OpenBSD patchset 367:

* Sync OpenBSD patchset 366:

* The UTF-8 detection idea doesn't work and I am reasonably happy with the current methods, so remove the (already #ifdef 0'd) code.

* Add a little.

* Add a simple synchronize-panes window option: when set, all input to any pane that is part of the window is also sent to all other panes in the same window. Suggested by several, most recently Tomasz Pajor.

* Be less aggressive about turning the cursor off, only explicitly turn it off when tmux is redrawing, otherwise leave in the state set by the application.

* Sync OpenBSD patchset 365:

* Sync OpenBSD patchset 364:

* Support J and K for scroll up and scroll down in copy mode with vi keys, suggested by martynas.

* Fix comment.

* Remove unneeded defines that were used with the internal locking mechanism.

* Sync OpenBSD patchset 363:

* Update.

* Sync OpenBSD patchset 362:

* Sync OpenBSD patchset 361:

* Sync OpenBSD patchset 360:

* Accept ^? for backspace as well as BSpace.

* Remove scroll mode which is now redundant, copy mode should be used instead.

* Make C-Up and C-Down in copy mode scroll the screen up and down one line without moving the cursor, like Up and Down in scroll mode (which will shortly disappear).

* If no target client is specified to commands which accept one, try to guess the current client, in a similar manner to how sessions already work: if the current session can be established and has only one client, use that; otherwise use the most recently created client.

* Sync OpenBSD patchset 359:

* Sync OpenBSD patchset 358:

* Sync OpenBSD patchset 357:

* Sync OpenBSD patchset 356:

* Sync OpenBSD patchset 355:

* Sync OpenBSD patchset 354:

* tweak previous;

* Get / and ? the right way round in vi mode, and use : for goto line rather than g.

* Check for already locked/suspended clients in server_lock_client rather than its callers.

* Add a key string for space ("Space") and document the names, suggested by guenther@. Also document how to bind " and ', suggested by miod@.

* C-v and M-v too.

* Support C-n/C-p with emacs keys in choice mode, also fix a comment.

* Update.

* Sync OpenBSD patchset 353:

* Sync OpenBSD patchset 352:

* Sync OpenBSD patchset 351:

* New lock-client and lock-session commands to lock an individual client or all clients attached to a session respectively.

* Should be bestp now.

* Earlier versions of FreeBSD are missing RB_PREV.

* Don't allow locked or suspended clients to limit the size of active clients.

* Use __sun not __sun__ as Sun's CC doesn't define the latter.

* Adjust OpenBSD patchset 350 to the portable version.

* Sync OpenBSD patchset 350:

* Sync OpenBSD patchset 349:

* Sync OpenBSD patchset 348:

* Remove HAVE_LOGIN_CAP now that the internal locking mechanism was removed, due to OpenBSD patchset 347.

* Update.

* Sync OpenBSD patchset 347:

* Sync OpenBSD patchset 346:

* Remove PROMPT_HIDDEN code which is now unused.

* Sync OpenBSD patchset 345:

* Sync OpenBSD patchset 344:

* +.

* Support -c like sh(1) to execute a command, useful when tmux is a login shell. Suggested by halex@.

* On SIGTERM, just abandon any suspended/locked clients and leave them to it, otherwise the server will hang around (refusing new connections) until they exit properly.

* Don't die if the client is detaching (the tty has been closed) after waking up from locking.

* Remove the internal tmux locking and instead detach each client and run the command specified by a new option "lock-command" (by default "lock -np") in each client.

* Trim some code by moving the ioctl(TIOCGWINSZ) after SIGWINCH from the client into the server.

* Don't attempt to open() the tty path, rely on the client sending its stdin fd with imsg and fatal if it doesn't, then set the FD_CLOEXEC flag in tty_init instead of tty_open to prevent them leaking into child processes if any are created between the two calls.

* Tweak tparm() to make Solaris' backward userland happy and remove the -I mess in configure which tried to deal with the fallout from their horrible package management.

* Be more careful about what flags are cleared when opening the terminal, otherwise the opened/started flags are cleared and the terminal never released.

* Sync OpenBSD patchset 343:

* Sync OpenBSD patchset 342:

* Sync OpenBSD patchset 341:

* Sync OpenBSD patchset 340:

* Sync OpenBSD patchset 339:

* Sync OpenBSD patchset 338:

* Sync OpenBSD patchset 337:

* Sync OpenBSD patchset 336:

* Permit multiple prefix keys to be defined, separated by commas, for example:

* Done.

* Use KEYC_NONE constant instead of 0 on init.

* Nuke -i option which isn't used anymore.

* Use option print function for info messages as well.

* Move common code from show-options and show-window-options into a function.

* zap trailing whitespace;

* Drop tiny union from option struct.

* Key options were implemented as a number so these struct members are unused.

* Update.

* Sync OpenBSD patchset 335:

* Sync OpenBSD patchset 334:

* Sync OpenBSD patchset 333:

* Sync OpenBSD patchset 332:

* Delete backup files in the compat directory, as well.

* run-shell command to run a shell command without opening a window, sending stdout to output mode.

* Now working on 1.1.

* 1.0.

* Don't try to use tio if it is NULL.

* These are done.

* FreeBSD tree.h is fine.

* Nuke unused variables and fix stupid error message.

* Move some common and untidy code for window link/unlink into generic functions instead of duplicating it in move/link window..

* Regularise some fatal messages.

* Update.

* Sync OpenBSD patchset 331:

* New option, set-titles-string, to allow the window title to be specified (as for status-left/right) if set-titles is on. Also only update the title when the status line is being redrawn.

* Add some bits.

* Sync from OpenBSD:

* Rather than constructing an entire termios struct from ttydefaults.h, just let forkpty do it and then alter the bits that should be changed after fork. A little neater and more portable.

* Sync OpenBSD patchset 329:

* Sync OpenBSD patchset 328:

* Sync OpenBSD patchset 327:

* Sync OpenBSD patchset 326:

* +.

* Enclose repeated buffer draining code in a new msgbuf_drain() function, which is additionally exported for use by others.

* Stick line length to what is actually used (removing an optimization that allowed it to be bigger), and use clear line/EOL sequences rather than spaces in copy/scroll mode.

* The default terminal size should be 80x24, not 80x25.

* Update.

* Nuke unused server_client_index function, pointed out by martynas@.

* Always set VERASE to \177.

* Zap unused variables.

* Sync OpenBSD patchset 324:

* Sync OpenBSD patchset 323:

* Doh, trim variables unused now.

* Tidy some common code for destroying sessions into a new function.

* tmux always outputs \177 for backspace, so explicitly set VERASE to \177 for new windows.

* Sync OpenBSD patchset 322:

* Permit options such as status-bg to be configured using the entire 256 colour palette by setting "colour0" to "colour255".

* Sync OpenBSD patchset 321:

* Sync OpenBSD patchset 320:

* Sync OpenBSD patchset 319:

* Sync OpenBSD patchset 318:

* Sync OpenBSD patchset 317:

* While the display-panes indicator is on screen, make the number keys select the pane with that index.

* Reference count clients and sessions rather than relying on a saved index for cmd-choose-*.

* Tiny cleanup.

* Give each paste buffer a size member instead of requiring them to be zero-terminated.

* +.

* Permit embedded colour and attributes in status-left and status-right using new #[] special characters, for example #[fg=red,bg=blue,blink].

* Sync OpenBSD patchset 316:

* Only redraw all clients once when the backoff timer expires rather than every second all the time.

* Sync OpenBSD patchset 315:

* Sync OpenBSD patchset 314:

* Tidy main and make it a bit easier to read.

* Solaris needs a knob twiddled to get POSIX getpwduid_r.

* Tell the user when sleeping due to password backoff.

* Sync OpenBSD patchset 313:

* Sync OpenBSD patchset 309:

* - Make it compile on operating systems other than BSD due to OpenBSD patchset   308. - While there, remove some duplicate code from the compat header file.

* Sync OpenBSD patchset 308:

* Fix a race condition when asking a client to take over the terminal (switching to a different poll loop):

* Sync OpenBSD patchset 307:

* When shutting down the server, expect clients to be polite and exit when asked with the right message.

* When shutting down the server, expect clients to be polite and exit when asked with the right message.

* Nuke debugging.

* That was the wrong fix. MSG_ERROR should set the error and the client should use the error and exit on MSG_EXIT (it was being handled in the default case). Undo the last change, move the errstr check into the MSG_EXIT case, and add a comment.

* That was the wrong fix. MSG_ERROR should set the error and the client should use the error and exit on MSG_EXIT (it was being handled in the default case). Undo the last change, move the errstr check into the MSG_EXIT case, and add a comment.

* Set exittype for error exit as well as the error string.

* Set exittype for error exit as well as the error string.

* Update.

* Accept -l to make it easier for people who use tmux as a login shell to use $SHELL. Originally from martynas@, tweaked by me.

* When incorrect passwords are entered, behave similarly to login(1) and backoff for a bit. Based on a diff from martynas@.

* OS X CMSG_FIRSTHDR is broken.

* Add a transpose-chars command in edit mode (C-t in emacs mode only). From Kalle Olavi Niemitalo.

* Sync OpenBSD patchset 306:

* Update.

* Adjust OpenBSD patchset 305 to the portable version.

* Sync OpenBSD patchset 305:

* Sync OpenBSD patchset 304:

* Sync OpenBSD patchset 303:

* If forking a login shell or if SHELL is otherwise not useful, set it to the default shell. Based on a diff from martynas@.

* When using tmux as a login shell, there is currently no way to specify a shell to be used as a login shell inside tmux, so add a default-shell session option. This sets the shell invoked as a login shell when the default-command option is empty.

* Use "Password:" with no space for password prompts and don't display a *s for the password, like pretty much everything else. From martynas@ with minor tweaks by me.

* Sort cases same as getopt argument, from martynas.

* Update.

* Sync OpenBSD patchset 302:

* Sync OpenBSD patchset 301:

* Sync OpenBSD patchset 300:

* Add a new display-panes command, with two options (display-panes-colour and display-panes-time), which displays a visual indication of the number of each pane.

* squash typo ok nicm@

* Don't call tty_free unless the client is a terminal, otherwise tty_init hasn't been called and it may end up doing close(0). From Kalle Olavi Niemitalo.

* Sync OpenBSD patchset 299:

* Sync OpenBSD patchset 298:

* Sync OpenBSD patchset 297:

* Initialise the arg2 pointer properly (also free it when freeing the others). Fixes crashes with J in malloc_options reported by oga.

* Make this work when the clock is in small characters as well. Doh.

* Fix clock mode in black and white terminals now that tty.c tries to fix reverse.

* ttydefchars is a fucking horlicks. Happily we only need it in one file, move it in there to avoid multiple inclusion issues.

* FreeBSD and NetBSD HAVE got ttydefaults.h. Fixes SF bug 2844744.

* Sync OpenBSD patchset 296:

* Update.

* Print -l and -p when showing command, pointed out by Tiago Cunha.

* Include <ctype.h>.

* Sync OpenBSD patchset 294:

* These should #include <ctype.h>.

* Sync OpenBSD patchset 293:

* Done.

* Add a choose-client command and extend choose-{session,window} to accept a template. After a choice is made, %% (or %1) in the template is replaced by the name of the session, window or client suitable for -t and the result executed as a command. So, for example, "choose-window "killw -t '%%'"" will kill the selected window.

* Sync OpenBSD patchset 292:

* Sync OpenBSD patchset 291:

* Sync OpenBSD patchset 290:

* Sync OpenBSD patchset 289:

* gcc2 doesn't understand attributes on function pointers.

* Add some other obvious variables to update-environment (WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION) so they are updated in the session environment on new/attach.

* Some code tidying.

* When using source-file, run the commands in the context of the source-file command rather than with no context. This makes things like attach work from a file.

* The cursession member in struct cmd_ctx is always either curclient->session or NULL when curclient is also NULL, so just eliminate it.

* Check the return value of strunvis against -1 not NULL.

* Check the return value of strunvis against -1 not NULL.

* Sync OpenBSD patchset 287:

* Sync OpenBSD patchset 285:

* Sync OpenBSD patchset 284:

* Sync OpenBSD patchset 283:

* Sync OpenBSD patchset 282:

* Sync OpenBSD patchset 281:

* Emulate dch/dch1 if missing by redrawing the entire line.

* Move reading termios settings to before tty_open alters them, and expand the comment.

* Move reading termios settings to before tty_open alters them, and expand the comment.

* Done.

* Ugh, committed the wrong version of this change and got both solutions rather than just the second. Remove unused assignment.

* When moving up or down in copy mode, save the cursor position and size of the last line with content (width != 0) and use it to determine if the cursor should be at the end of the line. Fixes problem of the cursor always jumping to the end of the line when scrolling past a blank line.

* Fix grid_expand_line so it actually works when the required size is bigger than 2 * the current size.

* A few trivial optimisations: no need to check for zero size if calling buffer_ensure in buffer.c; expand grid lines by a greater increase than one each time; and don't read UTF-8 data unless it actually needs to be checked when overwriting a cell.

* VTIME and VMIN are only necessary in noncanonical mode, so Solaris reuses the VEOF and VEOL indexes for them. ICANON is set by default, so don't bother to set VTIME and VMIN.

* Need this rubbish on Solaris for CMESG*.

* Add $Id$, nuke queue.h.

* Solaris has no u_int32_t etc.

* Didn't mean to commit this.

* Also undef CTRL.

* Solaris defines some of these in termios.h so #ifndef them.

* Solaris has no bzero().

* Sync OpenBSD patchset 280:

* Sync OpenBSD patchset 279:

* Sync OpenBSD patchset 278:

* Sync OpenBSD patchset 276:

* Sync OpenBSD patchset 275:

* Sync OpenBSD patchset 274:

* Sync OpenBSD patchset 273:

* Sync OpenBSD patchset 272:

* Sync OpenBSD patchset 271:

* Sync OpenBSD patchset 270:

* Do not include vis.h directly, since it's OS-dependent, due to OpenBSD patchsets 268, and 269.

* Sync OpenBSD patchset 269:

* Sync OpenBSD patchset 268:

* Sync OpenBSD patchset 267:

* Sync OpenBSD patchset 266:

* Sync OpenBSD patchset 265:

* Sync OpenBSD patchset 264:

* Nuke unused variable.

* Solaris and AIX have no ttydefaults.h.

* Handle the device attributes (DA) escape sequence.

* tweak previous;

* Call tcsetattr(). Not tested.

* In yet another triumph of stupidity over common sense, the glibc sys/ttydefaults.h is just a copy of the file from *BSD, taking no account of the fact that their OWN termios.h uses entirely different indexes into the array.

* Don't read beyond the edge of the screen when searching (dies with debug enabled).

* Use cfsetispeed/cfsetospeed to set termios speed members.

* Use cfsetispeed/cfsetospeed to set termios speed members.

* Extend command-prompt with a -p option which is a comma-separated list of one or more prompts to present in order.

* Make this match OpenBSD.

* Didn't mean to commit this stuff.

* This is a better fix for OS X stupidity.

* OS X stupid poll fix.

* Instead of just checking for an empty buffer, which may not be the case if there is unconsumed data, save the previous size and use it instead. This means that activity monitoring should work in this (unlikely) event.

* Whoops, getting the comparison the right way round is usually recommended.

* Move another expensive options test to after a cheaper timer check/update.

* options_get_number() is relatively expensive and a check for dead panes happens a lot more often than actually finding one, so instead of getting the option for every check, get it for every dead window found.

* Update.

* Now that pane targets (-t) are supported, switch some commands to use them where it makes sense: clock-mode, copy-mode, scroll-mode, send-keys, send-prefix.

* Tag a few missed printf-like functions and fix a missing "%s".

* Pass show-buffer output through vis(3) as well, and wrap it to the edge of the terminal when used from the command line.

* Change list-buffers to run the preview of the buffer through vis(1).

* Use the full screen width when printing output rather than one less.

* Nuke unnecessary assignment.

* Add a "delete line" key when editing in the status line or the search up/down prompt. C-u with emacs keys, d with vi.

* Add (naive) searching and goto line in copy mode. Searching is C-r and C-s with emacs keys, / and ? with vi; n repeats the search again with either key set. All searching wraps the top/bottom. Goto line is g for both emacs and vi.

* Example from Han Boetes.

* vis(3) compat files were removed prematurely from {DragonFly,Free,Net}BSD. Add them back, per SourceForge bug #2838408.

* Sync OpenBSD patchset 263:

* Sync OpenBSD patchset 262:

* Sync OpenBSD patchset 261:

* Sync OpenBSD patchset 260:

* Sync OpenBSD patchset 259:

* Sync OpenBSD patchset 258:

* Update.

* Sync OpenBSD patchset 257:

* Sync OpenBSD patchset 256:

* Sync OpenBSD patchset 255:

* Include unistd.h due to OpenBSD patchset 254. At least on Linux, that's where _POSIX_VDISABLE is defined.

* Sync OpenBSD patchset 254:

* Solaris has no strsep(3).

* Sync OpenBSD patchset 253:

* Sync OpenBSD patchset 252:

* Sync OpenBSD patchset 251:

* Sync OpenBSD patchset 250:

* Sync OpenBSD patchset 249:

* Sync OpenBSD patchset 248:

* Sync OpenBSD patchset 247:

* Sync OpenBSD patchset 246:

* Sync OpenBSD patchset 245:

* Sync OpenBSD patchset 244:

* Adjust imsg changes to the portable version due to OpenBSD patchset 243.

* Sync OpenBSD patchset 243:

* Reset attributes as well as scroll region before poll(2) and add a big comment explaining why.

* Send SGR0 when initialising the screen. Fixes problems on terminals with BCE (like putty) if the background colours is non-default when tmux starts. May also fix problems when resuming a suspended tmux.

* Switch the prompt code to return an empty string when the user enters no response and reserve NULL for an explicit cancel. Change all callbacks to treat them the same so no functional change.

* +.

* Add and remove some bits.

* vi(1)-style half page scroll in copy and scroll modes. Move the vi full page scroll key to C-b instead of C-u and use C-u/C-d for half page scrolling with vi keys. In emacs mode, half page scrolling is bound to M-Up and M-Down.

* Scroll by two less than the number of lines in the screen, like emacs, rather than by the entire screen, to make it easier to pull things out from under the line indicator. Suggested by claudio.

* Disable mode-mouse (mouse in copy/choice mode) by default as it isn't very useful at the moment and causes confusion.

* Add a base-index session option to specify the first index checked when looking for an index for a new window.

* Allowing copy mode to scroll left and right is annoying, so limit it to the real screen width. To indicate the cursor is at the end of the line rather than the cell before, put a '$' in the last cell.

* Rather than telling the client to exit in the function when creating a new session detached, let the caller do it. Allows "tmux new -d \; attach" to work.

* When creating a new session from the command-line where there is an external terminal, copy the termios(4) special characters and use them for new windows created in the new session. Suggested by Theo.

* Redraw the screen after resizing.

* It was originally intended that scroll mode would show content that was currently off-screen due to resize, but somewhere along the way this got lost. Restore this behaviour to scroll mode by fixing screen_write_copy to read up to the saved line length rather than the current screen width. Copy mode remains unaltered for now.

* If the client passes zero for the window size in the identify message (which it can, for example on serial terminals), reset it to 80x25, same as for resize messages. Problem reported by kettenis@.

* A tty context must not be modified as it may be reused to update multiple clients, so make it const.

* When started as the shell, __progname contains a leading -, so hardcode "tmux" for socket path and log files, and strip it when working out the shell.

* imsg closes the fd after sending, so dup() STDIN_FILENO before passing it to the parent, otherwise TIOCGWINSZ will fail when the window is resized (that could actually be moved into the server but this is more future-proof and avoids breaking the protocol).

* Initialise log_fd to -1, prevents spurious disconnection of the client when it ends up as fd 0 (likely if the server is started with "tmux start").

* Have the client pass its stdin fd to the server when identifying itself and have the server use that rather than reopening the tty. If the fd isn't given, use the old behaviour (so no need for a version change).

* Add a TTY_OPENED flag and tidy a little.

* Drop the no_stop argument to tty_close and tty_free in favour of a flag in the tty struct.

* Switch tmux to use imsg. This is the last major change to make the client-server protocol more resilient and make the protocol versioning work properly. In future, the only things requiring a protocol version bump will be changes in the message structs, and (when both client and server have this change) mixing different versions should nicely report an error message.

* Sync from OpenBSD:

* Add flags for 1+2 and 2 arguments to the generic target code, use it for cmd-set-environment/option/window-option and remove the generic options parsing.

* +.

* Update.

* Sync OpenBSD patchset 241:

* Sync OpenBSD patchset 240:

* Sync OpenBSD patchset 239:

* Sync OpenBSD patchset 238:

* No arguments are the same as new-session and this requires the environment to be sent, so set that flag too when argc == 0.

* Reset the attributes after drawing all or part of the screen, and reset the region before poll(2). This reduces (but does not eliminate) the chance of the attributes not being normal if tmux is disconnected without warning (ssh ~., reboot from inside, etc).

* Use the right source and destination lines in grid_duplicate_lines.

* some minor tweaks; ok nicm

* Missing options are not illegal.

* Sync OpenBSD patchset 237:

* Sync OpenBSD patchset 236:

* Nuke dead variable here as well, in accordance to OpenBSD patchset 235.

* Sync OpenBSD patchset 235:

* Sync OpenBSD patchset 234:

* Sync OpenBSD patchset 233:

* Sync OpenBSD patchset 232:

* Update.

* Sync OpenBSD patchset 231:

* Sync OpenBSD patchset 230:

* Update.

* Sync OpenBSD patchset 229:

* Sync OpenBSD patchset 227:

* Sync OpenBSD patchset 226:

* Sync OpenBSD patchset 225:

* Sync OpenBSD patchset 224:

* Sync OpenBSD patchset 223:

* Sync OpenBSD patchset 222:

* Sync OpenBSD patchset 221:

* Sync OpenBSD patchset 220:

* Sync OpenBSD patchset 219:

* Sync OpenBSD patchset 217:

* Sync OpenBSD patchset 216:

* Make similar (untested) changes to the OS-dependent code for FreeBSD, and NetBSD in accordance to OpenBSD patchset 214.

* Sync OpenBSD patchset 214:

* zap trailing whitespace;

* Update.

* Sync OpenBSD patchset 213:

* Make it build on the remaining operating systems, due to the changes introduced on OpenBSD patchset 211.

* DragonFlyBSD, FreeBSD, and NetBSD do not need vis.c.

* Add unvis(3) compat stuff.

* Do not include vis.h directly, since it's OS-dependent.

* Sync OpenBSD patchset 211:

* Minor language tweaks, change which key bindings are summarised.

* Nuke a dead variable found with clang and an unused declaration with lint.

* Move the key bindings section to near the start, mention attach/detach in the first section, and another couple of tweaks. Based on a diff from Theo.

* Sync OpenBSD patchset 210:

* Don't leak in the (rare) case of an invalid command at the end of a file not terminated by a \n.

* Use a temporary variable for strdup of const char *.

* Infrastructure and commands to manage the environment for processes started within tmux.

* Tidy function a little by using a temporary variable.

* Fix typo and add ref to infocmp.

* Clarify 256 colours entries from Chris Jones, tweaked by me.

* Options to set the colours and attributes for status-left/-right. From Thomas Adam, thanks.

* Handle ttyname(3) failure better.

* Update.

* Add a flags member to the grid_line struct and use it to differentiate lines wrapped at the screen edge from those terminated by a newline. Then use this when copying to combine wrapped lines together into one.

* Change the way the grid is stored, previously it was:

* If there is an error in the configuration file, don't just exit(1) as this can cause the client to hang. Instead, send the error message, then mark the client as bad and start a normal shutdown so the server exits once the error is written.

* Move introduction section up into description. From jmc.

* This file is not kept up to date and too many people are using it as-is then finding tmux key bindings missing. Trim it down and make it clear this is an example only.

* Using the alternative screen (smcup/rmcup) should also preserve the current colours and attributes. Found thanks to a report from Taylor Venable.

* tweak INTRODUCTION; from nicm and myself

* Sync up tmux.1 from OpenBSD.

* tmux no longers sends init strings so this is no longer relevant.

* Clear the codes array earlier as tty_term_free could be called on error.

* +IRC channel.

* Correct usage of termcap.

* If colours are not supported by the terminal, try to emulate a coloured background by setting or clearing the reverse attribute.

* +PuTTY ACS from Mike Putnam.

* Tweak FAQ to mention default-terminal.

* Add a -a flag to set-option and set-window-option to append to an existing string value, useful for terminal-overrides.

* restructure the layout of this page, moving the commands into various subsections; lots of tweaks to come on the text

* Show the bell/activity/current status and the window title in the choice list.

* Check for "UTF8" as well as "UTF-8" in LANG etc as it seems this may also appear.

* clean up some macro abuse in the commands section;

* Split the comparison into a function to make this code smaller and more understandable.

* Don't try to free old string values (and crash) when they are overridden unless they were actually found in the source terminal description. Reported by jmc.

* tweak previous;

* Add a terminal-overrides session option allowing individual terminfo(5) entries to be overridden. The 88col/256col checks are now moved into the default setting and out of the code.

* Fix checking of setupterm(3) error codes. While there include the name of the terminal type causing the error where relevant. ok nicm@.

* Sync OpenBSD patchset 209:

* Sync OpenBSD patchset 208:

* Add some lines.

* Part of last commit, remove -lcurses.

* On SUSE Linux compatibility is something that only happens to other people, so on Linux use -lncurses instead of -lcurses.

* Some Linuxes/gcc versions hide LLONG_MAX/MIN unless the compiler is told to use C99, so use -std=c99 on Linux.

* Pass the ACS border characters through tty_get_acs so they appear correctly on terminals which don't use the standard set.

* Some stuff that is done.

* Sync OpenBSD patchset 207:

* Update.

* Sync OpenBSD patchset 206:

* Sync OpenBSD patchset 205:

* Sync OpenBSD patchset 204:

* Sync OpenBSD patchset 203:

* Sync OpenBSD patchset 202:

* Don't leak when rollling buffers off when the paste buffer limit is reached.

* Sync OpenBSD patchset 201:

* Sync OpenBSD patchset 200:

* Plug some memory leaks.

* Sync OpenBSD patchset 199:

* Sync OpenBSD patchset 198:

* Sync OpenBSD patchset 197:

* Sync OpenBSD patchset 196:

* Sync OpenBSD patchset 195:

* Don't babysit people and let them try to load /dev/zero or (more useful) /dev/null if they want.

* Remove some dead code found by clang.

* tweak previous;

* Similar changes for server_msg_dispatch: use a switch instead of a lookup table and merge smaller functions inline.

* There aren't many client message types or code to handle them so get rid of the lookup table and use a switch, merge the tiny handler functions into it, and move the whole lot to client.c.

* Tell the server when the client gets SIGTERM so it can clean up the terminal properly, rather than just exiting.

* Merge pane number into the target specification for pane commands. Instead of using -p index, a target pane is now addressed with the normal -t window form but suffixed with a period and a pane index, for example :0.2 or mysess:mywin.1. An unadorned number such as -t 1 is tried as a pane index in the current window, if that fails the same rules are followed as for a target window and the current pane in that window used.

* new sentence, new line;

* Add a mode-mouse option to prevent tmux taking over the mouse in choice or copy modes.

* Add an additional heuristic to work out the current session when run from the command line. The name of all slave ptys in the server is known, so if the client was run on a tty, look for any sessions containing that tty and use the most recently created.

* Rename struct hdrtype to msgtype which is a better name and can be used even when struct hdr disappears.

* Taking account of the "s, 22 not 24 is the maximum length of #T in status-right to prevent the date being cut off.

* Sync OpenBSD patchset 194:

* Sync OpenBSD patchset 193:

* Sync OpenBSD patchset 192:

* Sync OpenBSD patchset 191:

* Sync OpenBSD patchset 190:

* Sync OpenBSD patchset 189:

* Sync OpenBSD patchset 188:

* Sync OpenBSD patchset 187:

* Sync OpenBSD patchset 186:

* Sync OpenBSD patchset 185:

* Sync OpenBSD patchset 184:

* Sync OpenBSD patchset 183:

* Make similar changes to the OS-dependent code for FreeBSD, and NetBSD in accordance to OpenBSD patchset 182.

* Sync OpenBSD patchset 182:

* Add PASS_MAX for glibc.

* Sync OpenBSD patchset 181:

* This stuff is done.

* Final pieces of mode key rebinding: bind-key and unbind-key now accept a -t argument to modify a table.

* Accept and print "Enter" and "Escape" for keys rather than C-m and C-[.

* Next step towards customisable mode keys: build each default table of keys into a named tree on start and use that for lookups. Also add command to string translation tables and modify list-keys to show the the mode key bindings (new -t argument).

* If select-layout is not given an argument, repply the last layout used in the window, if any.

* Remove an unused entry in the mode keys command enum and rename MODEKEYCOPY_QUIT to _CANCEL to match the others.

* Change mode key bindings from big switches into a set of tables. Rather than lumping them all together, split editing keys from those used in choice/more mode and those for copy/scroll mode.

* Get rid of empty mode_key_free function.

* Add a key to delete to end of line at the prompt (^K in emacs mode, C/D in vi).

* Draw UTF-8 characters under the selection correctly.

* Change previous-word behavior to move to the beginning of the word (matches emacs and vi). From Kalle Olavi Niemitalo.

* Detect backspace by looking at termios VERASE and translate it into \177 (which matches screen's behaviour if not its termcap/terminfo entry). The terminfo kbs cap is often wrong or missing so it can't be used, and just assuming \177 may be wrong.

* Calculate the space available for the prompt buffer and the cursor position correctly, and make it work when the screen is not wide enough.

* Go to the next if the current best process is replaced, don't keep comparing it with itself. Also fix process name comparison.

* Add a couple of items, and wrap lines.

* Make all messages sent between the client and server fixed size.

* Sync OpenBSD patchset 180:

* Sync OpenBSD patchset 179:

* Sync OpenBSD patchset 178:

* Sync OpenBSD patchset 177:

* Sync OpenBSD patchset 176:

* Sync OpenBSD patchset 175:

* Sync OpenBSD patchset 174:

* Add some more bits.

* +another couple of items.

* +.

* Set the active pane when respawning a window - fixes problems when respawning a window with multiple panes.

* Screenshot with more ACS love.

* Add.

* Use the full range of ACS line drawing characters to draw pane borders, including intersections.

* cmd_find_index should return -2 on error.

* Simplify screen redrawing by drawing the border and background together rather than border separately, and consolidating all the drawing characters into one string.

* Accept lowercase c- and m- prefix as well as C- and M-.

* Permit commands to be bound to key presses without the prefix key first. The new -n flag to bind-key and unbind-key sets or removes these bindings, and list-key shows them in []s.

* up-pane and down-pane no longer auto-repeat; update the description of repeat-time accordingly. ok nicm@

* Sync OpenBSD patchset 173:

* Sync OpenBSD patchset 172:

* Sync OpenBSD patchset 171:

* Revert previous per OpenBSD's patchset 170.

* Sync OpenBSD patchset 169:

* None of the server message functions return anything but 0, so make them all void.

* Tidy client message return slightly: convert flags into an enum, and merge error string into struct client_ctx as well.

* Redraw after starting selection to correctly remove any existing selection.

* Revert r1.5, I don't like it, new sessions should start off identically - with the defaults.

* C-d is delete as well in emacs mode.

* Sync OpenBSD patchset 168:

* Sync OpenBSD patchset 167:

* Sync OpenBSD patchset 166:

* Sync OpenBSD patchset 165:

* Sync OpenBSD patchset 164:

* Sync OpenBSD patchset 164:

* Sync OpenBSD patchset 162:

* Sync OpenBSD patchset 160:

* Both of cmdclient and curclient CAN be NULL - if the command is executed from the configuration file. In this case, attach-session can't do much, and new-session should just assume -d.

* If there is a current session, use its default path and working directory for the initial window when creating a new session.

* Pass a set of flags into client_init rather than just a start_server variable. Only one flag now but more to come later.

* window_add_pane cannot fail, so remove the unused cause argument and don't bother to check for a NULL return.

* Tidy the target parsing code a bit and correct the behaviour so that as before a string with no colon as a target window is first looked up as a window then as a session, noted by Iain Morgan.

* Some more TODO list items that are done.

* Add a couple of notes so I don't forget.

* tty_write is relatively short and the only function left in tty-write.c so move it into tty.c.

* More tty code tidying: move the saved cursor/region position (from before the screen was updated) out of struct screen and into struct tty_ctx.

* Update.

* Sync OpenBSD patchset 159:

* log_debug3 no longer exists, change the sole use in GRID_DEBUG to log_debug2.

* enum tty_cmd is only used as an index into the array of command function pointers, so remove it and use the function pointers directly to represent themselves.

* Sync OpenBSD patchset 158:

* Sync OpenBSD patchset 157:

* Sync OpenBSD patchset 156:

* Sync OpenBSD patchset 155:

* Sync OpenBSD patchset 154:

* Change GRID_DEBUG to use log_debug2 since log_debug3 was removed.

* Sync OpenBSD patchset 153:

* Restore $Id$.

* Sync OpenBSD patchset 152:

* There are relatively few arguments to tty_cmd_* functions now, so tidy them up by using a struct rather than hiding everything with varargs.

* Sync OpenBSD patchset 151:

* tty_cmd_raw is only used once, for raw UTF-8 output, so rename it to tty_cmd_utf8character and eliminate the size argument.

* OpenSolaris ioctl(TIOCSWINSZ) appears to be broken and can return EINVAL here despite sx, sy and fd being fine (an fcntl on the fd succeeds). No problems on other platforms so ignore the error under #ifdef __sun__.

* Adjust field width to fit longest key when listing.

* Remove leftover debug logging of password.

* Make some functions which return unused values void (mostly found by lint) and tweak a redundant expression in window_pane_set_mode.

* Nix a few unused attributes on arguments which are no longer unused.

* Remove a couple of unused functions and fix a type ("FALLTHOUGH"), found by lint.

* __progname is not const, pointed out by deraadt.

* Tidy up keys: use an enum for the key codes, and remove the macros which just wrap flag sets/clears/tests.

* Sync OpenBSD patchset 150:

* Include .depend in GNUmakefile since GNU make does not include it automatically.

* No paths.h in cmd.c; add _PATH_DEV for Solaris.

* Update.

* Now that #P could be in the status line, flag it for redraw when the active pane changes.

* Sync OpenBSD patchset 149:

* Update.

* Sync OpenBSD patchset 148:

* Sync OpenBSD patchset 147:

* Sync OpenBSD patchset 146:

* Tweak unbind-key language very slightly.

* Sync OpenBSD patchset 145:

* Sync OpenBSD patchset 144:

* Sync OpenBSD patchset 143:

* Sync OpenBSD patchset 142:

* Display the number of failed password attempts (if any) when the server is locked. From Tom Doherty.

* Add a status-justify option to allow the window list in the status line to be positioned at the left, centre, or right.

* New options, window-status-current-{fg,bg,attr}, to set the fg, bg and attributes with which the current window is shown in the status line. From Johan Friis, thanks.

* Kill some dead stores and fix a null pointer deref, found by clang.

* Move the offsets as well when swapping panes.

* With gcc4, turn off unnecessart pointer sign warnings.

* Add three new session options: visual-activity, visual-bell, visual-content. If these are enabled (and the monitor-activity, bell-action and monitor-content options are configurated appropriately), when activity, a bell, or content is detected, a message is shown.

* tweak previous;

* Change a couple of screenshots which had screen in them now I've got rid of screen on that box too :-).

* Improved layout code.

* Add a -k flag to unlink-window which makes it behave the same as the old kill-window - if a window is linked into only one session it unlinked and destroyed.

* Add three new session options: visual-activity, visual-bell, visual-content. If these are enabled (and the monitor-activity, bell-actio and monitor-content options are configurated appropriately), when activity, a bell, or content is detected, a message is shown.

* Make it so using kill-pane to destroy the last pane in a window destroys the window instead of being an error.

* When resizing a screen smaller in alternate screen mode, all the lines needed could be consumed by deleting from the bottom, leaving none to be removed from the top. In this case, don't call grid_view_delete_lines with ny of 0 as this is incorrect and causes a bounds check to fatal error if built with -DDEBUG.

* Tidy up new-session and attach-session and change them to work from inside tmux, switching the current client to the new or requested session.

* Remove a duplicate key binding, and turn off autorepeat for up/down as it is kind of annoying by default.

* If -u is specified or UTF-8 is otherwise detected when the server is started, enable the utf8 and status-utf8 optons. While here, note in the man page that the server is started with the first session and exits when none remain.

* Make it so using kill-pane to destroy the last pane in a window destroys the window instead of being an error.

* - New command display-message (alias display) to display a message in the   status line (bound to "i" and displays the current window and time by   default). The same substitutions are applied as for status-left/right. - Add support for including the window index (#I), pane index (#P) and window   name (#W) in the message, and status-left or status-right. - Bump protocol version.

* When resizing a screen smaller in alternate screen mode, all the lines needed could be consumed by deleting from the bottom, leaving none to be removed from the top. In this case, don't call grid_view_delete_lines with ny of 0 as this is incorrect and causes a bounds check to fatal error if built with -DDEBUG.

* When resizing a screen smaller in alternate screen mode, all the lines needed could be consumed by deleting from the bottom, leaving none to be removed from the top. In this case, don't call grid_view_delete_lines with ny of 0 as this is incorrect and causes a bounds check to fatal error if built with -DDEBUG.

* - New command display-message (alias display) to display a message in the   status line (bound to "i" by default). - Add support for including the window index, pane index, and window name   in status-left, or status-right. - Bump protocol version.

* Update TODO.

* Changed the wrong thing here.

* Tidy up new-session and attach-session and change them to work from inside tmux, switching the current client to the new or requested session.

* Remove a duplicate key binding, and turn off autorepeat for up/down as it is kind of annoying by default.

* If -u is specified or UTF-8 is otherwise detected when the server is started, enable the utf8 and status-utf8 optons. While here, note in the man page that the server is started with the first session and exits when none remain.

* Stupid cvsps.

* A similar for fix for window_choose: don't rely on the callback always being called to free data, have a separate free callback and call it from the mode cleanup code.

* Oops, it is always a good idea to get arguments the right way round.

* Memory could be leaked if a second prompt or message appeared while another was still present, so add a separate prompt free callback and make the _clear function responsible for calling it if necessary (rather than the individual

* Remove some duplicate code that was causing the status line to be redrawn even when it hadn't changed.

* Fix arguments to switch-client.

* Typo in grid_duplicate_lines (sy for dy) causing it to write into the wrong place when copying UTF-8 data. Found by Dan Colish.

* Oops, it is always a good idea to get arguments the right way round.

* A similar for fix for window_choose: don't rely on the callback always being called to free data, have a separate free callback and call it from the mode cleanup code.

* Memory could be leaked if a second prompt or message appeared while another was still present, so add a separate prompt free callback and make the _clear function responsible for calling it if necessary (rather than the individual prompt callbacks). Also make both messages and prompts clear any existing when a new is set.

* Remove some duplicate code that was causing the status line to be redrawn even when it hadn't changed.

* Fix arguments to switch-client.

* Update TODO.

* Typo in grid_duplicate_lines (sy for dy) causing it to write into the wrong place when copying UTF-8 data. Found by Dan Colish.

* Typo in grid_duplicate_lines (sy for dy) causing it to write into the wrong place when copying UTF-8 data. Found by Dan Colish.

* Improved NetBSD current-process detection from Roy Marples.

* Make status_message_set a variadic printf-like function. No functional change - helpful for a couple of things coming soon.

* Return -1 not NULL on error, pointed out by Roy Marples.

* Add a -k flag to unlink-window which makes it behave the same as the old kill-window - if a window is linked into only one session it unlinked and destroyed.

* The man page says that kill-window removes the window entirely, unlinking it from any sessions. In fact the implementation only affected the current session, making it the same as unlink-window but destroying the window if it was linked into only one session (unlinkw gives an error). Change the behaviour to match what it documented and was originally intended.

* Having to update NSETOPTION/NSETWINDOWOPTION when adding new options is a bit annoying and it is only use for iterating, so use a sentinel to mark the end of each array instead. Different fix for a problem pointed out by Kalle Olavi Niemitalo.

* Add main-pane-height to the options list (was missed before).

* For some reason when clearing status/message it was redrawing the entire client not just the status line. Changing this also revealed the check for the status line was incorrect when drawing the pane.

* Instead of faking up a status line in status_redraw, use the same code to redraw it as to draw the entire screen, just skip all lines but the last.

* Don't accept input to a window if it not visible.

* The scroll region cannot be one line only, ignore attempts to make it so.

* Get rid of the PANE_HIDDEN flag in favour of a function, and moving the decision for whether or not a pane should be drawn out of the layout code and into the redraw code.

* Make status_message_set a variadic printf-like function. No functional change - helpful for a couple of things coming soon.

* Return -1 not NULL on error, pointed out by Roy Marples.

* Add a -k flag to unlink-window which makes it behave the same as the old kill-window - if a window is linked into only one session it unlinked and destroyed.

* The man page says that kill-window removes the window entirely, unlinking it from any sessions. In fact the implementation only affected the current session, making it the same as unlink-window but destroying the window if it was linked into only one session (unlinkw gives an error). Change the behaviour to match what it documented and was originally intended.

* Having to update NSETOPTION/NSETWINDOWOPTION when adding new options is a bit annoying and it is only use for iterating, so use a sentinel to mark the end of each array instead. Different fix for a problem pointed out by Kalle Olavi Niemitalo.

* Add main-pane-height to the options list (was missed before).

* For some reason when clearing status/message it was redrawing the entire client not just the status line. Changing this also revealed the check for the status line was incorrect when drawing the pane.

* Instead of faking up a status line in status_redraw, use the same code to redraw it as to draw the entire screen, just skip all lines but the last.

* Escape ~, pointed out by tcunha.

* Don't accept input to a window if it not visible.

* The scroll region cannot be one line only, ignore attempts to make it so.

* Get rid of the PANE_HIDDEN flag in favour of a function, and moving the decision for whether or not a pane should be drawn out of the layout code and into the redraw code.

* Need time.h not sys/time.h for time(2).

* Need time.h not sys/time.h for time(2).

* Add backspace key to named keys.

* Whoops, chose the wrong one in a conflict. Revert.

* arg.c is no longer required.

* Don't need ncurses, use curses.

* Having fixed flags for single-character getopt options is a bit hard to maintain and is only going to get worse as more are used. So instead, add a new uint64_t member to cmd_entry which is a bitmask of upper and lowercase options accepted by the command.

* copy-mode and scroll-mode have a -u flag missing from usage, add it.

* Tidy up and improve target (-t) argument parsing:

* Support "alternate screen" mode (terminfo smcup/rmcup) typically used by full screen interactive programs to preserve the screen contents. When activated, it saves a copy of the visible grid and disables scrolling into and resizing out of the history; when deactivated the visible data is restored and the history reenabled.

* Missed this declaration in key bindings change. Whoops.

* Document the -k flag to new-window.

* Add a "back to indentation" key in copy mode to move the cursor to the first non-whitespace character. ^ with vi and M-m with emacs key bindings. Another from Kalle Olavi Niemitalo, thanks.

* Merge three copies of identical code to move the cursor x position into a single function, from Kalle Olavi Niemitalo.

* If it exist, load a system-wide configuration file /etc/tmux.conf before any user-specified one.

* Since tmux doesn't actually need ncurses, use -lcurses/curses.h instead. Pointed out by millert a while ago.

* Having fixed flags for single-character getopt options is a bit hard to maintain and is only going to get worse as more are used. So instead, add a new uint64_t member to cmd_entry which is a bitmask of upper and lowercase options accepted by the command.

* zap trailing whitespace;

* Expand leading tildes in arguments, from Tiage Cunha.

* copy-mode and scroll-mode have a -u flag missing from usage, add it.

* Update.

* Expand leading tilde on commands which expect a filename.

* Tidy up and improve target (-t) argument parsing:

* Update.

* Support "alternate screen" mode (terminfo smcup/rmcup) typically used by full screen interactive programs to preserve the screen contents. When activated, it saves a copy of the visible grid and disables scrolling into and resizing out of the history; when deactivated the visible data is restored and the history reenabled.

* Update TODO.

* Missed this declaration in key bindings change. Whoops.

* Document the -k flag to new-window.

* Creating a key binding which replaces itself (such as "bind x bind x lsw") frees the command list bound to the key while it is still being executed, leading to a use after free. To prevent this, create a dead keys list and defer freeing replaced or removed key bindings until the main loop when the key binding will have finished executing.

* Limit the history to hlimit not hlimit - 1. This makes a history-limit setting of 0 work as expected.

* Add -r to the synopsis of the paste-buffer command, prompted by jmc.

* When pasting, translate \n into \r. This matches xterm and putty's behaviour, and makes emacs happy when pasting into some modes. A new -r (raw) flag to paste-buffer pastes without the translation.

* Copy was using the real line length which after resize can be larger than the screen width. When built with -DDEBUG, this made the grid bounds checking code kill the server. Restrict copying to the actual width.

* paste-buffer -d was not documented. From Kalle Olavi Niemitalo.

* Redraw the status line after renaming a session (it may contain the name).

* Don't send initialisation strings is1/2/3 (barely anything else does) and move smcup to the first and rmcup to the last sequences output to the terminal. This allows tmux to use the alternate screen (smcup/rmcup) when available.

* Add a default-terminal option to set the starting value of $TERM in new windows.

* Document display-time option which seems to have been missed.

* When the terminal size is reduced horizontally, don't truncate lines to the new width, so that if the same lines are later increased in size the content reappears.

* Stop in the right place so all the lines selected are copied. Reported by Kalle Olavi Niemitalo, thanks.

* Add a "back to indentation" key in copy mode to move the cursor to the first non-whitespace character. ^ with vi and M-m with emacs key bindings. Another from Kalle Olavi Niemitalo, thanks.

* Merge three copies of identical code to move the cursor x position into a single function, from Kalle Olavi Niemitalo.

* If it exist, load a system-wide configuration file /etc/tmux.conf before any user-specified one.

* Limit the history to hlimit not hlimit - 1. This makes a history-limit setting of 0 work as expected.

* Add -r to the synopsis of the paste-buffer command, prompted by jmc.

* Update TODO.

* When pasting, translate \n into \r. This matches xterm and putty's behaviour, and makes emacs happy when pasting into some modes. A new -r (raw) flag to paste-buffer pastes without the translation.

* Copy was using the real line length which after resize can be larger than the screen width. When built with -DDEBUG, this made the grid bounds checking code kill the server. Restrict copying to the actual width.

* Update TODO.

* paste-buffer -d was not documented. From Kalle Olavi Niemitalo.

* Redraw the status line after renaming a session (it may contain the name).

* Don't send initialisation strings is1/2/3 (barely anything else does) and move smcup to the first and rmcup to the last sequences output to the terminal. This allows tmux to use the alternate screen (smcup/rmcup) when available.

* Add a default-terminal option to set the starting value of $TERM in new windows.

* Document display-time option which seems to have been missed.

* When the terminal size is reduced horizontally, don't truncate lines to the new width, so that if the same lines are later increased in size the content reappears.

* Fix $Id$.

* New command, if-shell (alias if). Executes the tmux command in the second argument if the shell command in the first succeeds, for example:

* Fix $Id$.

* Cursor up and down should be limited by the scroll region (cuu should stop at the scroll region top if starting from below it and cud stop at the bottom if starting from above). Fixes another vttest test.

* Don't leak FILE * on malloc failure. From ivoire at users dot sourceforge dot net.

* Change inserting and deleting lines inside the scroll region to properly clear lines that should be inserted/deleted but not moved. Fixes problems with mutt reported by Brian Lewis, thanks.

* Tidy by removing unused argument from grid_view_{insert,delete}_line_region functions (currently don't fully work, this is to make fix easier).

* Fix two memory leaks when assigning shell variables in configuration file/command prompt. From Tiago Cunha.

* Update TODO list.

* Cursor up and down should be limited by the scroll region (cuu should stop at the scroll region top if starting from below it and cud stop at the bottom if starting from above). Fixes another vttest test.

* New command, if-shell (alias if). Executes the tmux command in the second argument if the shell command in the first succeeds, for example:

* Stop in the right place so all the lines selected are copied. Reported by Kalle Olavi Niemitalo, thanks.

* Don't leak FILE * on malloc failure. From ivoire at users dot sourceforge dot net.

* Change inserting and deleting lines inside the scroll region to properly clear lines that should be inserted/deleted but not moved. Fixes problems with mutt reported by Brian Lewis, thanks.

* Tidy by removing unused argument from grid_view_{insert,delete}_line_region functions (currently don't fully work, this is to make fix easier).

* Accidently deleted default-command.

* Bring spacing into line.

* Whoops, that shouldn't have been there.

* Fix $Id$.

* When reinitialising the screen, do not omit to clear the last line.

* Don't let ambiguous commands override an exact alias match: eg if commands "abc-1", "abc-2", "abc-3" exist and "abc-3" has the alias "abc", "tmux abc" should execute abc-3, not complain about the command being ambiguous.

* Rename the global options variables to be shorter and to make session options clear. No functional change, getting this out of the way to make later options changes easier.

* Handle empty or unset TERM correctly; also fix a fatal() message while here.

* When sending a "protocol mismatch" error message, tell the client to exit afterwards, otherwise it hangs.

* The fix for default-path (use target session options instead of global options) is required here as well, doh.

* Minor fix: look for default-path in the options for the specified session first rather than just the global options. From Brandon Mercer, thanks.

* Add a section summarising how options work, make the distinction between window and session options clearer, and fix the incorrect synopses and descriptions of show-options and show-window-options.

* When unlocking the server, don't try to clear the prompt on clients without a prompt (such as the one issuing the unlock request).

* Fix two memory leaks when assigning shell variables in configuration file/command prompt. From Tiago Cunha.

* When reinitialising the screen, do not omit to clear the last line.

* Just appending -l to $SHELL to create a login shell is wrong: -l is not POSIX, and some people may use shells which do not support it. Instead, make an empty default-command option mean a login shell, and fork it with a - in argv[0] which is the method used by login(1).

* Sync.

* Don't let ambiguous commands override an exact alias match: eg if commands "abc-1", "abc-2", "abc-3" exist and "abc-3" has the alias "abc", "tmux abc" should execute abc-3, not complain about the command being ambiguous.

* Rename the global options variables to be shorter and to make session options clear. No functional change, getting this out of the way to make later options changes easier.

* Handle empty or unset TERM correctly; also fix a fatal() message while here.

* When sending a "protocol mismatch" error message, tell the client to exit afterwards, otherwise it hangs.

* The fix for default-path (use target session options instead of global options) is required here as well, doh.

* Minor fix: look for default-path in the options for the specified session first rather than just the global options. From Brandon Mercer, thanks.

* Add a section summarising how options work, make the distinction between window and session options clearer, and fix the incorrect synopses and descriptions of show-options and show-window-options.

* This is not really important or major.

* Next will be 1.0.

* If using the default login shell (empty default-command), strip any - prefix.

* Change default_window_name to use window_default_command if the actual cmd is empty. From Josh Elsasser.

* Fix two copy/paste bugs: forbid zero-length buffers to prevent a fatal error when trying to paste them, found by me, and miscalculation of the start/end causing random fatal errors when copying in copy-mode, reported by sthen.

* Fix two copy/paste bugs: forbid zero-length buffers to prevent a fatal error when trying to paste them, found by me, and miscalculation of the start/end causing random fatal errors when copying in copy-mode, reported by sthen.

* Update.

* Solaris has no strcasestr.

* Don't see a reason for sys/cdefs.h here; remove it.

* $Id$.

* Move defines after includes to avoid multiple definition.

* Typo: bsdpoll.h -> bsd-poll.h.

* Change >| to rm/> as apparently Solaris /bin/sh doesn't like it.

* Try to make a bit more sense here.

* Comment FDEBUG and bump dist version.

* Changes for 0.9.

* Update with new UTF-8 environment variable information for 0.9.

* Using -l to specify a login shell is non-POSIX and causes problems with shells that do not support it. Instead, set an empty default-command to invoke $SHELL with - prefixed to argv[0], and make this the default setting.

* This file is not going to be used as much any longer, make a note.

* Update ready for 0.9

* When unlocking the server, don't try to clear the prompt on clients without a prompt (such as the one issuing the unlock request).

* Fix two errors with character/line insertion and deletion: the maximum number of characters which may be inserted or deleted is the screen width, not one less (and similarly for lines and height); and if characters or lines are deleted by moving the ones that follow, the space at the end needs to be cleared.

* $Id$.

* When unlocking the server, don't try to clear the prompt on clients without a prompt (such as the one issuing the unlock request).

* Fix $Id$.

* Don't try to page up with scroll-mode -u or copy-mode -u unless the mode was successfully changed - if already in a different mode, it would corrupt the mode data.

* Use gmtime_r so the current time isn't overwritten, the minute comparison works and the clock is actually updated. It was already used for lock-server but not here.

* Copy the 256-colour flag into the tty saved cell as well as the actual colour, otherwise colour 8 isn't reset.

* Add missing spaces before some alias closing brackets, otherwise they are shown in the wrong style.

* Fix two errors with character/line insertion and deletion: the maximum number of characters which may be inserted or deleted is the screen width, not one less (and similarly for lines and height); and if characters or lines are deleted by moving the ones that follow, the space at the end needs to be cleared.

* Don't try to page up with scroll-mode -u or copy-mode -u unless the mode was successfully changed - if already in a different mode, it would corrupt the mode data.

* Use gmtime_r so the current time isn't overwritten, the minute comparison works and the clock is actually updated. It was already used for lock-server but not here.

* Copy the 256-colour flag into the tty saved cell as well as the actual colour, otherwise colour 8 isn't reset properly.

* Add missing spaces before some alias closing brackets, otherwise they are shown in the wrong style.

* Whoops, revert.

* Remove some unused function declarations; no binary change.

* After logging (if enabled) is switched to file, there is no reason to keep stdin/stdout/stderr active, so dup them to /dev/null.

* After logging (if enabled) is switched to file, there is no reason to keep stdin/stdout/stderr active, so dup them to /dev/null.

* Remove some unused function declarations; no binary change.

* Set LC_ALL=C to stop i18n breaking gcc test.

* Apparently NetBSD's tcgetpgrp is good enough to use, so don't need to play complicated games, from Roy Marples.

* Status line fixes: don't truncate status-right now the length calculation is done for UTF-8, limit to the maximum length correctly when printing, and always print a space even if the left string is longer than the width available.

* Remove some dead assignments, found by sthen with clang.

* #ifndef nitems.

* Status line fixes: don't truncate status-right now the length calculation is done for UTF-8, limit to the maximum length correctly when printing, and always print a space even if the left string is longer than the width available.

* Also #ifndef nitems here, caught by Thomas Jeunet.

* Remove some dead assignments, found by sthen with clang.

* #ifndef nitems to avoid redefining it if it is already in a header.

* Update TODO.

* vis compat stuff.

* Start of portability update: bitstring.h.

* Lose -V.

* Skip 8 line diffs ($Id$ change only).

* Comparison script.

* libgen.h.

* More diff-to-OpenBSD reduction. Move a lot of compat stuff into compat.h.

* Whitespace and more syncing.

* Don't need linker magic anymore.

* No more xmalloc-debug.

* Fix rejects.

* Sync this properly.

* Restore $Id$ and add script to do so.

* If getcwd() fails, use the user's home directory, or /, instead of failing with an error.

* lines variable can be -1 (to be ignored), so should be signed. Found by lint.

* Remove error about using -L and -S together which was never displayed as logging wasn't yet enabled, was unnecessary, and contradicted the man page which says using -S will cause -L to be ignored.

* tmux doesn't and won't need syslog logging, so remove it and some other unused functions found by lint.

* Miscellaneous unused functions, including one which was basically a duplicate. Found by lint.

* Nuke unused buffer functions. Found by lint.

* Unused prototypes. Found by lint, no binary change.

* Unused variables. Found by lint, no binary change.

* Now that a UTF-8-capable puts function exists, use it for printing strings in choice/more modes - lines with UTF-8 now display properly in find-window results.

* Fix a type mismatch warning in assignment.

* Change find-window and monitor-content to use fnmatch(3). For convenience and compatibility, *s are implicitly added at the start and end of the pattern.

* Add a dedicated function to convert a line into a string and use it to simplify the search window function.

* Change to match xterm's resizing behaviour, including pushing lines into the history from the top when reducing vertical size and pulling them again when increasing size.

* Make remain-on-exit work again when there is only one pane left, which was broken sometime during the pane/layout changes. Reported/tested by Iain Morgan, thanks.

* Trying to predict the cursor position for UTF-8 output in the same way as for normal eight-bit output is wrong, separate it into a different function. Fixes spacing when mixing UTF-8 with some escape sequences, notably the way w3m does it.

* Constify utf8_width() function argument.

* If a pane is "zombified" (remain-on-exit flag), don't continue to queue key and mouse input for it (otherwise they are processed after respawn).

* LC_ALL overrides LC_CTYPE and LANG. Comment was correct but the code wrong. Pointed out by Hannah Schroeter, thanks.

* Terminate cwd buffer before running xstrdup on it.

* Check the first of LC_CTYPE, LC_ALL and LANG, rather than just the last, when trying to decide about UTF-8, and use strcasestr. Reported by Geert Hendrickx.

* strdup the input to putenv to avoid in one case passing a string that is later freed and in the other const strings.

* Call setproctitle earlier in the client, and include the socket name. Makes it easier to match client to server in ps/pgrep when using several servers.

* Print a better message than '(null)' if no command is specified ("tmux \;").

* Zero the password given to -U in the client as well.

* If the prompt is hidden or a password is sent with -U, zero it before freeing it.

* Implement the CBT (backward tab) sequence (\033[Z).

* Proper support for tab stops (\033H etc), using a bitstring(3). Makes another vttest test happy.

* Okay, so I screwed up when testing this, doh. Unbreak so that CAN/SUB actually do cancel the sequence, and tweak to make the code more clear.

* Oops, CAN and SUB should abort the sequence (return to first state), not remain in the same state.

* More input compatibility love. Support C0 within escape sequences, and the C0 control character VT (vertical tab, \013), which is treated as LF like VT102. Makes another vttest happy.

* Support insert mode by using insert character to shift the cells before writing as normal.

* Implement the DEC alignment test. With the last change this is enough for the first cursor test in vttest (in ports) to pass; it still shops a few more problems though.

* Fix some miscalculations when clearing to start of screen: the number of lines to the cursor is cy not cy - 1, and the current cursor cell should be included.

* Use vis(3) instead of handrolled function.

* Pass window titles through vis(1). <0x20 is dropped anyway by the input state machine but top-bit-set nonprintables could cause trouble, and they are neater like this anyway.

* Do not set the window title by default (make set-titles option default to off), wiping over the title is rude and annoying.

* New session option, status-utf8, to control the interpretation of top-bit-set characters in status-left and status-right (if on, they are treated as UTF-8; otherwise passed through).

* Add a UTF-8 aware string length function and make UTF-8 in status-left/status-right work properly. At the moment any top-bit-set characters are assumed to be UTF-8: a status-utf8 option to configure this will come shortly.

* Nuke unused pane flag.

* Cast char to u_char before passing to isalnum(). By ray

* remove unused flag; while here, make usage's output fit on 80-column displays.

* Use login shells by default.

* Don't leak memory if multiple -f flags are given. From ray

* Sync man page with OpenBSD.

* Add missing -a flag.

* When swapping pane positions, swap the PANE_HIDDEN flag as well, otherwise tmux crashes when trying to find the new active pane.

* Sync to OpenBSD: fixes from ray@.

* Use the pane flags not the window flags. Doh.

* diagflags for diags okay nicm@

* If getcwd() fails, use the user's home directory, or /, instead of failing with an error.

* lines variable can be -1 (to be ignored), so should be signed. Found by lint.

* Remove error about using -L and -S together which was never displayed as logging wasn't yet enabled, was unnecessary, and contradicted the man page which says using -S will cause -L to be ignored.

* tmux doesn't and won't need syslog logging, so remove it and some other unused functions found by lint.

* Miscellaneous unused functions, including one which was basically a duplicate. Found by lint.

* Nuke unused buffer functions. Found by lint.

* Unused prototypes. Found by lint, no binary change.

* Unused variables. Found by lint, no binary change.

* Remove some cruft from the Makefile.

* Now that a UTF-8-capable puts function exists, use it for printing strings in choice/more modes - lines with UTF-8 now display properly in find-window results.

* Fix a type mismatch warning in assignment.

* Change find-window and monitor-content to use fnmatch(3). For convenience and compatibility, *s are implicitly added at the start and end of the pattern.

* Add a dedicated function to convert a line into a string and use it to simplify the search window function.

* Change to match xterm's resizing behaviour, including pushing lines into the history from the top when reducing vertical size and pulling them again when increasing size.

* Make remain-on-exit work again when there is only one pane left, which was broken sometime during the pane/layout changes. Reported/tested by Iain Morgan, thanks.

* UTF-8 detection is broken on sparc64; disable until I get time to test it further.

* Trying to predict the cursor position for UTF-8 output in the same way as for normal eight-bit output is wrong, separate it into a different function. Fixes spacing when mixing UTF-8 with some escape sequences, notably the way w3m does it.

* tweak previous;

* Constify utf8_width() function argument.

* Mention LC_ALL, LC_CTYPE.

* Add some common config file examples to the quick start section.

* If a pane is "zombified" (remain-on-exit flag), don't continue to queue key and mouse input for it (otherwise they are processed after respawn).

* LC_ALL overrides LC_CTYPE and LANG. Comment was correct but the code wrong. Pointed out by Hannah Schroeter, thanks.

* Terminate cwd buffer before running xstrdup on it.

* Check the first of LC_CTYPE, LC_ALL and LANG, rather than just the last, when trying to decide about UTF-8, and use strcasestr. Reported by Geert Hendrickx.

* strdup the input to putenv to avoid in one case passing a string that is later freed and in the other const strings.

* Call setproctitle earlier in the client, and include the socket name. Makes it easier to match client to server in ps/pgrep when using several servers.

* Remove trailing newlines, spaces, and tabs.

* Print a better message than '(null)' if no command is specified ("tmux \;").

* Zero the password given to -U in the client as well.

* If the prompt is hidden or a password is sent with -U, zero it before freeing it.

* Implement the CBT (backward tab) sequence (\033[Z).

* Proper support for tab stops (\033H etc), using a bitstring(3). Makes another vttest test happy.

* Okay, so I screwed up when testing this, doh. Unbreak so that CAN/SUB actually do cancel the sequence, and tweak to make the code more clear.

* Oops, CAN and SUB should abort the sequence (return to first state), not remain in the same state.

* More input compatibility love. Support C0 within escape sequences, and the C0 control character VT (vertical tab, \013), which is treated as LF like VT102. Makes another vttest happy.

* zap trailing whitespace;

* Support insert mode by using insert character to shift the cells before writing as normal.

* Implement the DEC alignment test. With the last change this is enough for the first cursor test in vttest (in ports) to pass; it still shops a few more problems though.

* Fix some miscalculations when clearing to start of screen: the number of lines to the cursor is cy not cy - 1, and the current cursor cell should be included.

* Use vis(3) instead of handrolled function.

* Pass window titles through vis(1). <0x20 is dropped anyway by the input state machine but top-bit-set nonprintables could cause trouble, and they are neater like this anyway.

* Sync with private copy.

* Do not set the window title by default (make set-titles option default to off), wiping over the title is rude and annoying. Agreed by several.

* New session option, status-utf8, to control the interpretation of top-bit-set characters in status-left and status-right (if on, they are treated as UTF-8; otherwise passed through).

* Add a UTF-8 aware string length function and make UTF-8 in status-left/status-right work properly. At the moment any top-bit-set characters are assumed to be UTF-8: a status-utf8 option to configure this will come shortly.

* Add missing documentation for the -a flag used to move to next/previous window with alert.

* Add a section summarising the status line. There are quite a number of status line options, it is something many want to configure, and the meaning of some bits weren't really documented.

* undo a mistake found by sobrado;

* When swapping pane positions, swap the PANE_HIDDEN flag as well, otherwise tmux crashes when trying to find the new active pane.

* some cleanup; ok nicm

* Cast char to u_char before passing to isalnum().

* Recent code to try and detect if a terminal supports UTF-8 by printing to it fails spectacularly on (at least) sparc64, so disable it for now. Thanks to naddy and Josh Elsasser for help and testing.

* remove unused flag; while here, make usage's output fit on 80-column displays.

* sort options alphabetically.

* spawn login shells by default, adapt manpage bits as well. ok nicm@

* Don't access array[-1] if array is an empty string.

* Make code clearer: -       if (hdr->size > SIZE_MAX - 1) +       if (hdr->size == SIZE_MAX)

* Don't dereference NULL if buf winds up being empty. Can't happen right now according to NicM but better safe than sorry.

* Don't leak memory if multiple -f flags are given.

* Update the man page with some recent changes to the code:

* Whoops, didn't mean to add this.

* Import tmux, a terminal multiplexor allowing (among other things) a single terminal to be switched between several different windows and programs displayed on one terminal be detached from one terminal and moved to another.

* endpwent() is not required after getpwuid().

* +.

* Clear status line on incorrect password.

* Don't show real character under cursor when hidden. Doh.

* Reset activity time to avoid relock on -U.

* Now in base.

* Spacing.

* Update.

* Spacing.

* UPPER -> BIG, sort, and bump protocol version.

* stat(2) files before trying to load them to avoid problems, for example with "source-file /dev/zero".

* new layout plan

* Indentation.

* +.

* Try to guess if the window is UTF-8 by outputting a three-byte UTF-8 wide character and seeing how much the cursor moves. Currently tries to figure out if this works by some stupid checks on the terminal, these need to be rethought. Also might be better using a width 1 character rather than width 2.

* If LANG contains "UTF-8", assume the terminal supports UTF-8, on the grounds that anyone who configures it probably wants UTF-8. Not certain if this is a perfect idea but let's see if it causes any problems.

* - New window option monitor-content to search for a string in a window, and   highlight the status line if it matches. - To make this possible, the function cmd_find_window_search from   cmd-find-window.c had to be moved to window.c and renamed window_pane_search. - While there use three new functions in server.c to check for bell, activity,   and content, to avoid too much nesting.

* Note.

* (void).

* main-horizontal layout and main-pane-height option to match vertical.

* left-vertical -> main-vertical. Also update CHANGES/TODO.

* New option main-pane-width to set width of pane in left-vertical mode.

* manual -> manual-vertical.

* horizontal -> h, vertical -> v, to shorten some function names a little.

* Behave properly when resize not supported.

* Update TODO.

* manual -> manual-vertical.

* Clean up manual layout code:

* Fix comment.

* #undef everything in config.h. This is the only bit of the scripting work I am using now :-).

* +b on fopen.

* chmod +x configure

* Move some crap into the attic, and some other stuff into tools/.

* Move website stuff into its own directory.

* Move dist.mk to tools/.

* Use >|.

* Use a better variable name and allow the uname to be overridden.

* clean-all.

* clean-all target to clean configure stuff too.

* Use empty(), FreeBSD doesn't like ==.

* select-layout command and some key bindings.

* Recreate server socket on SIGUSR1, per SF feature request 2792533.

* putenv can be char *.

* Don't use -Wcast-qual and use explicit casts to shut gcc up in the few cases we can't avoid using a char *.

* +sfw for solaris too.

* Keys in status line (p in vi mode, M-y in emacs) to paste the first line of the upper paste buffer. Suggested by Dan Colish.

* Separate tmux target. Doh.

* PuTTY resizing from merdely.

* clear-history command.

* This is okay.

* Don't force wrapping with \n when asked, let the cursor code figure it out. Should fix terminals which use this to detect line breaks.

* It is HAVE_PTY_H, also add a cast to shut gcc up.

* HAVE_.

* Needs a VERSION.

* SunOS tweaks.

* +.

* Add distribution stuff back in.

* NetBSD has no strtonum so needs compat/.

* NetBSD tree.h has no RB_PREV.

* Use a variable for uname.

* print is redundant. Doh.

* Sprinkle the magic anti-GCC-suckage for *BSD as well.

* Move -lutil.

* Use the right osdep.

* install depends on all.

* Try to figure out if we are using gcc 4 and get rid of the stupid warning, while not breaking 3.x and 2.x...

* compat/bsd-poll.h now we are not doing -Icompat.

* Sort.

* Don't bother with this.

* Whoops, don't use the name of the rule here now.

* Add a changes entry.

* Two more to ignore.

* $(PROG) is gorn.

* cmake build files. I wrote these but then decided to keep the cleanup (getopt/HAVE_*) changes but add a manual configure script and clean up the makefiles instead. Can always be resurrected if necessary.

* Everything supported has working vsnprintf.

* Rename all feature flags to HAVE_* and move out of makefiles into a configure script which must be run before building.

* Bye-bye nonworking IRIX, can be rescued from the attic if ever needed again.

* Use getopt.c from openssh rather than OpenBSD's getopt_long.

* Bye-bye META.

* Works fine, escaping was the issue.

* Spacing.

* RB_INSERT returns &item if already exists, so use that rather than doing a check beforehand.

* Space trimmage mega-diff.

* This should be fixed by previous commit.

* Region can reset cursor to 0,0 - bad if there is an offset. So sort out region before cursor.

* Use ACS for line drawing characters.

* Only worry about complete seconds for status line update. Also reduce poll interval and de-magic-number it.

* Support "neww; neww" as well "neww ; neww".

* previous-layout command.

* Use a (pre)randomised binary tree for UTF-8 character widths. Probably overkill but meh.

* static const.

* Display the layout name in window lists.

* DOH.

* Indentation.

* cvs add is often a good move.

* Merge resize-pane-{up,down} into resize-pane.

* Oops, revert - need u_char.

* Don't need cp.

* This should be fixed now.

* Apply the make magic wand to pick an osdep-*.c file rather than using ifdefs.

* /* $Id$ */

* tmux doesn't care about setres[ug]id.

* getopt_long.c not getopt.c

* Solaris doesn't have TAILQ_REPLACE yet :-(.

* Don't need all this %p stuff anymore really.

* Some tweaks for Solaris. Get rid of vis.* in favour of a small replacement function.

* Ignore tmux*.out as well.

* Use a u_char so top-bit-set update the cursor as well.

* + item.

* Ignore del too.

* Simplify the code by using the generic _target functions.

* No TAILQ_REPLACE on NetBSD.

* Use cmd_prarg to include "s when necessary.

* Convert hidden flag to a full flags word for the status line and add a flag to accept after only one key. Use this so don't need to press enter after y/n for confirm-before.

* +=.

* Perform some black and midnight cpp witchcraft to get rid of GRID_DEBUG, to fix building with -DDEBUG on gcc2 platforms. From joshe.

* Missing Ar.

* Update commands, and options.

* - Add alias to the break-pane command. - s/Asks/Ask/ in the confirm-before command for consistency's sake.

* Avoid using the prompt history when the server is locked, and prevent any input entered from being added to the client's prompt history. From nicm.

* - confirm-before command. - Bound "&" and "x" by default to confirm-before "kill-window" and   confirm-before "kill-pane", respectively.

* Support NEL.

* Use the xenl terminfo flag to detect early-wrap terminals like the FreeBSD console. Many thanks for a very informative email from Christian Weisgerber.

* Note it.

* Gearing up for 0.9....

* Mouse supprot isn't so bad.

* 0.9 here we go.

* Ready for 0.8.

* Document panes stuff.

* Update NOTES.

* Document set-remain-on-exit.

* Document break-pane.

* Document status-keys.

* Move some bits about and add some other bits.

* Document -L and -8, fix synopsis.

* Document -r to bind key.

* Remove the right number of characters from the buffer when escape then a cursor key (or other key prefixed by \033) is pressed. Reported by Stuart Henderson.

* Add mailing lists.

* Update TODO; fix a comment; better screenshot.

* A flag missed.

* rotate-window command.

* +screenshot.

* 09.

* Treat flags properly.

* swap-pane command.

* I can haz screenshots.

* Some stuff is done.

* Update TODO.

* Don't continue to write into panes that are scheduled for redraw.

* Don't permit resizing except in manual mode.

* Change scroll/pane redraws to only redraw the single pane affected rather than the entire window.

* If redrawing the region would mean redrawing > half the pane, just schedule to redraw the entire window. Also add a flag to skip updating the window any further if it is scheduled to be redrawn. This has the effect of batching multiple redraws together.

* Fake warnx().

* - Allow switching to hidden windows (for active-only layout). - Don't update unnecessarily for other layouts when changing active pane doesn't matter.

* Only redraw screen when not hidden. Heh.

* Better errno, from joshe.

* Handle 0 panes better.

* Adjust mouse for x offset.

* Don't need to refresh layout here. Also don't redraw over status line.

* Tweak to CHANGES.

* Basic horizontal splitting and layout management. Still some redraw and other issues - particularly, don't mix with manual pane resizing and be careful when viewing from multiple clients; generally cycling the layout a few times will fix most problems. Getting this in for testing while I think about how to deal with manual mode.

* UTF-8 is now fine, and AIX works.

* 0.8.

* Update www.

* +UTF-8 fixed to CHANGES.

* Close .tmux.conf... DOH.

* FD_CLOEXEC more fds. Still one I can't find...

* More AIX tweaks.

* Update CHANGES.

* Missing \.

* AIX forkpty.

* Most of AIX support.

* Draw vertical line on the right when window size is limited.

* Er, i should be j and c should be u.

* UTF8_SIZE.

* Copy columns correctly.

* Only need to print this once...

* $Id$

* - Unbreak selection colouring. - Get UTF-8 check the right way round...

* Fix UTF-8 in c&p mode.

* Add UTF-8 to grid_compare..

* Include protocol version.

* 8 -> UTF8_SIZE.

* - Ignore padding when writing so copying the screen for copy-mode doesn't include extra characters. - Handle combined characters properly when the previous character is not UTF-8.

* Add some more to server-info.

* Update/reorganise.

* Better UTF-8 support, including combined characters. Unicode data is now stored as UTF-8 in a separate array, the code does a lookup into this every time it gets to a UTF-8 cell. Zero width characters are just appended onto the UTF-8 data for the previous cell. This also means that almost no bytes extra are wasted non-Unicode data (yay).

* _fill functions are no longer needed. Nuke them.

* Whoops. Missed a few changes.

* Step 2 of the Grand Plan To Make UTF-8 Better.

* Now unused variable.

* struct grid_data -> struct grid. Stage 1 of the Grand Plan To Make UTF-8 Better.

* +.

* Key repeating is now a property of the key binding not of the command. Repeat is turned on when the key is bound with the -r flag to bind-key. next/previous- window no longer repeat by default as it turned out to annoy me.

* Clear using ED when redrawing the screen. I foolishly assumed using spaces would be equivalent and terminals would pick up on this, but apparently not. This fixes copy and paste in xterm/rxvt.

* Not const.

* const.

* Whoops. Didn't mean to commit this yet.

* Update TODO.

* Sockets in /tmp are now created in a subdirectory named, tmux-UID, eg tmux-1000. The default socket is thus /tmp/tmux-UID/default. To start a separate server, the new -L command line option should be used: this creates a socket in the same directory with a different name ("-L main" will create socket called "main"). -S should only be used to place the socket outside /tmp. This makes sockets a little more secure and a bit more convenient to use multiple servers.

* Use lstat. No change yet due to realpath call in tmux.c.

* Clear pollfds first.

* Update.

* Typo.

* * New session flag "set-remain-on-exit" to set remain-on-exit flag for new windows created in that session (like "remain-by-default" used to do). Not perfectly happy about this, but until I can think of a good way to introduce it generically (maybe a set of options in the session) this will do. Fixes SF request 2527847.

* Done.

* Support for 88 colour terminals.

* Unused variable.

* char not char *...

* break-pane command to split a pane off into a new window; bound to ! by default.

* CSR resets the cursor to the top-left. Reported by merdely.

* Log socket path so I can tell which tmux log is which.

* Initialise socket_path before parsing configuration file.

* Put socket path in $TMUX.

* Extra function keys from Dashing dashing at hushmail dot com

* Fix window choice mode, again.

* Sort out escape key handling so it works.

* Doh. Set a message when pane is too small rather than dying...

* This is now fixed.

* Don't segfault on lock when no sessions attached.

* Redraw selection properly.

* Update TODO.

* Check the right variable. Doh.

* Don't turn cursor off unless actually drawing something.

* Don't redraw status if it has already been redrawed as part of entire screen.

* Allow selection in vi mode.

* Reuse CPPFLAGS.

* INCDIRS after CPPFLAGS.

* Exclude NetBSD.

* Use CPPFLAGS.

* -err.h.

* Don't die on any error from fd.

* NetBSD flags.

* Don't leak string arguments and options.

* strdup() not necessary here.

* And another memory leak.

* Memory leak.

* Don't leak top line of history and status screen.

* Don't leak existing keys.

* These are fixed.

* Redo mode keys slightly more cleanly and apply them to command prompt editing. vi or emacs mode is controlled by the session option status-keys.

* Reset mode before adding text.

* Use the right row when calling RI.

* More TODO.

* Update TODO.

* Move status prompt/message init and teardown into status.c.

* Reset region before using CUD etc.

* Code tidying on my way to find tmux-in-tmux bug.

* Some extra emacs keys from Christian Weisgerber.

* Looking up argv[0] is expensive, so just use p_comm for the window name which is good enough. Also increase name update time to 500 ms.

* Update TODO.

* Reset name when clearing mode.

* Whoops. Build testing is a good idea...

* Never draw last character: stops stray scrolling sometimes should status line be disabled.

* Only use RI at the top of the screen.

* FreeBSD's console wraps lines at $COLUMNS - 1 rather than $COLUMNS (the cursor can never be beyond $COLUMNS - 1) and does not appear to support changing this behaviour, or any of the obvious possibilities (turning off right margin wrapping, insert mode). This is irritating, most notably because it impossible to write to the very bottom-right of the screen without scrolling. To work around this, if built on FreeBSD and run with a "cons" $TERM, the bottom-right cell on the screen is omitted.

* Update.

* Further unbreakage.

* Unbreak OS X.

* Emulate CSR with existing screen data on old/stupid terminals which don't support it.

* Lose unnecessary cursor restores, fix a couple of placement bugs and remove unused CR.

* Move sx,sy into tty rather than client.

* Don't debug this stuff.

* We are going to need the updated screen data for emulating the scroll region, which may involve changing the cursor position; however, the old (before redraw) cursor position is necessary for writing to the tty. So, save it before doing the redraw then update the internal screen then update the tty.

* Change tty_cmd_* to use a window_pane.

* Split most of tty_cmd_cell off to tty_cell. First step on making tty_cmd_* take a window_pane for later use emulating scroll region.

* Simplify screen/tty write code to eliminate function pointer which is now unnecessary (it always does the same thing).

* Update TODO.

* Don't redraw status line unless it has actually changed. Stops extraneous updates between clock/#() changes and doesn't require manual status-interval 0 when no updates are occuring.

* Update TODO.

* Zero to turn off updates.

* FAQ entry for automatic rename CPU use.

* Return -1 not NULL on error. Doh.

* Don't try to change the window name unless the pid of the process chosen has changed. Reduces CPU use.

* Increase name refresh interval to 250 ms to reduce CPU use.

* Tweak language.

* Typos.

* Test.

* Test syncmail III.

* Test syncmail II.

* Test syncmail.

* Handle "" properly.

* Don't close fds, so error message appears.

* Session name is now shown.

* Continue process if suspended.

* Move to 0.8.

* Remove senseless if statement.

* Don't accept NULL argv[0].

* Use both pgrp.

* More tweakery.

* automatic-rename added.

* Update.

* Comment. Missing OS X headers. +TODO.

* And again.

* Tweak FreeBSD too.

* Even better.

* Make process name guessing pick up SSTOP.

* Time for 0.7.

* Document automatic-rename.

* New sentence, new line.

* Document command sequences.

* Update cursor y on newline otherwise RI gets screwed up at y=0.

* Prevent weird output on OpenBSD (probably on other BSD's too?). From nicm.

* Update.

* - Document find-window. - Document suspend-client. - Document window-status-{attr,bg,fg}. - Options without arguments should be listed first. - s/Copies/Copy/.

* copy-buffer command.

* Update.

* Don't leak fd.

* - Document the -p and -l options in split-window. - Update {copy,scroll}-mode with the -u option. - While there sort options alphabetically.

* {message,status,mode}-attr added

* Support commands with right parenthesis. From nicm and me.

* Fix all rxvt*.

* Missing line break.

* Bye bye debugging.

* move-window bound to ., from joshe.

* Missing ;.

* Format.

* Tweak example.

* Set colour of window entry in status line based on window options.

* Support #(command) in status-left, and status-right.

* Ugh. Another inner loop variable reuse bug.

* Fix page down, again.

* Undo this and just shut lint up.

* Nuke debugging.

* Mouse in copy mode.

* * Better support for at least the most common variant of mouse input: parse it and adjust for different panes. Also support mouse in window/session choice mode. * Bring back the fancy window titles with session/window names: it is easy to work around problems with elinks (see FAQ).

* Exit properly when bas password.

* -u to start with screen scrolled up.

* Avoid warning.

* Tweak selection slightly.

* Close stdin/stdout/stderr.

* Handle cursor on/off better.

* Don't use NULL argv.

* Done!

* Allow status, mode and message attributes to be changed by three new options: status-attr, mode-attr, message-attr. A comma-separataed list is accepted containing: bright, dim, underscore, blink, reverse, hidden, italics, for example: set -g status-attr bright,blink

* +nitems.

* Don't reuse index variable.

* Be more clever about picking window name.

* Don't screw up UTF-8 combined characters.

* Update.

* Typos.

* load-buffer command

* Make the caller responsible for allocating memory for the paste buffer data (needed by the load-buffer command when dealing with big files since it'll prevent tmux from dying due to memory exhaustion). From nicm.

* +CHANGES.

* Missed a reverse.

* Use reverse so status line etc works in terminals w/o colour.

* Raise some limits to INT_MAX, SHRT_MAX is too low.

* Add -a properly.

* Fix this properly...

* Fix next/previous page. DOH.

* Better error messages for fork.

* Return 1 on error. Doh.

* Return -1 on error.

* Update TODO.

* Handle SIGTERM (and kill-server which uses it), a bit more neatly - tidy up properly and print a nicer message. Same effect though :-)

* new-window -k.

* Bring back -p and -l to splitw to specify height as % or nlines.

* Allow a selection in vi keys mode...

* Dont overload DEBUG, use FDEBUG.

* Darwin support for automatic-rename, from joshe.

* Whoops. Ic not It.

* Darwin too.

* Try to change the window title to match the command running it in. This is done by reading argv[0] from the process group leader of the group that owns the tty (tcgetpgrp()). This can't be done portably so some OS-dependent code is introduced (ugh); OpenBSD, FreeBSD and Linux are supported at the moment.

* Die properly with warning.

* Fix various silly problems with status line off.

* Use reverse rather than background which doesn't show up when terminal doesn't support colours.

* Bump protocol.

* Pass return code from _exec; allow command sequences to work from the command line.

* Start the first client with a special socketpair so it is already known to the server rather than playing silly games to get them synchronised before doing anything.

* Leftover label.

* Unbreak UTF-8.

* A couple of trivial optimisations.

* Reset tty saved data on resize.

* +.

* Use the right size.

* This is done.

* Don't die when run non-interactively. DOH.

* -a flags to next/previous window.

* Show tty flags too.

* find-window command.

* Remove object files in the compat directory.

* Add note about the syntax file.

* These should be u_int.

* FreeBSD needs compat/vis.c.

* Update with new features.

* Support command sequences separated by " ; ". Also clean up command printing.

* This is fixed.

* Show (attached) for attached sessions.

* suspend-client command and suspend client when ^Z key binding is used.

* Update for 0.7.

* Update.

* Tidy a few warnings.

* Don't use [4] since they are confusing and use the right size for memset. DOH.

* Actually remove the key binding from the tree when freeing it.

* xterm-keys added

* Add note about configuration breakage.

* Whoops, take out debugging.

* Don't die when last window either.

* Document xterm-keys

* choose-{session,window}, and repeat-time added

* Document repeat-time.

* Document choose-*.

* Update.

* Tweak a little bit.

* Add tabs.

* Example configuration with some screen bindings.

* Document command-prompt template string, and panes commands. From nicm and me.

* Don't die on kill-window.

* Some comments.

* Support #S #H in status-left/right.

* Reorder a bit.

* Document default-path, and update set/setw with the -u flag. From nicm and me.

* Recalculate sizes and don't redraw if unnecessary.

* Show number of panes.

* Be a bit more helpful.

* Whoops. Shut up gcc.

* Two new commands, choose-window and choose-session which work only when bound to a key and allow the window or session to be selected from a list.

* Style/add printflike.

* Increment retries.

* Retry properly when failed to connect.

* Update.

* Whoops, make this work properly.

* Darwin needs vis.c as well.

* Spell check.

* Update NOTES.

* Update NOTES.

* Prettify the key strings a little.

* Repeat for last-window is useless and annoying, take it off.

* Make last-window repeatable too; update my configuration backup, er, example.

* Split windows are done.

* Unbreak prefix as binding.

* Rename some flags I'm not happy about.

* Whoops, stray line.

* Rework the prefix-time stuff. The option is now call repeat-time and defaults to 500 ms. However, it only applies to a small subset of commands, currently: up-pane, down-pane, next-window, previous-window, resize-pane-up, resize-pane-down. These are the commands for which it is obviously useful, having it for everything else was just bloody annoying.

* Alt-up/down to resize by five lines.

* Update.

* switch-pane is now select-pane.

* up-pane and down-pane commands.

* Multiple window splitting.

* Using the rigth option name would help...

* Document -g.

* Disable lock-after-time by default.

* Turn off prefix-time for the moment, it is too annoying.

* kill-pane command.

* command-prompt now accepts a single argument, a template string. Any occurrences of %% in this string are replaced by whatever is entered at the prompt and the result is executed as a command. This allows things like (now bound by default):

* Reset command timer after this or it gets annoying.

* prefix-time option to allow multiple commands without additional prefixes.

* Make shift arrow keys work.

* More hacks for key handling.

* Update commands and options. While there, rename the keyword groups tmuxCmdsSet and tmuxCmdsSetw to tmuxOptsSet and tmuxOptsSetw.

* Handle ctrl/shift modifiers better.

* Update by documenting the following commands/options: - clock-mode, - lock-server, - server-info, - lock-after-time, - set-password, - clock-mode-colour, and - clock-mode-style.

* Tidy escape modifier (don't know how this worked before...).

* Tidy up control key parsing; add shift.

* Skip over now-invalid fds properly when a window is closed.

* Commands to resize panes; also a pane generic cmd, not used yet.

* Make the window pane code handle panes of different sizes, and add a -l and -p arguments to split-window to specify the new window size in lines or as a percentage.

* Use -O0 to prevent copy issues.

* Codes no longer needed.

* Window splitting. Two vertical panes fixed 50% each. This is a huge diff, still a couple of bugs (notably heap corruption somewhere causing segfault on exit).

* save-buffer command, from Tiago Cunha.

* Doh. Return the offset not the total.

* Correct comment.

* Updates.

* Add a couple of bits.

* Update slightly.

* Server locking. set-password and lock-server commands, plus automatic locking.

* Restore emulation of ich with insert mode.

* Whoops, didn't mean to commit that bit.

* Don't need cud.

* Linux bits.

* Pick up cwd from environment,.

* Clock mode.

* Oops, missed from btab commit.

* Update.

* Support btab.

* Comments no longer valid.

* Colour.

* Update.

* It does hit C-b.

* +tmux differences.

* Update.

* This applies to xterm too.

* Tweak some more.

* Tweak again.

* +FAQ to dist. Tweak.

* New FAQ.

* Use "%4d" instead of "  %2d".

* Change server-info format.

* +UTF-8-demo.txt

* vis functions for Linux.

* Trim spaces.

* Don't show newlines etc.

* Space for page down as well.

* Line up indexes.

* New command, server-info, to show server info + terminal details. Also tweak term stuff a bit.

* Build array of codes, stop using ncurses global variables and push ncurses crap into tty-term.c.

* Handle arrow key variants.

* Update key handling code. Simplify, support ctrl properly and add a new window option (xterm-keys) to output xterm key codes including ctrl and, if available, alt and shift.

* Give up the farce of caring about any keys aside from the ones in the screen termcap and the ones termcap doesn't handle that we hardcode manually.

* Utility files.

* Update CHANGES.

* When I wrote this I somehow forgot that the cursor could helpfully sit at sx (one character off the right of the screen), so there are several out-of-bounds issues. Add some additional checking.

* Don't die when out of bounds if non-DEBUG. Stops people hitting me when bugs kill their long-running sessions in release versions.

* Don't return NULL when retrieving a string that is too long.

* Tidy, +.

* -.

* Tweak.

* More man page updates from Tiago Cunha.

* Minor tidying; remove some old debugging messages.

* Introduce nitems() and use it; use bsearch.

* +comment.

* Whoops. New stuff goes at the top. Doh!

* +.

* Update TODO.

* Some options tidying/code shrinkage. Also add -u option to unset non-global options (allowing them to inherit), and some extra info.

* Buffers should be numbered from zero, from Tiago Cunha. Also fix paste -b.

* Updates from Tiago Cunha.

* Memory leak fix from Tiago Cunha.

* Stray debug message.

* +TODO +CHANGES.

* Don't die when backspacing off the edge of the screen, reported by David Chisnall..

* Complete option names as well.

* Prompt history.

* Whoops, add keys in the right place in the tree.

* Switch to splay tree for key bindings.

* Some tweaks found by LLVM courtesy of IcePic.

* Make home and end work.

* Add vim mode.

* Another duplicate.

* Fix C-space  and M-space.

* source-file command from Tiago Cunha.

* Don't bother waking up when nothing is attached.

* Work around lack of dch.

* Fix CLEANFILES.

* Should redraw 1 too.

* Don't segfault on last character.

* Tidy formatting.

* Import OpenBSD's getopt(3) to workaround broken glibc version.

* Even better, use cause.

* Make window options work the same was as session options, add mode-fg/mode-bg options, force -g for global on set/show/setw/showw/

* Kill warning.

* Ability to show window title on status line.

* +.

* Support dfly, from joshe.

* Fix build on sparc.

* Bump NSETOPTION.

* Update NOTES.

* Document mode keys

* Disable UTF-8 by default and add options to enable it.

* Keep stack of previous windows. Check for op (orig_pair) for default colours.

* y not x :-/

* Ooops. Check the right value.

* TAILQ -> SLIST.

* Don't try to redraw status line in prompt mode.

* Record intermediate for p2/s2 and fake up charset redefinition (some programs use it to switch character set).

* This breaks mutt.

* Alternative charset commands.

* Don't die if tcsetattr fails; fixes problems with cwm.

* Sync.

* I don't like this...

* Translate 256 colours to 16.

* Better OSC support for title setting, and support APC as well.

* Clear correct range.

* Clear status bar cell.

* Shut gcc up.

* UINT_MAX.

* Handle NULL properly.

* Style tweaks.

* Calculate y properly.

* SGR should not reset charset... don't know how this worked before...

* Make RIS also reset scroll region.

* Don't scroll screen when redrawing it.

* Trim.

* Fix stupid GNU getopt behaviour.

* time.h

* Done.

* Internal screen data rewrite for better 256 colour/UTF-8 support.

* Don't die on empty output strings, some terminfo entries have empty caps.

* Rename some functions.

* Split colour functions from screen.

* Initial UTF-8 support.

* Unbreak 256 colours when commands are combined.

* Style tweaks.

* Fix bold/non-bold mismatch in 256 colour mode by adding an extra 8 bits (ick) onto the attributes and using two of them to mark the fg and bg as 256 colours when necessary. If only it was 255 colours we would have one value for default and wouln't need this :-/.

* Comments.

* Get defaults the right way round.

* Get the colours right.

* Initial 256 colour support, lightly tested.

* Support OS X by moving to gettimeofday(2) and adding poll compat from OpenSSH.

* Also done.

* Done.

* Tidy logging and lose stdout hacks for _info.

* Lose ensure* stuff.

* This order is required for -static.

* Comment tweak.

* == 0 not == NULL

* Environment variables in configuration file.

* This idea (nested sessions) is fraught with too many problems to do it sanely; for example, in order not to be annoying, previous-window would have to work as expected (jump back to previous session) but what if you enter the same session from different parent sessions? What is the previous window? It would have to be tied to the client. There are other issues as well, and I don't see it as terribly useful (you can bind a switch-client command to any key anyway), so it is off the list.

* Spacing.

* Support keypad mode, and get rid of SCREEN_DEF*. Meant to commit these separately but forgot :-/.

* These flags are off by default.

* Handle kcursor+kkeypad (switch to OA from [A).

* Revert this, it breaks emacs.

* Support keypad. Change cursor key output.

* Memory leaks.

* Handle exact match properly.

* emacs mode keys tweaks.

* ^ for BOL too.

* Split emacs/vi keys into seperate tables.

* Rm UCLC LCUC which are unsupported on FBSD.

* long for pid.

* Protocol versioning, version is checked on identify message.

* Doh.

* 0.4 released.

* Fill in $TMUX.

* Set up environ properly.

* Don't copy default command, use NULL if specified to use previous command.

* Document zombie window stuff.

* Document buffer stuff.

* Sync use from priteau.

* Document next/prev word.

* Zombie windows, requested by Will Maier.

* Make previous-word stop at BOL.

* Fix scrolling.

* Document some commands.

* Handle bad session/client properly.

* C-u C-f from merdely.

* index prompt.

* Oops, forgot to commit move-window. Also add select-prompt to allow index to be typed.

* Allow use of alt keys. move-window command.

* Only lowercase key bindings.

* Tweak.

* Handle escaped keys properly and use M-f/M-b in copy mode.

* Next/previous word in copy-mode.

* Sync.

* Purge stale entries.

* Fix usage.

* list-commands command.

* Split internal status-colour into status-fg/status-bg options and lose workarounds in set-option stuff.

* IRIX fixes, sort of partly work.

* Unused variable.

* IRIX fixes thanks to Elias Pipping.

* Split options into a table to allow abbreviations.

* Missing time.h.

* timespecadd, fgetln headers.

* More missing bits from Solaris.

* Convert 0x70 -> 0x88.

* Don't be clever and translate default colour.

* If one match, add trailing space.

* Simple tab completion of option names in command prompt.

* Only set title if TERM looks vaguely okay. Also use newline for, er, newline rather than cursor_down.

* Whoops. Take out abort().

* Strip padding from terminfo strings.

* Update SRCS.

* Lose unnecessary flags on context.

* Sync.

* Use three dots not two.

* Don't show creation time, show more of buffer.

* Sync.

* Trim.

* buffer-limit option.

* Use the right flags argument for -d.

* Swap in new paste buffer code and add a couple more commands.

* Start of improved buffer code. Only set-buffer/show-buffer commands so far.

* Update.

* Freeze output when showing display line, fixes problems when no status line.

* Sync.

* Wake up every 100 ms instead of 500. Add note.

* display-time option to set message display time.

* Hide cursor with flag.

* Use a fake cursor to avoid problems with real one when activity happens in window.

* Update from Will Maier.

* status-lines -> status, prefix-key -> prefix

* Document command-prompt. Tweak TODO.

* Add ; too.

* Handle commented lines.

* Convert cfg.c to use cmd-string stuff.

* Handle empty strings as escape.

* No space after prompt.

* Command prompt for interactive commands.

* Editable prompt. Not used for anything yet. More to come.

* Missed update.

* Stupid ncurses.

* Show status messages without blocking the server.

* Trimify.

* Lose OFILL.

* Better modes for Solaris.

* O_NOCTTY.

* Solaris bits.

* More Solaris stuff. Use ttyname, use ncurses,h.

* More Solaris bits

* NO_ASPRINTF.

* More Sun OS crap.

* forkpty for Sun OS.

* compat/daemon.c

* Start of Solaris port.

* Missing NULL check.

* Set window title to current session. New options set-titles to disable.

* Fix a couple of bugs. Handle 0 width properly (w/o overflow), and draw left < in the right place.

* Display <> for more windows and highlight if activity.

* Sort options from Pierre Riteau.

* Remove aborts.

* Unused variable.

* To 0.4. Some other Makefile tweaks.

* Scroll status line to show windows off-screen.

* s can be NULL, check for it.

* Document show-window-options, some other tweaks.

* Document set-window-option, update example.

* Explanation of -t.

* Update TODO.

* Fix some stupid parser bugs, most notably forgetting to allocate space for \0.

* Informational messages on window option changes.

* Update NOTES, add known issues.

* Memory leak/missing init.

* Document show-options.

* show-window-options command.

* Add a couple of extra option types, and implement show-options command.

* I'm an idiot - it is start,len not start,end. Unbreak.

* New window options: force-width and force-height. This will force a window to   an arbitrary width and height (0 for the default unlimited). This is neat for   emacs which doesn't have a sensible way to force hard wrapping at 80   columns. Also, don't try to be clever and use clr_eol when redrawing the   whole screen, it causes trouble since the redraw functions are used to draw   the blank areas too.

* Clear blank area properly on redraw, and add a marker line below it.

* Don't die on empty strings.

* Update.

* Man page update from Will Maier, thanks.

* Fix usage, from Will Maier.

* Use existing termios and get rid of stuff we don't want rather than constructing a new one.

* Sync.

* Set socket mode +x if sessions attached.

* Read from pipe to allow client to confirm and socket be closed.

* Use a socketpair to synchronise server startup.

* Clear clients with flag too.

* Be more conservative about redrawing using flags.

* Extra unused.

* Make status-interval actually changeable.

* Partial tmux.1 update thanks to Will Maier.

* New flag: aggressize resize. Resize window when to size of smallest session for which it is _current_ window.

* Make server exit when last session dies. Also fix window check for status activity redraw.

* Some Linux fixes; some code tidying. Don't redraw status bar so often.

* ich emulation should maintain cursor position; bug spotted by merdely.

* Usage update from Will Maier.

* Don't use entry init since it may be dependent on key.

* Don't bork on link/swap the same window. Also extend comment.

* Final missing print function.

* Big reorganisation of command-line syntax.

* Print for the less easy commands.

* Easy bits of arg printing for list-keys.

* Man page fixes from  Tiago Cunha.

* Add a MANDIR variable, from Tiago Cunha.

* ifdef RB_PREV since 4.3 misses it too.

* Support binding 27-31.

* Revert attempt to fix stray updates, turns out it was clock :-/.

* vi keys from Will Maier.

* status is a toggle.

* Make monitor-activity w/o arguments toggle.

* Update.

* + comments.

* Disable/enable window activity monitoring with set-window-option command.

* Add activity monitoring, also invert items on taskbar which have activity.

* Bring select-window into line with everything else wrt -i.

* Don't crash when looking at NULL clients; also redraw everything on status change.

* Status bar left and right strings (set with status-left and status-right), and automatic update (at interval set by status-interval).

* Per-session configuration options.

* tree.h has RB_PREV now, yay!

* Update.

* It is too easy to create things in the same second; use a timespec instead.

* Allow -c anywhere -s was allowed.

* Allow fnmatch(3) on -s, and select newest session if multiple.

* If no command is specified, assume new-session.

* Quick and dirty kill-server command.

* Allow comments at EOL; count blank lines properly.

* Add a windowonly generic command and use it where appropriate. Also trim includes and unused.

* Quick man page update, also fix some usages and get rid of some CMD_KEY checks.

* Daemonise before loading configuration.

* start-server command to start server and nothing else.

* Last bits of basic configuration file. By default in ~/.tmux.conf or specified with -f. Just a list of tmux commands executed when the server is started and before and any session/window is created.

* Remove old examples, add new.

* Return error cause properly.

* Clear msgdata where it is unavailable.

* Move -s and -c down a level so handling them is the responsibility of the command (with some helper functions), rather than the top-level. This changes the action command syntax so that -s and -c must be after the command rather than before.

* Prepare TERM in buffer before sending; this allows size to be part of cmd and prevents it being split. This is the only place this happens so remove it from todo.

* +.

* Don't die if no dst window and -k to linkw.

* New command, send-keys, to send a set of keys.

* +.

* s/backgroun/background/

* Don't hang when window closes early; also add lots more debugging.

* Add limits.h

* Ugh, this should be backspace.

* Linux rxvt doesn't support parm_dch or delete_character.

* +.

* GNUmakefile fixes, from tobiasu.

* Upd.

* Some key tweaks, fix status bar to not rely on attr.

* This was wrong...

* Write status across entire line.

* Don't attempt to reset tty if it is dead.

* vi(1)

* Quick start section in man page.

* Sync with Makefile.

* Don't free twice when exiting.

* Actually incrementing the reference count would be nice.

* Yes, it is.

* Handle EOL properly when scrolled.

* Redraw position indicator regardless.

* Filling with the right attr should be done in screen-display.c.

* Use the current attr/colours for filling in new areas, this fixes the echo \\033[35\;46m\\033[2J bug.

* Bug fix; don't bail except on first line when printing.

* Workaround FreeBSD problems with deleting terms.

* Only close the tty during exit process and leave freeing it to when the socket is lost.

* Use the right function...

* Save term data in a linked list and reuse it.

* Fix charset stuff.

* Sync.

* Clean up after error properly.

* Restore termcap checks.

* Another redraw bugs.

* Screen debugging.

* Redraw buglets.

* set/reset mode window functions.

* Major reorganisation of screen handling.

* Don't try to access more windows if the session has been destroyed.

* Handle missing parm_*.

* Clear before resize.

* The tty code already stores attributes and doesn't modify them if unaltered, so the screen drawing code doesn't need to do so too. This probably also fixes bugs when switching screens where the actual tty attributes may not have been what the draw code (erroneously) expected.

* Sync .cvsignore.

* home and end appear to be find/select with rxvt...

* Better error messages with no server.

* Bah, doing it together doesn't seem to work portably.

* install -d, from tobiasu.

* Change window name on \ek...\e\.

* Turn mouse on/off as appropriate.

* Preliminary mouse support.

* Don't nuke charset flag on [0m. Also rename DRAWING -> CHARSET flag.

* Clear current line properly on clear eos.

* Flush data on tty open. Also reset colour before clearing line/screen.

* Same exit process applied to detach.

* Three-stage exit process so that [] message printing works on detach etc.

* Make reset actually work.

* Minor tweaks/missed bits.

* Big internal reorganisation to move tty control into parent.

* Code tidying.

* Shift history up by 10% at a time.

* This is better than disabling it.

* Erm, check the right cell... d'oh.

* Heh. 2300 not 1200.

* Rv EOL optimisation, it screws up selection.

* Add ^A && ^E to copy mode. Also use STDIN instead of STDOUT in a couple of places.

* Update SRCS, use -rdynamic in DEBUG case, lose openssl crap.

* Sync SRCS.

* Disable this optimisation since cursor can be updated by stuff outside.

* Oops, use correct y.

* Init local_log to -1.

* Redo output logging in local.c. Optimise line drawing.

* Support for VT100 graphics mode. Also lose some redundant checks.

* Always redraw requesting client on resize.

* Scroll region reset homes the cursor, so start at 0,0 when drawing. Also don't set region after DECRC.

* Reset before calling window_draw otherwise it'll have the wrong idea of the current state (since it copies from screen).

* Don't stop until after everything else done.

* Better words.

* Use screen_draw_* to write message, avoids leaving attribute changes around.

* Sync.

* Document modes, c/p etc.

* Better fix, handle delete-last-line properly.

* Don't crash when deleting lines at the end, fixes irssi.

* Inc region in debug msg.

* Mostly-complete copy and paste.

* Rm some redundant checks, prevent issues when data->size == 0.

* Forgot to commit.

* Show hlimit.

* Only show history size.

* Sync.

* history-limit option.

* Tidier code by moving mess into functions.

* Make C-space toggle. Fix sel on same line.

* Text selection with C-space.

* Partial copy mode. Currently does the same as scroll mode but using a cursor. Also fix bug where resizing would leave crap lying around.

* Mention quit key. Fix key style.

* Oops, missing one BACKGOUND.

* Split SCREEN_BACKGROUND flag into BACKGROUND/NOCURSOR in preparation for copy mode.

* Check for NULL clients.

* Don't count actual struct, don't count size twice.

* Cut memory consumption by only allocating lines when there is actually data on them, and only as much as the right-most data. Everything else is filled in at runtime.

* Free entire screen when destroyed.

* Document scroll-mode.

* Don't switch to scroll mode unless no other mode.

* The CLIENT_HOLD hack can go bye-bye.

* Sort out cursors with a new flag - BACKGROUND - for window modes. Free text on more exit.

* Scrollable win for command output.

* Redo screen.c functions to make them readable and more flexible. Make scroll mode only redraw waht it needs.

* Fast up/down line scroll.

* Horizontal history/scrolling.

* Wipe curw so last doesn't end up as deleted.

* Fix use-after-free.

* Move from the right place.

* Fix clear.

* Only redraw if offset changed.

* Use screen_* versions to avoid range checks (s->dy may be wrong), fix miscalculated free.

* Scroll data should be per-window not global.

* Initial history support.

* Damnit, wrong variable name..

* Oops, mustn't forget this.

* Mass screen.c rename/tidy. Add a actual size (ysize) as distinct from display size (now dx,dy). Move functions which work on the displayed area into screen-display.c and tidy. Use macros consistently when accessing screen data (may want to move everything about again later!). This the first step on the road to scrollback.

* Style: ry_* -> r*

* Fix a format string bug and sprinkle some printflikes.

* +index.html.in

* Work around Linux realpath breakage.

* Note about default colours.

* dist target.

* Oops, no $SESSION now.

* Sync.

* -k on link-window to kill dest window if it exists.

* Two-column display for on-line print.

* Ooops use ->client here, not cmdclient.

* Sync.

* switch-client command.

* Add -c option to specify client, and move detach/refresh to client rather than session.

* Check for scrolling when _cursor_ is inside region, not number of lines. Duh.

* Report available commands on ambiguous commands. Tidy TODO a bit.

* Sync.

* Use ctx->client/ctx->session inline instead of temporary variables which were being reused and causing confusion and problems.

* Tweak.

* This stuff should be Ic not Ar.

* Mention TERM=screen requirement.

* Force default colours if terminal supports it.

* clietns -> clients.

* Nuke stray ).

* Double-free on session destroy.

* Tweak.

* Erp, ^B not ^A.

* Finish off man page.

* realpath the socket path; also sprinkle some const.

* kill-window command.

* C-space is "^ " not "^@".

* Support tab.

* More tweaks.

* Tweak for Linux/reqd feature check.

* Key bindings section.

* Lcase is better.

* Fill in command list. Fix a couple of usages while doing this.

* Tweak language.

* Initial man page.

* -V option to show tmux version.

* rename-session command.

* Check for required term capabilities on start.

* Try write even if read gets signal, some other tweaks.

* Make it build/run on Linux.

* swap-window command.

* %u -> %d for indexes. Some lint fixes.

* Don't save/restore ry_*.

* unlink-window command. Also fix some u_int -> int problems.

* Redraw status bar on link.

* -d is better.

* link-window command to link a window into another session.

* Reorg window data structures. Add an intermediate data type (struct winlink) to hold index and make sessions hold a RB tree of them rather than a fixed array.

* has-session command.

* Use local var and pull screen out of ictx.

* Handle DSR for resize(1).

* Save restore attr.

* Free buffers properly.

* Close memory leaks.

* A couple of close-on-exec flags.

* Save/restore errno, free pfd buffer.

* Free/close windows properly.

* Don't need ttydefchars here.

* Sync.

* Lift last MAXNAMELEN limit on -s argument.

* Remove freed keys from array.

* Tweak a couple of variable names.

* FreeBSD lacks TTY_NAME_MAX.

* List client command.

* Show size.

* Return 0 on lost server so pkill works okay if scripted.

* Add default-command option and change default to be $SHELL rather than $SHELL -l. Also try to read shell from passwd db if $SHELL isn't present.

* Oops, 0 in wrong place.

* Don't send zero-length when we have a \0.

* Sync.

* time.h.

* Missing time.h.

* cctx should be 0.

* FreeBSD requires stdint.h.

* FreeBSD's util.h is libutil.h.

* Sync.

* Define __dead and __packed.

* Whoops, fix key bindings.

* -n is now -s on new-session.

* Kill window command. Nuke some backspace stuff.

* Add a bell-action option.

* Refresh session command.

* Other notes.

* Init signals here to pick up zombie.

* Tweak message.

* Extended NOTES ready for 0.1.

* Warn and bork on nested sessions ($TMUX exists).

* Accept colours as strings.

* send-prefix command.

* Change to show flag char rather than change colour on bell.

* Update.

* Case insensitive.

* set status, status-fg, status-bg.

* Handle \r\n at EOL properly.

* Mark windows in yellow on status line when bell.

* Sync.

* Simplify input.c - lose class table and use macros.

* More tweakifying.

* More updating.

* Tweak again.

* Plus status bar colour.

* Update.

* Have resize update a SESSION_UNATTACHED flag.

* Wrap lines properly.

* Sync.

* This is done.

* Clean up pause/exit mess with flags.

* More stuff TODO

* These are done.

* Handle NULL value properly.

* Lose command index enum in favour of runtime-calculated index.

* Lose usage and move it into the struct.

* -d option to attach. Also fix CC in Makefile and make it build with DEBUG again.

* Wrong size.

* Don't accept UINT_MAX as size if no clients/sessions.

* Sync.

* Don't resize if sx AND sy haven't changed. Also tweak some logging, and reset attrs after clear.

* Incomplete resize support.

* Sync.

* More TODO entries

* Added my tmux start script as an example (examples/start-tmux.sh)

* New sessions can now be given a command for their first window

* Fixed usage statement for new-window

* n not s.

* Sync.

* Oops, missed this file too.

* Whoops, FREE not FREEALL.

* Window attachment, malloc debugging, fix a segfault with no sessions.

* Nuke ?.

* Select window command.

* Rename window.

* Update & sync.

* set-option command to set meta.

* Key binding and unbinding.

* List keys command.

* Next/last/previous window, some other tweaks.

* New window command.

* Tweak error msgs.

* __progname in error msg.

* Rewrite command handling to be more generic. Not finished!

* Skip exec on cmds. Also use xmemstrdup where appropriate.

* Use exec on default shell command.

* Rename some bits.

* String/number arguments..

* Key binding, unbinding.

* xcalloc, otherwise prefix may be !0.

* Move command handling into the server and tidy up some bits.

* Sprinkle some const.

* Add profiling. Also some trivial optimisations to skip memcpying.

* Redraw client status lines on rename.

* Sync.

* Warn on ambiguous commands.

* Sync.

* Meta meta command.

* Reset scrolling region on exit.

* Tweaks, info on session choice.

* Updatet documentation

* Restore window title handling.

* Simple status line.

* Pass attributes around as flags rather than as a list of escape codes.

* Destroy screens properly.

* Don't move cursor when filling screen.

* Window info command.

* Sync.

* Missed this out before.

* Binary-only install target.

* Ooops, missed this one. Doh.

* Don't nuke last window on reselect of same window.

* Sync.

* Show the right windows in the list.

* Grr missed one.

* Whoooops. lower not upper.

* Whoops, forgot this.

* Dl/Il should follow scrolling region.

* Spc fix.

* Fix scrolling region checks.

* Handle MSG_ERROR.

* Sync.

* tmux new-session -d.

* Lose intermediate handling (unused). Change argument parsing to work properly over multiple buffers by saving a copy of the argument (we can't just save off/len since the buffer may vanish at any point).

* Write error messages for rename. Also tweak some error outputs, and fix -i.

* Sync.

* Nuke CLEAR_SCREEN/ENDOFSCREEN and assert scroll region when drawing. These will be reqd for status line(s).

* Pass bell through from any window.

* debug2 not debug.

* Window flags, currently only bell.

* Sync.

* Sort headers.

* New input parser via state machine.

* Added window renaming support (tmux rename)

* Sync.

* Terminate buffers properly.

* Add client_flush to flush output when transient commands are called.

* Sync.

* Erm, check the right length for short cmds.

* Retry connection with small timeout instead of sleep(10) for server start.

* Sync.

* Sync.

* Update changelog.

* Split list into ls/lsw.

* New session selection rules: 	- find by name if given 	- otherwise try current index from $TMUX 	- otherwise if only one session, use it 	- otherwise error

* Adjust $TMUX environ var to include session index, and don't compact session list on release. Also fix some argument types.

* -S for socket, -s for session.

* Extend op string and add potential for a single alias.

* Don't close stderr in log_close to make -v/-vv work again.

* Join oldest session if non specified. Fix errors.

* Restore list command.

* Whoops, these need to be terminated.

* These are no longer unused.

* Unlink and retry if server socket connect fails.

* Server function naming, still not happy with server stuff though.

* Restore -n, now after the command.

* Cleanup part II: split up client stuff and ops. More to come.

* Cleanup part 1: split up server.c.

* Window list with C-b W.

* Stop crashing when exiting windows.

* Comment.

* Reset s->window to NULL so it doesn't end up in s->last.

* Pass through backspace for now.

* Tweak ordering.

* Remove window before working out new current window; clear last window if necessary.

* Whoops. Other way round.

* session_last == -1 could still leave us with the window we are about to remove.

* Be more careful about destroying windows.

* Don't resize unless size changed.

* Move common command code into single function; from Maximilian Gass.

* META env var.

* Sync.

* Last window option.

* Reset ignored signals after forkpty.

* Wrap next/prev.

* Truncate array if last window is closed.

* Don't renumber on close.

* Sync.

* Upd.

* This ain't goin' nowhere fast.

* Set up signal handlers before fork so server has them too.

* Tweak comment; use sizeof.

* Scrolling region.

* Remove old sockets after error.

* session_flush can go bye-bye again.

* Flush even detached sessions.

* Consistent error message.

* Change command format.

* If a session is destroyed, safely kill all other clients attached to it.

* Don't try to upadte window after free.

* Use after free.

* Don't scroll screen until trying to write beyond limits.

* Don't accept zero titles.

* These aren't unused.

* Use $SHELL for new shell, if set.

* We use screen now, not ansi.

* Update to be more readable and hopefully lose memory problems.

* +.

* Tweak logging.

* Sync with fdm.

* Sync with fdm.

* Some code tidying, use macros in a few more places.

* And more.

* Log missing terminfo vars rather than dying.

* Initial import to CVS. Basic functions are working, albeit with a couple of showstopper memory bugs and many missing features. Detaching, reattaching, creating new sessions, listing sessions work acceptably for using with shells. Simple curses programs (top, systat, tetris) and more complicated ones (mutt, emacs) that don't require scrolling regions (ESC[r) mostly work fine (including mutt, emacs). No status bar yet and no key remapping or other customisation.

* Standard project directories initialized by cvs2svn.

CHANGES FROM 3.3a to 3.4

* Add options keep-last and keep-group to destroy-unattached to keep the last
  session whether in a group.

* Don't allow paste-buffer into dead panes.

* Add -t to source-file.

* Rewrite combined character handling to be more consistent and to support
  newer Unicode combined characters.

* Add basic support for SIXEL if built with --enable-sixel.

* Add a session, pane and user mouse range types for the status line and add
  format variables for mouse_status_line and mouse_status_range so they can be
  associated with different commands in the key bindings.

* Add flag (-o) to next-prompt/previous-prompt to go to OSC 133 command output.

* Add options and flags for menu styles (menu-style, menu-border-style) similar
  to those existing for popups.

* Add support for marking lines with a shell prompt based on the OSC 133 extension.

* Check for libterminfo for NetBSD.

* Add "us" to styles for underscore colour.

* Add flags (-c and -y) to change the confirm key and default behaviour of
  confirm-before.

* Use ncurses' new tparm_s function (added in 6.4-20230424) instead of tparm so
  it does not object to string arguments in c apabilities it doesn't already
  know. Also ignore errors from tparm if using previous ncurses versions.

* Set default lock command to vlock on Linux if present at build time.

* Discard mouse sequences that have the right form but actually are invalid.

* Add support for spawning panes in separate cgroups with systemd and a
  configure flag (--disable-cgroups) to turn off.

* Add a format (pane_unseen_changes) to show if there are unseen changes while
  in a mode.

* Remove old buffer when renaming rather than complaining.

* Add an L modifier like P, W, S to loop over clients.

* Add -f to list-clients like the other list commands.

* Extend display-message to work for control clients.

* Add a flag to display-menu to select the manu item selected when the menu is
  open.

* Have tmux recognise pasted text wrapped in bracket paste sequences, rather
  than only forwarding them to the program inside.

* Have client return 1 if process is interrupted to an input pane.

* Query the client terminal for foreground and background colours and if OSC 10
  or 11 is received but no colour has been set inside tmux, return the colour
  from the first attached client.

* Add send-keys -K to handle keys directly as if typed (so look up in key
  table).

* Process escape sequences in show-buffer.

* Add a -l flag to display-message to disable format expansion.

* Add paste-buffer-deleted notification and fix name of paste-buffer-changed.

* Do not attempt to connect to the socket as a client if systemd is active.

* Add scroll-top and scroll-bottom commands to scroll so cursor is at top or
  bottom.

* Add a -T flag to capture-pane to stop at the last used cell instead of the
  full width. Restore the previous behaviour by making it default to off unless
  -J is used.

* Add message-line option to control where message and prompt go.

* Notification when a when a paste buffer is deleted.

* Add a Nobr terminfo(5) capability to tell tmux the terminal does not use bright
  colours for bold.

* Change g and G to go to top and bottom in menus.

* Add a third state "all" to allow-passthrough to work even in invisible panes.

* Add support for OSC 8 hyperlinks.

* Store the time lines are scrolled into history and display in copy mode.

* Add a %config-error reply to control mode for configuration file errors since
  reporting them in view mode is useless.

* A new feature flag (ignorefkeys) to ignore terminfo(5) function key
  definitions for rxvt.

* Pass through first argument to OSC 52 (which clipboards to set) if the
  application provides it.

* Expand arguments to send-keys, capture-pane, split-window, join-pane where it
  makes sense to do so.

* Ignore named buffers when choosing a buffer if one is not specified by the user.

CHANGES FROM 3.3 TO 3.3a

* Do not crash when run-shell produces output from a config file.

* Do not unintentionally turn off all mouse mode when button mode is also
  present.

CHANGES FROM 3.2a TO 3.3

* Add an ACL list for users connecting to the tmux socket. Users may be
  forbidden from attaching, forced to attach read-only, or allowed to attach
  read-write. A new command, server-access, configures the list. File system
  permissions must still be configured manually.

* Emit window-layout-changed on swap-pane.

* Better error reporting when applying custom layouts.

* Handle ANSI escape sequences in run-shell output.

* Add pane_start_path to match start_command.

* Set PWD so shells have a hint about the real path.

* Do not allow pipe-pane on dead panes.

* Do not report mouse positions (incorrectly) above the maximum of 223 in
  normal mouse mode.

* Add an option (default off) to control the passthrough escape sequence.

* Support more mouse buttons when the terminal sends them.

* Add a window-resized hook which is fired when the window is actually resized
  which may be later than the client resize.

* Add next_session_id format with the next session ID.

* Add formats for client and server UID and user.

* Add argument to refresh-client -l to forward clipboard to a pane.

* Add remain-on-exit-format to set text shown when pane is dead.

* With split-window -f use percentages of window size not pane size.

* Add an option (fill-character) to set the character used for unused areas of
  a client.

* Add an option (scroll-on-clear) to control if tmux scrolls into history on
  clear.

* Add a capability for OSC 7 and use it similarly to how the title is set (and
  controlled by the same set-titles option).

* Add support for systemd socket activation (where systemd creates the Unix
  domain socket for tmux rather than tmux creating it). Build with
  --enable-systemd.

* Add an option (pane-border-indicators) to select how the active pane is shown
  on the pane border (colour, arrows or both).

* Support underscore styles with capture-pane -e.

* Make pane-border-format a pane option rather than window.

* Respond to OSC 4 queries

* Fix g/G keys in modes to do the same thing as copy mode (and vi).

* Bump the time terminals have to respond to device attributes queries to three
  seconds.

* If automatic-rename is off, allow the rename escape sequence to set an empty
  name.

* Trim menu item text more intelligently.

* Add cursor-style and cursor-colour options to set the default cursor style
  and colour.

* Accept some useful and non-conflicting emacs keys in vi normal mode at the
  command prompt.

* Add a format modifier (c) to force a colour to RGB.

* Add -s and -S to display-popup to set styles, -b to set lines and -T to set
  popup title. New popup-border-lines, popup-border-style and popup-style
  options set the defaults.

* Add -e flag to set an environment variable for a popup.

* Make send-keys without arguments send the key it is bound to (if bound to a
  key).

* Try to leave terminal cursor at the right position even when tmux is drawing
  its own cursor or selection (such as at the command prompt and in choose
  mode) for people using screen readers and similar which can make use of it.

* Change so that {} is converted to tmux commands immediately when parsed. This
  means it must contain valid tmux commands. For commands which expand %% and
  %%%, this now only happens within string arguments. Use of nested aliases
  inside {} is now forbidden. Processing of commands given in quotes remains
  the same.

* Disable evports on SunOS since they are broken.

* Do not expand the file given with tmux -f so it can contain :s.

* Bump FORMAT_LOOP_LIMIT and add a log message when hit.

* Add a terminal feature for the mouse (since FreeBSD termcap does not have kmous).

* Forbid empty session names.

* Improve error reporting when the tmux /tmp directory cannot be created or
  used.

* Give #() commands a one second grace period where the output is empty before
  telling the user they aren't doing anything ("not ready").

* When building, pick default-terminal from the first of tmux-256color, tmux,
  screen-256color, screen that is available on the build system (--with-TERM
  can override).

* Do not close popups on resize, instead adjust them to fit.

* Add a client-active hook.

* Make window-linked and window-unlinked window options.

* Do not configure on macOS without the user making a choice about utf8proc
  (either --enable-utf8proc or --disable-utf8proc).

* Do not freeze output in panes when a popup is open, let them continue to
  redraw.

* Add pipe variants of the line copy commands.

* Change copy-line and copy-end-of-line not to cancel and add -and-cancel
  variants, like the other copy commands.

* Support the OSC palette-setting sequences in popups.

* Add a pane-colours array option to specify the defaults palette.

* Add support for Unicode zero-width joiner.

* Make newline a style delimiter as well so they can cross multiple lines for
  readability in configuration files.

* Change focus to be driven by events rather than scanning panes so the
  ordering of in and out is consistent.

* Add display-popup -B to open a popup without a border.

* Add a menu for popups that can be opened with button three outside the popup
  or on the left or top border. Resizing now only works on the right and bottom
  borders or when using Meta. The menu allows a popup to be closed, expanded to
  the full size of the client, centered in the client or changed into a pane.

* Make command-prompt and confirm-before block by default (like run-shell). A
  new -b flags runs them in the background as before. Also set return code for
  confirm-before.

* Change cursor style handling so tmux understands which sequences contain
  blinking and sets the flag appropriately, means that it works whether cnorm
  disables blinking or not. This now matches xterm's behaviour.

* More accurate vi(1) word navigation in copy mode and on the status line. This
  changes the meaning of the word-separators option: setting it to the empty
  string is equivalent to the previous behavior.

* Add -F for command-prompt and use it to fix "Rename" on the window menu.

* Add different command histories for different types of prompts ("command",
  "search" etc).

CHANGES FROM 3.2 TO 3.2a

* Add an "always" value for the "extended-keys" option; if set then tmux will
  forward extended keys to applications even if they do not request them.

* Add a "mouse" terminal feature so tmux can enable the mouse on terminals
  where it is known to be supported even if terminfo(5) says otherwise.

* Do not expand the filename given to -f so it can contain colons.

* Fixes for problems with extended keys and modifiers, scroll region,
  source-file, crosscompiling, format modifiers and other minor issues.

CHANGES FROM 3.1c TO 3.2

* Add a flag to disable keys to close a message.

* Permit shortcut keys in buffer, client, tree modes to be configured with a
  format (-K flag to choose-buffer, choose-client, choose-tree).

* Add a current_file format for the config file being parsed.

* When display-message used in config file, show the message after the config
  file finishes.

* Add client-detached notification in control mode.

* Improve performance of format evaluation.

* Make jump command support UTF-8 in copy mode.

* Support X11 colour names and other colour formats for OSC 10 and 11.

* Add "pipe" variants of "copy-pipe" commands which do not copy.

* Include "focused" in client flags.

* Send Unicode directional isolate characters around horizontal pane borders if
  the terminal supports UTF-8 and an extension terminfo(5) capability "Bidi" is
  present.

* Add a -S flag to new-window to make it select the existing window if one
  with the given name already exists rather than failing with an error.

* Add a format modifier to check if a window or session name exists (N/w or
  N/s).

* Add compat clock_gettime for older macOS.

* Add a no-detached choice to detach-on-destroy which detaches only if there
  are no other detached sessions to switch to.

* Add rectangle-on and rectangle-off copy mode commands.

* Change so that window_flags escapes # automatically. A new format
  window_raw_flags contains the old unescaped version.

* Add -N flag to never start server even if command would normally do so.

* With incremental search, start empty and only repeat the previous search if
  the user tries to search again with an empty prompt.

* Add a value for remain-on-exit that only keeps the pane if the program
  failed.

* Add a -C flag to run-shell to use a tmux command rather than a shell command.

* Do not list user options with show-hooks.

* Remove current match indicator in copy mode which can't work anymore since we
  only search the visible region.

* Make synchronize-panes a pane option and add -U flag to set-option to unset
  an option on all panes.

* Make replacement of ##s consistent when drawing formats, whether followed by
  [ or not. Add a flag (e) to the q: format modifier to double up #s.

* Add -N flag to display-panes to ignore keys.

* Change how escaping is processed for formats so that ## and # can be used in
  styles.

* Add a 'w' format modifier for string width.

* Add support for Haiku.

* Expand menu and popup -x and -y as formats.

* Add numeric comparisons for formats.

* Fire focus events even when the pane is in a mode.

* Add -O flag to display-menu to not automatically close when all mouse buttons
  are released.

* Allow fnmatch(3) wildcards in update-environment.

* Disable nested job expansion so that the result of #() is not expanded again.

* Use the setal capability as well as (tmux's) Setulc.

* Add -q flag to unbind-key to hide errors.

* Allow -N without a command to change or add a note to an existing key.

* Add a -w flag to set- and load-buffer to send to clipboard using OSC 52.

* Add -F to set-environment and source-file.

* Allow colour to be spelt as color in various places.

* Add n: modifier to get length of a format.

* Respond to OSC colour requests if a colour is available.

* Add a -d option to display-message to set delay.

* Add a way for control mode clients to subscribe to a format and be notified
  of changes rather than having to poll.

* Add some formats for search in copy mode (search_present, search_match).

* Do not wait on shutdown for commands started with run -b.

* Add -b flags to insert a window before (like the existing -a for after) to
  break-pane, move-window, new-window.

* Make paste -p the default for ].

* Add support for pausing a pane when the output buffered for a control mode
  client gets too far behind. The pause-after flag with a time is set on the
  pane with refresh-client -f and a paused pane may be resumed with
  refresh-client -A.

* Allow strings in configuration files to span multiple lines - newlines and
  any leading whitespace are removed, as well as any following comments that
  couldn't be part of a format. This allows long formats or other strings to be
  annotated and indented.

* Instead of using a custom parse function to process {} in configuration
  files, treat as a set of statements the same as outside {} and convert back
  to a string as the last step. This means the rules are consistent inside and
  outside {}, %if and friends work at the right time, and the final result
  isn't littered with unnecessary newlines.

* Add support for extended keys - both xterm(1)'s CSI 27 ~ sequence and the
  libtickit CSI u sequence are accepted; only the latter is output. tmux will
  only attempt to use these if the extended-keys option is on and it can detect
  that the terminal outside supports them (or is told it does with the
  "extkeys" terminal feature).

* Add an option to set the pane border lines style from a choice of single
  lines (ACS or UTF-8), double or heavy (UTF-8), simple (plain ASCII) or number
  (the pane numbers). Lines that won't work on a non-UTF-8 terminal are
  translated back into ACS when they are output.

* Make focus events update the latest client (like a key press).

* Store UTF-8 characters differently to reduce memory use.

* Fix break-pane -n when only one pane in the window.

* Instead of sending all data to control mode clients as fast as possible, add
  a limit of how much data will be sent to the client and try to use it for
  panes with some degree of fairness.

* Add an active-pane client flag (set with attach-session -f, new-session -f
  or refresh-client -f). This allows a client to have an independent active
  pane for interactive use (the window client pane is still used for many
  things however).

* Add a mark to copy mode, this is set with the set-mark command (bound to X)
  and appears with the entire line shown using copy-mode-mark-style and the
  marked character in reverse. The jump-to-mark command (bound to M-x) swaps
  the mark and the cursor positions.

* Add a -D flag to make the tmux server run in the foreground and not as a
  daemon.

* Do not loop forever in copy mode when search finds an empty match.

* Fix the next-matching-bracket logic when using vi(1) keys.

* Add a customize mode where options may be browsed and changed, includes
  adding a brief description of each option. Bound to C-b C by default.

* Change message log (C-b ~) so there is one for the server rather than one per
  client and it remains after detach, and make it useful by logging every
  command.

* Add M-+ and M-- to tree mode to expand and collapse all.

* Change the existing client flags for control mode to apply for any client,
  use the same mechanism for the read-only flag and add an ignore-size flag.

  refresh-client -F has become -f (-F stays for backwards compatibility) and
  attach-session and switch-client now have -f flags also. A new format
  client_flags lists the flags and is shown by list-clients by default.

  This separates the read-only flag from "ignore size" behaviour (new
  ignore-size) flag - both behaviours are useful in different circumstances.

  attach -r and switchc -r remain and set or toggle both flags together.

* Store and restore cursor position when copy mode is resized.

* Export TERM_PROGRAM and TERM_PROGRAM_VERSION like various other terminals.

* Add formats for after hook command arguments: hook_arguments with all the
  arguments together; hook_argument_0, hook_argument_1 and so on with
  individual arguments; hook_flag_X if flag -X is present; hook_flag_X_0,
  hook_flag_X_1 and so on if -X appears multiple times.

* Try to search the entire history first for up to 200 ms so a search count can
  be shown. If it takes too long, search the visible text only.

* Use VIS_CSTYLE for paste buffers also (show \012 as \n).

* Change default formats for tree mode, client mode and buffer mode to be more
  compact and remove some clutter.

* Add a key (e) in buffer mode to open the buffer in an editor. The buffer
  contents is updated when the editor exits.

* Add -e flag for new-session to set environment variables, like the same flag
  for new-window.

* Improve search match marking in copy mode. Two new options
  copy-mode-match-style and copy-mode-current-match-style to set the style for
  matches and for the current match respectively. Also a change so that if a
  copy key is pressed with no selection, the current match (if any) is copied.

* Sanitize session names like window names instead of forbidding invalid ones.

* Check if the clear terminfo(5) capability starts with CSI and if so then
  assume the terminal is VT100-like, rather than relying on the XT capability.

* Improve command prompt tab completion and add menus both for strings and -t
  and -s (when used without a trailing space). command-prompt has additional
  flags for only completing a window (-W) and a target (-T), allowing C-b ' to
  only show windows and C-b . only targets.

* Change all the style options to string options so they can support formats.
  Change pane-active-border-style to use this to change the border colour when
  in a mode or with synchronize-panes on. This also implies a few minor changes
  to existing behaviour:

  - set-option -a with a style option automatically inserts a comma between the
    old value and appended text.

  - OSC 10 and 11 no longer set the window-style option, instead they store the
    colour internally in the pane data and it is used as the default when the
    option is evaluated.

  - status-fg and -bg now override status-style instead of the option values
    being changed.

* Add extension terminfo(5) capabilities for margins and focus reporting.

* Try $XDG_CONFIG_HOME/tmux/tmux.conf as well as ~/.config/tmux/tmux.conf for
  configuration file (the search paths are in TMUX_CONF in Makefile.am).

* Remove the DSR 1337 iTerm2 extension and replace by the extended device
  attributes sequence (CSI > q) supported by more terminals.

* Add a -s flag to copy-mode to specify a different pane for the source
  content. This means it is possible to view two places in a pane's history at
  the same time in different panes, or view the history while still using the
  pane. Pressing r refreshes the content from the source pane.

* Add an argument to list-commands to show only a single command.

* Change copy mode to make copy of the pane history so it does not need to
  freeze the pane.

* Restore pane_current_path format from portable tmux on OpenBSD.

* Wait until the initial command sequence is done before sending a device
  attributes request and other bits that prompt a reply from the terminal. This
  means that stray replies are not left on the terminal if the command has
  attached and then immediately detached and tmux will not be around to receive
  them.

* Add a -f filter argument to the list commands like choose-tree.

* Move specific hooks for panes to pane options and windows for window options
  rather than all hooks being session options. These hooks are now window options:

  window-layout-changed
  window-linked
  window-pane-changed
  window-renamed
  window-unlinked

  And these are now pane options:

  pane-died
  pane-exited
  pane-focus-in
  pane-focus-out
  pane-mode-changed
  pane-set-clipboard

  Any existing configurations using these hooks on a session rather than
  globally (that is, set-hook or set-option without -g) may need to be changed.

* Show signal names when a process exits with remain-on-exit on platforms which
  have a way to get them.

* Start menu with top item selected if no mouse and use mode-style for the
  selected item.

* Add a copy-command option and change copy-pipe and friends to pipe to it if
  used without arguments, allows all the default copy key bindings to be
  changed to pipe with one option rather than needing to change each key
  binding individually.

* Tidy up the terminal detection and feature code and add named sets of
  terminal features, each of which are defined in one place and map to a
  builtin set of terminfo(5) capabilities. Features can be specified based on
  TERM with a new terminal-features option or with the -T flag when running
  tmux. tmux will also detect a few common terminals from the DA and DSR
  responses.

  This is intended to make it easier to configure tmux's use of terminfo(5)
  even in the presence of outdated ncurses(3) or terminfo(5) databases or for
  features which do not yet have a terminfo(5) entry. Instead of having to grok
  terminfo(5) capability names and what they should be set to in the
  terminal-overrides option, the user can hopefully just give tmux a feature
  name and let it do the right thing.

  The terminal-overrides option remains both for backwards compatibility and to
  allow tweaks of individual capabilities.

* Support mintty's application escape sequence (means tmux doesn't have to
  delay to wait for Escape, so no need to reduce escape-time when using
  mintty).

* Change so main-pane-width and height can be given as a percentage.

* Support for the iTerm2 synchronized updates feature (allows the terminal to
  avoid unnecessary drawing while output is still in progress).

* Make the mouse_word and mouse_line formats work in copy mode and enable the
  default pane menu in copy mode.

* Add a -T flag to resize-pane to trim lines below the cursor, moving lines out
  of the history.

* Add a way to mark environment variables as "hidden" so they can be used by
  tmux (for example in formats) but are not set in the environment for new
  panes. set-environment and show-environment have a new -h flag and there is a
  new %hidden statement for the configuration file.

* Change default position for display-menu -x and -y to centre rather than top
  left.

* Add support for per-client transient popups, similar to menus but which are
  connected to an external command (like a pane). These are created with new
  command display-popup.

* Change double and triple click bindings so that only one is fired (previously
  double click was fired on the way to triple click). Also add default double
  and triple click bindings to copy the word or line under the cursor and
  change the existing bindings in copy mode to do the same.

* Add a default binding for button 2 to paste.

* Add -d flag to run-shell to delay before running the command and allow it to
  be used without a command so it just delays.

* Add C-g to cancel command prompt with vi keys as well as emacs, and q in
  command mode.

* When the server socket is given with -S, create it with umask 177 instead of
  117 (because it may not be in a safe directory like the default directory in
  /tmp).

* Add a copy-mode -H flag to hide the position marker in the top right.

* Add number operators for formats (+, -, *, / and m),

CHANGED FROM 3.1b TO 3.1c

* Do not write after the end of the array and overwrite the stack when
  colon-separated SGR sequences contain empty arguments.

CHANGES FROM 3.1a TO 3.1b

* Fix build on systems without sys/queue.h.

* Fix crash when allow-rename is on and an empty name is set.

CHANGES FROM 3.1 TO 3.1a

* Do not close stdout prematurely in control mode since it is needed to print
  exit messages. Prevents hanging when detaching with iTerm2.

CHANGES FROM 3.0a TO 3.1

* Only search the visible part of the history when marking (highlighting)
  search terms. This is much faster than searching the whole history and solves
  problems with large histories. The count of matches shown is now the visible
  matches rather than all matches.

* Search using regular expressions in copy mode. search-forward and
  search-backward use regular expressions by default; the incremental versions
  do not.

* Turn off mouse mode 1003 as well as the rest when exiting.

* Add selection_active format for when the selection is present but not moving
  with the cursor.

* Fix dragging with modifier keys, so binding keys such as C-MouseDrag1Pane and
  C-MouseDragEnd1Pane now work.

* Add -a to list-keys to also list keys without notes with -N.

* Do not jump to next word end if already on a word end when selecting a word;
  fixes select-word with single character words and vi(1) keys.

* Fix top and bottom pane calculation with pane border status enabled.

* Add support for adding a note to a key binding (with bind-key -N) and use
  this to add descriptions to the default key bindings. A new -N flag to
  list-keys shows key bindings with notes. Change the default ? binding to use
  this to show a readable summary of keys. Also extend command-prompt to return
  the name of the key pressed and add a default binding (/) to show the note
  for the next key pressed.

* Add support for the iTerm2 DSR 1337 sequence to get the terminal version.

* Treat plausible but invalid keys (like C-BSpace) as literal like any other
  unrecognised string passed to send-keys.

* Detect iTerm2 and enable use of DECSLRM (much faster with horizontally split
  windows).

* Add -Z to default switch-client command in tree mode.

* Add ~ to quoted characters for %%%.

* Document client exit messages in the manual page.

* Do not let read-only clients limit the size, unless all clients are
  read-only.

* Add a number of new formats to inspect what sessions and clients a window is
  present or active in.

* Change file reading and writing to go through the client if necessary. This
  fixes commands like "tmux loadb /dev/fd/X". Also modify source-file to
  support "-" for standard input, like load-buffer and save-buffer.

* Add ~/.config/tmux/tmux.conf to the default search path for configuration
  files.

* Bump the escape sequence timeout to five seconds to allow for longer
  legitimate sequences.

* Make a best effort to set xpixel and ypixel for each pane and add formats for
  them.

* Add push-default to status-left and status-right in status-format[0].

* Do not clear search marks on cursor movement with vi(1) keys.

* Add p format modifier for padding to width and allow multiple substitutions
  in a single format.

* Add -f for full size to join-pane (like split-window).

* Do not use bright when emulating 256 colours on an 8 colour terminal because
  it is also bold on some terminals.

* Make select-pane -P set window-active-style also to match previous behaviour.

* Do not truncate list-keys output.

* Turn automatic-rename back on if the \033k rename escape sequence is used
  with an empty name.

* Add support for percentage sizes for resize-pane ("-x 10%"). Also change
  split-window and join-pane -l to accept similar percentages and deprecate the
  -p flag.

* Add -F flag to send-keys to expand formats in search-backward and forward
  copy mode commands and copy_cursor_word and copy_cursor_line formats for word
  and line at cursor in copy mode. Use for default # and * binding with vi(1)
  keys.

* Add formats for word and line at cursor position in copy mode.

* Add formats for cursor and selection position in copy mode.

* Support all the forms of RGB colour strings in OSC sequences rather than
  requiring two digits.

* Limit lazy resize to panes in attached sessions only.

* Add an option to set the key sent by backspace for those whose system uses ^H
  rather than ^?.

* Change new-session -A without a session name (that is, no -s option also) to
  attach to the best existing session like attach-session rather than a new
  one.

* Add a "latest" window-size option which tries to size windows based on the
  most recently used client. This is now the default.

* Add simple support for OSC 7 (result is available in the pane_path format).

* Add push-default and pop-default for styles which change the colours and
  attributes used for #[default]. These are used in status-format to restore
  the behaviour of window-status-style being the default for
  window-status-format.

* Add window_marked_flag.

* Add cursor-down-and-cancel in copy mode.

* Default to previous search string for search-forward and search-backward.

* Add -Z flag to rotate-window, select-pane, swap-pane, switch-client to
  preserve zoomed state.

* Add -N to capture-pane to preserve trailing spaces.

* Add reverse sorting in tree, client and buffer modes.

CHANGES FROM 3.0 TO 3.0a

* Do not require REG_STARTEND.

* Respawn panes or windows correctly if default-command is set.

* Add missing option for after-kill-pane hook.

* Fix for crash with a format variable that doesn't exist.

* Do not truncate list-keys output on some platforms.

* Do not crash when restoring a layout with only one pane.

CHANGES FROM 2.9 TO 3.0

* Workaround invalid layout strings generated by older tmux versions and add
  some additional sanity checks

* xterm 348 now disables margins when resized, so send DECLRMM again after
  resize.

* Add support for the SD (scroll down) escape sequence.

* Expand arguments to C and s format modifiers to match the m modifier.

* Add support for underscore colours (Setulc capability must be added with
  terminal-overrides as described in tmux(1)).

* Add a "fill" style attribute for the fill colour of the drawing area (where
  appropriate).

* New -H flag to send-keys to send literal keys.

* Format variables for pane mouse modes (mouse_utf8_flag and mouse_sgr_flag)
  and for origin mode (origin_flag).

* Add -F to refresh-client for flags for control mode clients, only one flag
  (no-output) supported at the moment.

* Add a few vi(1) keys for menus.

* Add pane options, set with set-option -p and displayed with show-options -p.
  Pane options inherit from window options (so every pane option is also
  a window option). The pane style is now configured by setting window-style
  and window-active-style in the pane options; select-pane -P and -g now change
  the option but are no longer documented.

* Do not document set-window-option and show-window-options. set-option -w and
  show-options -w should be used instead.

* Add a -A flag to show-options to show parent options as well (they are marked
  with a *).

* Resize panes lazily - do not resize unless they are in an attached, active
  window.

* Add regular expression support for the format search, match and substitute
  modifiers and make them able to ignore case. find-window now accepts -r to
  use regular expressions.

* Do not use $TMUX to find the session because for windows in multiple sessions
  it is wrong as often as it is right, and for windows in one session it is
  pointless. Instead use TMUX_PANE if it is present.

* Do not always resize the window back to its original size after applying a
  layout, keep it at the layout size until it must be resized (for example when
  attached and window-size is not manual).

* Add new-session -X and attach-session -x to send SIGHUP to parent when
  detaching (like detach-client -P).

* Support for octal escapes in strings (such as \007) and improve list-keys
  output so it parses correctly if copied into a configuration file.

* INCOMPATIBLE: Add a new {} syntax to the configuration file. This is a string
  similar to single quotes but also includes newlines and allows commands that
  take other commands as string arguments to be expressed more clearly and
  without additional escaping.

  A literal { and } or a string containing { or } must now be escaped or
  quoted, for example '{' and '}' instead of { or }, or 'X#{foo}' instead of
  X#{foo}.

* New <, >, <= and >= comparison operators for formats.

* Improve escaping of special characters in list-keys output.

* INCOMPATIBLE: tmux's configuration parsing has changed to use yacc(1). There
  is one incompatible change: a \ on its own must be escaped or quoted as
  either \\ or '\' (the latter works on older tmux versions).

  Entirely the same parser is now used for parsing the configuration file
  and for string commands. This means that constructs previously only
  available in .tmux.conf, such as %if, can now be used in string commands
  (for example, those given to if-shell - not commands invoked from the
  shell, they are still parsed by the shell itself).

* Add support for the overline attribute (SGR 53). The Smol capability is
  needed in terminal-overrides.

* Add the ability to create simple menus. Introduces new command
  display-menu. Default menus are bound to MouseDown3 on the status line;
  MouseDown3 or M-MouseDown3 on panes; MouseDown3 in tree, client and
  buffer modes; and C-b < and >.

* Allow panes to be empty (no command). They can be created either by piping to
  split-window -I, or by passing an empty command ('') to split-window. Output
  can be sent to an existing empty window with display-message -I.

* Add keys to jump between matching brackets (emacs C-M-f and C-M-b, vi %).

* Add a -e flag to new-window, split-window, respawn-window, respawn-pane to
  pass environment variables into the newly created process.

* Hooks are now stored in the options tree as array options, allowing them to
  have multiple separate commands. set-hook and show-hooks remain but
  set-option and show-options can now also be used (show-options will only show
  hooks if given the -H flag). Hooks with multiple commands are run in index
  order.

* Automatically scroll if dragging to create a selection with the mouse and the
  cursor reaches the top or bottom line.

* Add -no-clear variants of copy-selection and copy-pipe which do not clear the
  selection after copying. Make copy-pipe clear the selection by default to be
  consistent with copy-selection.

* Add an argument to copy commands to set the prefix for the buffer name, this
  (for example) allows buffers for different sessions to be named separately.

* Update session activity on focus event.

* Pass target from source-file into the config file parser so formats in %if
  and %endif have access to more useful variables.

* Add the ability to infer an option type (server, session, window) from its
  name to show-options (it was already present in set-option).

CHANGES FROM 2.9 TO 2.9a

* Fix bugs in select-pane and the main-horizontal and main-vertical layouts.

CHANGES FROM 2.8 TO 2.9

* Attempt to preserve horizontal cursor position as well as vertical with
  reflow.

* Rewrite main-vertical and horizontal and change layouts to better handle the
  case where all panes won't fit into the window size, reduce problems with
  pane border status lines and fix other bugs mostly found by Thomas Sattler.

* Add format variables for the default formats in the various modes
  (tree_mode_format and so on) and add a -a flag to display-message to list
  variables with values.

* Add a -v flag to display-message to show verbose messages as the format is
  parsed, this allows formats to be debugged

* Add support for HPA (\033[`).

* Add support for origin mode (\033[?6h).

* No longer clear history on RIS.

* Extend the #[] style syntax and use that together with previous format
  changes to allow the status line to be entirely configured with a single
  option.

  Now that it is possible to configure their content, enable the existing code
  that lets the status line be multiple lines in height. The status option can
  now take a value of 2, 3, 4 or 5 (as well as the previous on or off) to
  configure more than one line. The new status-format array option configures
  the format of each line, the default just references the existing status-*
  options, although some of the more obscure status options may be eliminated
  in time.

  Additions to the #[] syntax are: "align" to specify alignment (left, centre,
  right), "list" for the window list and "range" to configure ranges of text
  for the mouse bindings.

  The "align" keyword can also be used to specify alignment of entries in tree
  mode and the pane status lines.

* Add E: and T: format modifiers to expand a format twice (useful to expand the
  value of an option).

* The individual -fg, -bg and -attr options have been removed; they
  were superseded by -style options in tmux 1.9.

* Allow more than one mode to be opened in a pane. Modes are kept on a stack
  and retrieved if the same mode is entered again. Exiting the active mode goes
  back to the previous one.

* When showing command output in copy mode, call it view mode instead (affects
  pane_mode format).

* Add -b to display-panes like run-shell.

* Handle UTF-8 in word-separators option.

* New "terminal" colour allowing options to use the terminal default colour
  rather than inheriting the default from a parent option.

* Do not move the cursor in copy mode when the mouse wheel is used.

* Use the same working directory rules for jobs as new windows rather than
  always starting in the user's home.

* Allow panes to be one line or column in size.

* Go to last line when goto-line number is out of range in copy mode.

* Yank previously cut text if any with C-y in the command prompt, only use the
  buffer if no text has been cut.

* Add q: format modifier to quote shell special characters.

* Add StatusLeft and StatusRight mouse locations (keys such as
  MouseDown1StatusLeft) for the status-left and status-right areas of the
  status line.

* Add -Z to find-window.

* Support for windows larger than the client. This adds two new options,
  window-size and default-size, and a new command, resize-window. The
  force-width and force-height options and the session_width and session_height
  formats have been removed.

  The new window-size option tells tmux how to work out the size of windows:
  largest means it picks the size of the largest session, smallest the smallest
  session (similar to the old behaviour) and manual means that it does not
  automatically resize windows. aggressive-resize modifies the choice of
  session for largest and smallest as it did before.

  If a window is in a session attached to a client that is too small, only part
  of the window is shown. tmux attempts to keep the cursor visible, so the part
  of the window displayed is changed as the cursor moves (with a small delay,
  to try and avoid excess redrawing when applications redraw status lines or
  similar that are not currently visible).

  Drawing windows which are larger than the client is not as efficient as those
  which fit, particularly when the cursor moves, so it is recommended to avoid
  using this on slow machines or networks (set window-size to smallest or
  manual).

  The resize-window command can be used to resize a window manually. If it is
  used, the window-size option is automatically set to manual for the window
  (undo this with "setw -u window-size"). resize-window works in a similar way
  to resize-pane (-U -D -L -R -x -y flags) but also has -a and -A flags. -a
  sets the window to the size of the smallest client (what it would be if
  window-size was smallest) and -A the largest.

  For the same behaviour as force-width or force-height, use resize-window -x
  or -y.

  If the global window-size option is set to manual, the default-size option is
  used for new windows. If -x or -y is used with new-session, that sets the
  default-size option for the new session.

  The maximum size of a window is 10000x10000. But expect applications to
  complain and higher memory use if making a window that big. The minimum size
  is the size required for the current layout including borders.

  The refresh-client command can be used to pan around a window, -U -D -L -R
  moves up, down, left or right and -c returns to automatic cursor
  tracking. The position is reset when the current window is changed.

CHANGES FROM 2.7 TO 2.8

* Make display-panes block the client until a pane is chosen or it
  times out.

* Clear history on RIS like most other terminals do.

* Add an "Any" key to run a command if a key is pressed that is not
  bound in the current key table.

* Expand formats in load-buffer and save-buffer.

* Add a rectangle_toggle format.

* Add set-hook -R to run a hook immediately.

* Add README.ja.

* Add pane focus hooks.

* Allow any punctuation as separator for s/x/y not only /.

* Improve resizing with the mouse (fix resizing the wrong pane in some
  layouts, and allow resizing multiple panes at the same time).

* Allow , and } to be escaped in formats as #, and #}.

* Add KRB5CCNAME to update-environment.

* Change meaning of -c to display-message so the client is used if it
  matches the session given to -t.

* Fixes to : form of SGR.

* Add x and X to choose-tree to kill sessions, windows or panes.

CHANGES FROM 2.6 TO 2.7

* Remove EVENT_* variables from environment on platforms where tmux uses them
  so they do not pass on to panes.

* Fixes for hooks at server exit.

* Remove SGR 10 (was equivalent to SGR 0 but no other terminal seems to do
  this).

* Expand formats in window and session names.

* Add -Z flag to choose-tree, choose-client, choose-buffer to automatically
  zoom the pane when the mode is entered and unzoom when it exits, assuming the
  pane is not already zoomed. This is now part of the default key bindings.

* Add C-g to exit modes with emacs keys.

* Add exit-empty option to exit server if no sessions (defaults to on).

* Show if a filter is present in choose modes.

* Add pipe-pane -I to to connect stdin of the child process.

* Performance improvements for reflow.

* Use RGB terminfo(5) capability to detect RGB colour terminals (the existing
  Tc extension remains unchanged).

* Support for ISO colon-separated SGR sequences.

* Add select-layout -E to spread panes out evenly (bound to E key).

* Support wide characters properly when reflowing.

* Pass PWD to new panes as a hint to shells, as well as calling chdir().

* Performance improvements for the various choose modes.

* Only show first member of session groups in tree mode (-G flag to choose-tree
  to show all).

* Support %else in config files to match %if; from Brad Town in GitHub issue
  1071.

* Fix "kind" terminfo(5) capability to be S-Down not S-Up.

* Add a box around the preview label in tree mode.

* Show exit status and time in the remain-on-exit pane text; from Timo
  Boettcher in GitHub issue 1103.

* Correctly use pane-base-index in tree mode.

* Change the allow-rename option default to off.

* Support for xterm(1) title stack escape sequences (GitHub issue 1075 from
  Brad Town).

* Correctly remove padding cells to fix a UTF-8 display problem (GitHub issue
  1090).

CHANGES FROM 2.5 TO 2.6, 05 October 2017

* Add select-pane -T to set pane title.

* Fix memory leak when lines with BCE are removed from history.

* Fix (again) the "prefer unattached" behaviour of attach-session.

* Reorder how keys are checked to allow keys to be specified that have a
  leading escape. GitHub issue 1048.

* Support REP escape sequence (\033[b).

* Run alert hooks based on options rather than always, and allow further bells
  even if there is an existing bell.

* Add -d flag to display-panes to override display-panes-time.

* Add selection_present format when in copy mode (allows key bindings that do
  something different if there is a selection).

* Add pane_at_left, pane_at_right, pane_at_top and pane_at_bottom formats.

* Make bell, activity and silence alerting more consistent by: removing the
  bell-on-alert option; adding activity-action and silence-action options with
  the same possible values as the existing bell-action; adding a "both" value
  for the visual-bell, visual-activity and visual-silence options to trigger
  both a bell and a message.

* Add a pane_pipe format to show if pipe-pane is active.

* Block signals between forking and resetting signal handlers so that the
  libevent signal handler doesn't get called in the child and incorrectly write
  into the signal pipe that it still shares with the parent. GitHub issue 1001.

* Allow punctuation in pane_current_command.

* Add -c for respawn-pane and respawn-window.

* Wait for any remaining data to flush when a pane is closed while pipe-pane is
  in use.

* Fix working out current client with no target. GitHub issue 995.

* Try to fallback to C.UTF-8 as well as en_US.UTF-8 when looking for a UTF-8
  locale.

* Add user-keys option for user-defined key escape sequences (mapped to User0
  to User999 keys).

* Add pane-set-clipboard hook.

* FAQ file has moved out of repository to online.

* Fix problem with high CPU usage when a client dies unexpectedly. GitHub issue
  941.

* Do a dance on OS X 10.10 and above to return tmux to the user namespace,
  allowing access to the clipboard.

* Do not allow escape sequences which expect a specific terminator (APC, DSC,
  OSC) to wait for forever - use a small timeout. This reduces the chance of
  the pane locking up completely when sent garbage (cat /dev/random or
  similar).

* Support SIGUSR2 to toggle logging on a running server, also generate the
  "out" log file with -vv not -vvvv.

* Make set-clipboard a three state option: on (tmux both sends to outside
  terminal and accepts from applications inside); external (tmux sends outside
  but does not accept inside); and off.

* Fix OSC 4 palette setting for bright foreground colours. GitHub issue 954.

* Use setrgbf and setrgbb terminfo(5) capabilities to set RGB colours, if they
  are available. (Tc is still supported as well.)

* Fix redrawing panes when they are resized several times but end up with the
  size unchanged (for example, splitw/resizep -Z/breakp).

* Major rewrite of choose mode. Now includes preview, sorting, searching and
  tagging; commands that can be executed directly from the mode (for example,
  to delete one or more buffers); and filtering in tree mode.

* choose-window and choose-session are now aliases of choose-tree (in the
  command-alias option).

* Support OSC 10 and OSC 11 to set foreground and background colours.

* Check the U8 capability to determine whether to use UTF-8 line drawing
  characters for ACS.

* Some missing notifications for layout changes.

* Control mode clients now do not affect session sizes until they issue
  refresh-client -C. new-session -x and -y works with control clients even if
  the session is not detached.

* All new sessions that are unattached (whether with -d or started with no
  terminal) are now created with size 80 x 24. Whether the status line is on or
  off does not affect the size of new sessions until they are attached.

* Expand formats in option names and add -F flag to expand them in option values.

* Remember the search string for a pane even if copy mode is exited and entered
  again.

* Some further BCE fixes (scroll up, reverse index).

* Improvements to how terminals are cleared (entirely or partially).

CHANGES FROM 2.4 TO 2.5, 09 May 2017

* Reset updated flag when restarting #() command so that new output is properly
  recognised. GitHub issue 922.

* Fix ECH with a background colour.

* Do not rely on the terminal not moving the cursor after DL or EL.

* Fix send-keys and send-prefix in copy-mode (so C-b C-b works). GitHub issue
  905.

* Set the current pane for rotate-window so it works in command sequences.

* Add pane_mode format.

* Differentiate M-Up from Escape+Up when possible (that is, in terminals with
  xterm(1) style function keys). GitHub issue 907.

* Add session_stack and window_stack_index formats.

* Some new control mode notifications and corresponding hooks:
  pane-mode-changed, window-pane-changed, client-session-changed,
  session-window-changed.

* Format pane_search_string for last search term while in copy mode (useful
  with command-prompt -I).

* Fix a problem with high CPU usage and multiple clients with #(). GitHub issue
  889.

* Fix UTF-8 combining characters in column 0.

* Fix reference counting so that panes are properly destroyed and their
  processes killed.

* Clamp SU (CSI S) parameter to work around a bug in Konsole.

* Tweak line wrapping in full width panes to play more nicely with terminal
  copy and paste.

* Fix when we emit SGR 0 in capture-pane -e.

* Do not change TERM until after config file parsing has finished, so that
  commands run inside the config file can use it to make decisions (typically
  about default-terminal).

* Make the initial client wait until config file parsing has finished to avoid
  racing with commands.

* Fix core when if-shell fails.

* Only use ED to clear screen if the pane is at the bottom.

* Fix multibyte UTF-8 output.

* Code improvements around target (-t) resolution.

* Change how the default target (for commands without -t) is managed across
  command sequences: now it is set up at the start and commands are required
  to update it if needed. Fixes binding command sequences to mouse keys.

* Make if-shell from the config file work correctly.

* Change to always check the root key table if no binding is found in the
  current table (prefix table or copy-mode table or whatever). This means that
  root key bindings will take effect even in copy mode, if not overridden by a
  copy mode key binding.

* Fix so that the history file works again.

* Run config file without a client rather than using the first client, restores
  previous behaviour.

* If a #() command doesn't exit, continue to read from it and use its last full
  line of output.

* Handle slow terminals and fast output better: when the amount of data
  outstanding gets too large, discard output until it is drained and we are
  able to do a full redraw. Prevents tmux sitting on a huge buffer that the
  terminal will take forever to consume.

* Do not redraw a client unless we realistically think it can accept the data -
  defer redraws until the client has nothing else waiting to write.

CHANGES FROM 2.3 TO 2.4, 20 April 2017

Incompatible Changes
====================

* Key tables have undergone major changes. Mode key tables are no longer
  separate from the main key tables. All mode key tables have been removed,
  together with the -t flag to bind-key and unbind-key.

  The emacs-edit, vi-edit, emacs-choose and vi-choose tables have been replaced
  by fixed key bindings in the command prompt and choose modes. The mode-keys
  and status-keys options remain.

  The emacs-copy and vi-copy tables have been replaced by the copy-mode and
  copy-mode-vi tables. Commands are sent using the -X and -N flags to
  send-keys. So the following:

    bind -temacs-copy C-Up scroll-up
    bind -temacs-copy -R5 WheelUpPane scroll-up

  Becomes:

    bind -Tcopy-mode C-Up send -X scroll-up
    bind -Tcopy-mode WheelUpPane send -N5 -X scroll-up

  These changes allows the full command parser (including command sequences) and
  command set to be used - for example, the normal command prompt with editing
  and history is now used for searching, jumping, and so on instead of a custom
  one. The default C-r binding is now:

    bind -Tcopy-mode C-r command-prompt -i -p'search up' "send -X search-backward-incremental '%%'"

  There are also some new commands available with send -X, such as
  copy-pipe-and-cancel.
* set-remain-on-exit has gone -- can be achieved with hooks instead.
* Hooks: before hooks have been removed and only a selection of commands now
  have after hooks (they are no longer automatic). Additional hooks have been
  added.
* The xterm-keys option now defaults to on.

Normal Changes
==============

* Support for mouse double and triple clicks.
* BCE (Background Colour Erase) is now supported.
* All occurrences of a search string in copy mode are now highlighted;
  additionally, the number of search results is displayed. The highlighting
  updates interactively with the default emacs key bindings (incremental
  search).
* source-file now understands glob patterns.
* Formats now have simple comparisons:

    #{==:a,b}
    #{!=:a,b}

* There are the following new formats:

  - #{version} -- the tmux server version;
  - #{client_termtype} -- the terminal type of the client;
  - #{client_name} -- the name of a client;
  - #{client_written} -- the number of bytes written to the client.

* The configuration file now accepts %if/%endif conditional blocks which are
  processed when it is parsed; the argument is a format string (useful with the
  new format comparison options).
* detach-client now has -E to execute a command replacing the client instead of
  exiting.
* Add support for custom command aliases, this is an array option which
  contains items of the form "alias=command". This is consulted when an
  unknown command is parsed.
* break-pane now has -n to specify the new window name.
* OSC 52 support has been added for programs inside tmux to set a tmux buffer.
* The mouse "all event" mode (1003) is now supported.
* Palette setting is now possible (OSC 4 and 104).
* Strikethrough support (a recent terminfo is required).
* Grouped sessions can now be named (new -t).
* terminal-overrides and update-environment are now array options (the previous
  set -ag syntax should work without change).
* There have been substantial performance improvements.

CHANGES FROM 2.2 TO 2.3, 29 September 2016

Incompatible Changes
====================

None.

Normal Changes
==============

* New option 'pane-border-status' to add text in the pane borders.
* Support for hooks on commands: 'after' and 'before' hooks.
* 'source-file' understands '-q' to suppress errors for nonexistent files.
* Lots of UTF8 improvements, especially on MacOS.
* 'window-status-separator' understands #[] expansions.
* 'split-window' understands '-f' for performing a full-width split.
* Allow report count to be specified when using 'bind-key -R'.
* 'set -a' for appending to user options (@foo) is now supported.
* 'display-panes' can now accept a command to run, rather than always
  selecting the pane.

CHANGES FROM 2.1 TO 2.2, 10 April 2016

Incompatible Changes
====================

* The format strings which referenced time have been removed.  Instead:

  #{t:window_activity}

can be used.

* Support for TMPDIR has been removed.  Use TMUX_TMPDIR instead.
* UTF8 detection now happens automatically if the client supports it, hence
  the:

  mouse-utf8
  utf8

  options has been removed.
* The:

  mouse_utf8_flag

  format string has been removed.
* The -I option to show-messages has been removed.  See:

  #{t:start_time}

  format option instead.

Normal Changes
==============

* Panes are unzoomed with selectp -LRUD
* New formats added:

  #{scroll_position}
  #{socket_path}
  #{=10:...} -- limit to N characters (from the start)
  #{=-10:...} -- limit to N characters (from the end)
  #{t:...} -- used to format time-based formats
  #{b:...} -- used to ascertain basename from string
  #{d:...} -- used to ascertain dirname from string
  #{s:...} -- used to perform substitutions on a string

* Job output is run via the format system, so formats work again
* If display-time is set to 0, then the indicators wait for a key to be
  pressed.
* list-keys and list-commands can be run without starting the tmux server.
* kill-session learns -C to clear all alerts in all windows of the session.
* Support for hooks (internal for now), but hooks for the following have been
  implemented:

  alert-bell
  alert-silence
  alert-activity
  client-attached
  client-detached
  client-resized
  pane-died
  pane-exited

* RGB (24bit) colour support.  The 'Tc' flag must be set in the external TERM
  entry (using terminal-overrides or a custom terminfo entry).

CHANGES FROM 2.0 TO 2.1, 18 October 2015

Incompatible Changes
====================

* Mouse-mode has been rewritten.  There's now no longer options for:
	- mouse-resize-pane
	- mouse-select-pane
	- mouse-select-window
	- mode-mouse

  Instead there is just one option:  'mouse' which turns on mouse support
  entirely.
* 'default-terminal' is now a session option.  Furthermore, if this is set
  to 'screen-*' then emulate what screen does.  If italics are wanted, this
  can be set to 'tmux' but this is still new and not necessarily supported
  on all platforms with older ncurses installs.
* The c0-* options for rate-limiting have been removed.  Instead, a backoff
  approach is used.

Normal Changes
==============

* New formats:
	- session_activity
	- window_linked
	- window_activity_format
	- session_alerts
	- session_last_attached
	- client_pid
	- pid
* 'copy-selection', 'append-selection', 'start-named-buffer' now understand
  an '-x' flag to prevent it exiting copying mode.
* 'select-pane' now understands '-P' to set window/pane background colours.
* 'renumber-windows' now understands windows which are unlinked.
* 'bind' now understands multiple key tables.  Allows for key-chaining.
* 'select-layout' understands '-o' to undo the last layout change.
* The environment is updated when switching sessions as well as attaching.
* 'select-pane' now understands '-M' for marking a pane.  This marked pane
  can then be used with commands which understand src-pane specifiers
  automatically.
* If a session/window target is prefixed with '=' then only an exact match
  is considered.
* 'move-window' understands '-a'.
* 'update-environment' understands '-E' when attach-session is used on an
  already attached client.
* 'show-environment' understands '-s' to output Bourne-compatible commands.
* New option: 'history-file' to save/restore command prompt history.
* Copy mode is exited if the history is cleared whilst in copy-mode.
* 'copy-mode' learned '-e' to exit copy-mode when scrolling to end.

CHANGES FROM 1.9a TO 2.0, 06 March 2015

Incompatible Changes
====================

* The choose-list command has been removed.
* 'terminal-overrides' is now a server option, not a session option.
* 'message-limit' is now a server option, not a session option.
* 'monitor-content' option has been removed.
* 'pane_start_path' option has been removed.
* The "info" mechanism which used to (for some commands) provide feedback
  has been removed, and like other commands, they now produce nothing on
  success.

Normal Changes
==============

* tmux can now write an entry to utmp if the library 'utempter' is present
  at compile time.
* set-buffer learned append mode (-a), and a corresponding
  'append-selection' command has been added to copy-mode.
* choose-mode now has the following commands which can be bound:
	- start-of-list
	- end-of-list
	- top-line
	- bottom-line

* choose-buffer now understands UTF-8.
* Pane navigation has changed:
	- The old way of always using the top or left if the choice is ambiguous.
	- The new way of remembering the last used pane is annoying if the
	  layout is balanced and the leftmost is obvious to the user (because
	  clearly if we go right from the top-left in a tiled set of four we want
	  to end up in top-right, even if we were last using the bottom-right).

      So instead, use a combination of both: if there is only one possible
      pane alongside the current pane, move to it, otherwise choose the most
      recently used of the choice.
* 'set-buffer' can now be told to give names to buffers.
* The 'new-session', 'new-window', 'split-window', and 'respawn-pane' commands
  now understand multiple arguments and handle quoting problems correctly.
* 'capture-pane' understands '-S-' to mean the start of the pane, and '-E-' to
  mean the end of the pane.
* Support for function keys beyond F12 has changed.  The following explains:
	- F13-F24 are S-F1 to S-F12
	- F25-F36 are C-F1 to C-F12
	- F37-F48 are C-S-F1 to C-S-F12
	- F49-F60 are M-F1 to M-F12
	- F61-F63 are M-S-F1 to M-S-F3

 Therefore, F13 becomes a binding of S-F1, etc.
* Support using pane id as part of session or window specifier (so % means
  session-of-%1 or window-of-%1) and window id as part of session
  (so @1 means session-of-@1).
* 'copy-pipe' command now understands formats via -F
* 'if-shell'  command now understands formats via -F
* 'split-window' and 'join-window' understand -b to create the pane to the left
  or above the target pane.

CHANGES FROM 1.9 TO 1.9a, 22 February 2014

NOTE: This is a bug-fix release to address some important bugs which just
missed the 1.9 deadline, but were found afterwards.

Normal Changes
==============

* Fix crash due to uninitialized lastwp member of layout_cell
* Fix -fg/-bg/-style with 256 colour terminals.

CHANGES FROM 1.8 TO 1.9, 20 February 2014

NOTE:  This release has bumped the tmux protocol version.  It is therefore
advised that the prior tmux server is restarted when this version of tmux is
installed, to avoid protocol mismatch errors for newer clients trying to
talk to an older running tmux server.

Incompatible Changes
====================

* 88 colour support has been removed.
* 'default-path' has been removed.  The new-window command accepts '-c' to
  cater for this.  The previous value of "." can be replaced with: 'neww -c
  $PWD', the previous value of '' which meant current path of the pane can
  be specified as:  'neww -c "#{pane_current_path}"'

Deprecated Changes
==================

* The single format specifiers:  #A -> #Z (where defined) have been
  deprecated and replaced with longer-named equivalents, as listed in the
  FORMATS section of the tmux manpage.
* The various foo-{fg,bg,attr} commands have been deprecated and replaced
  with equivalent foo-style option instead.  Currently this is still
  backwards-compatible, but will be removed over time.

Normal Changes
==============

* A new environment variable TMUX_TMPDIR is now honoured, allowing the
  socket directory to be set outside of TMPDIR (/tmp/ if not set).
* If -s not given to swap-pane the current pane is assumed.
* A #{pane_synchronized} format specifier has been added to be a conditional
  format if a pane is in a synchronised mode (c.f. synchronize-panes)
* Tmux now runs under Cygwin natively.
* Formats can now be nested within each other and expanded accordingly.
* Added 'automatic-rename-format' option to allow the automatic rename
  mechanism to use something other than the default of
  #{pane_current_command}.
* new-session learnt '-c' to specify the starting directory for that session
  and all subsequent windows therein.
* The session name is now shown in the message printed to the terminal when
  a session is detached.
* Lots more format specifiers have been added.
* Server race conditions have been fixed; in particular commands are not run
  until after the configuration file is read completely.
* Case insensitive searching in tmux's copy-mode is now possible.
* attach-session and switch-client learnt the '-t' option to accept a window
  and/or a pane to use.
* Copy-mode is only exited if no selection is in progress.
* Paste key in copy-mode is now possible to enter text from the clipboard.
* status-interval set to '0' now works as intended.
* tmux now supports 256 colours running under fbterm.
* Many bug fixes!

CHANGES FROM 1.7 TO 1.8, 26 March 2013

Incompatible Changes
====================

* layout redo/undo has been removed.

Normal Changes
==============

* Add halfpage up/down bindings to copy mode.
* Session choosing fixed to work with unattached sessions.
* New window options window-status-last-{attr,bg,fg} to denote the last
  window which was active.
* Scrolling in copy-mode now scrolls the region without moving the mouse
  cursor.
* run-shell learnt '-t' to specify the pane to use when displaying output.
* Support for middle-click pasting.
* choose-tree learns '-u' to start uncollapsed.
* select-window learnt '-T' to toggle to the last window if it's already
  current.
* New session option 'assume-paste-time' for pasting text versus key-binding
  actions.
* choose-* commands now work outside of an attached client.
* Aliases are now shown for list-commands command.
* Status learns about formats.
* Free-form options can be set with set-option if prepended with an '@'
  sign.
* capture-pane learnt '-p' to send to stdout, and '-e' for capturing escape
  sequences, and '-a' to capture the alternate screen, and '-P' to dump
  pending output.
* Many new formats added (client_session, client_last_session, etc.)
* Control mode, which is a way for a client to send tmux commands.
  Currently more useful to users of iterm2.
* resize-pane learnt '-x' and '-y' for absolute pane sizing.
* Config file loading now reports errors from all files which are loaded via
  the 'source-file' command.
* 'copy-pipe' mode command to copy selection and pipe the selection to a
  command.
* Panes can now emit focus notifications for certain applications
  which use those.
* run-shell and if-shell now accept formats.
* resize-pane learnt '-Z' for zooming a pane temporarily.
* new-session learnt '-A' to make it behave like attach-session.
* set-option learnt '-o' to prevent setting an option which is already set.
* capture-pane and show-options learns '-q' to silence errors.
* New command 'wait-for' which blocks a client until woken up again.
* Resizing panes will now reflow the text inside them.
* Lots and lots of bug fixes, fixing memory-leaks, etc.
* Various manpage improvements.

CHANGES FROM 1.6 TO 1.7, 13 October 2012

* tmux configuration files now support line-continuation with a "\" at the
  end of a line.
* New option status-position to move the status line to the top or bottom of
  the screen.
* Enforce history-limit option when clearing the screen.
* Give each window a unique id, like panes but prefixed with @.
* Add pane id to each pane in layout description (while still accepting
  the old form).
* Provide defined ways to set the various default-path possibilities: ~
  for home directory, . for server start directory, - for session start
  directory and empty for the pane's working directory (the default). All
  can also be used as part of a relative path (eg -/foo). Also provide -c
  flags to neww and splitw to override default-path setting.
* Add -l flag to send-keys to send input literally (without translating
  key names).
* Allow a single option to be specified to show-options to show just that
  option.
* New command "move-pane" (like join-pane but allows the same window).
* join-pane and move-pane commands learn "-b" option to place the pane to
  the left or above.
* Support for bracketed-paste mode.
* Allow send-keys command to accept hex values.
* Add locking around "start-server" to avoid race-conditions.
* break-pane learns -P/-F arguments for display formatting.
* set-option learns "-q" to make it quiet, and not print out anything.
* copy mode learns "wrap-search" option.
* Add a simple form of output rate limiting by counting the number of
  certain C0 sequences (linefeeds, backspaces, carriage returns) and if it
  exceeds a threshold (current default 250/millisecond), start to redraw
  the pane every 100 milliseconds instead of making each change as it
  comes. Two configuration options - c0-change-trigger and
  c0-change-interval.
* find-window learns new flags:  "-C", "-N", "-T" to match against either or
  all of a window's content, name, or title.  Defaults to all three options
  if none specified.
* find-window automatically selects the appropriate pane for the found
  matches.
* show-environment can now accept one option to show that environment value.
* Exit mouse mode when end-of-screen reached when scrolling with the mouse
  wheel.
* select-layout learns -u and -U for layout history stacks.
* kill-window, detach-client, kill-session all  learn "-a" option for
  killing all but the current thing specified.
* move-window learns "-r" option to renumber window sequentially in a
  session.
* New session option "renumber-windows" to automatically renumber windows in
  a session when a window is closed.  (see "move-window -r").
* Only enter copy-mode on scroll up.
* choose-* and list-* commands all use "-F" for format specifiers.
* When spawning external commands, the value from the "default-shell" option
  is now used, rather than assuming /bin/sh.
* New choose-tree command to render window/sessions as a tree for selection.
* display-message learns new format options.
* For linked-windows across sessions, all flags for that window are now
  cleared across sessions.
* Lots and lots of bug fixes, fixing memory-leaks, etc.
* Various manpage improvements.

CHANGES FROM 1.5 TO 1.6, 23 January 2012

* Extend the mode-mouse option to add a third choice which means the mouse
  does not enter copy mode.
* Add a -r flag to switch-client to toggle the client read-only flag.
* Add pane-base-index option.
* Support \ for line continuation in the configuration file.
* Framework for more powerful formatting of command output and use it for
  list-{panes,windows,sessions}. This allows more descriptive replacements
  (such as #{session_name}) and conditionals.
* Mark dead panes with some text saying they are dead.
* Reject $SHELL if it is not a full path.
* Add -S option to refresh-client to redraw status line.
* Add an else clause for if-shell.
* Try to resolve relative paths for loadb and saveb (first, using client
  working directory, if any, then default-path or session working directory).
* Support for \e[3J to clear the history and send the corresponding
  terminfo code (E3) before locking.
* When in copy mode, make repeat count indicate buffer to replace, if used.
* Add screen*:XT to terminal-overrides for tmux-in-tmux.
* Status-line message attributes added.
* Move word-separators to be a session rather than window option.
* Change the way the working directory for new processes is discovered. If
  default-path isn't empty, it is used. Otherwise, if a new window is created
  from the command-line, the working directory of the client is used. If not,
  platform specific code is used to retrieve the current working directory
  of the process in the active pane. If that fails, the directory where the
  session was created is used, instead.
* Do not change the current pane if both mouse-select-{pane,window} are
  enabled.
* Add \033[s and \033[u to save and restore cursor position.
* Allow $HOME to be used as default-path.
* Add CNL and CPL escape sequences.
* Calculate last position correctly for UTF-8 wide characters.
* Add an option allow-rename to disable the window rename escape sequence.
* Attributes for each type of status-line alert (ie bell, content and
  activity) added. Therefore, remove the superfluous options
  window-status-alert-{attr,bg,fg}.
* Add a -R flag to send-keys to reset the terminal.
* Add strings to allow the aixterm bright colours to be used when
  configuring colours.
* Drop the ability to have a list of keys in the prefix in favour of two
  separate options, prefix and prefix2.
* Flag -2 added to send-prefix to send the secondary prefix key.
* Show pane size in top right of display panes mode.
* Some memory leaks plugged.
* More command-prompt editing improvements.
* Various manpage improvements.
* More Vi mode improvements.

CHANGES FROM 1.4 TO 1.5, 09 July 2011

* Support xterm mouse modes 1002 and 1003.
* Change from a per-session stack of buffers to one global stack. This renders
  copy-buffer useless and makes buffer-limit now a server option.
* Fix most-recently-used choice by avoiding reset the activity timer for
  unattached sessions every second.
* Add a -P option to new-window and split-window to print the new window or
  pane index in target form (useful to pass it into other commands).
* Handle a # at the end of a replacement string (such as status-left)
  correctly.
* Support for UTF-8 mouse input (\033[1005h) which was added in xterm 262.
  If the new mouse-utf8 option is on, UTF-8 mouse input is enabled for all
  UTF-8 terminals. The option defaults to on if LANG etc are set in the same
  manner as the utf8 option.
* Support for HP-UX.
* Accept colours of the hex form #ffffff and translate to the nearest from the
  xterm(1) 256-colour set.
* Clear the non-blocking IO flag (O_NONBLOCK) on the stdio file descriptors
  before closing them (fixes things like "tmux ls && cat").
* Use TMPDIR if set.
* Fix next and previous session functions to actually work.
* Support -x and -y for new-session to specify the initial size of the window
  if created detached with -d.
* Make bind-key accept characters with the top-bit-set and print them as octal.
* Set $TMUX without the session when background jobs are run.
* Simplify the way jobs work and drop the persist type, so all jobs are
  fire-and-forget.
* Accept tcgetattr/tcsetattr(3) failure, fixes problems with fatal() if the
  terminal disappears while locked.
* Add a -P option to detach to HUP the client's parent process (usually causing
  it to exit as well).
* Support passing through escape sequences to the underlying terminal by using
  DCS with a "tmux;" prefix.
* Prevent tiled producing a corrupt layout when only one column is needed.
* Give each pane created in a tmux server a unique id (starting from 0), put it
  in the TMUX_PANE environment variable and accept it as a target.
* Allow a start and end line to be specified for capture-pane which may be
  negative to capture part of the history.
* Add -a and -s options to lsp to list all panes in the server or session
  respectively. Likewise add -s to lsw.
* Change -t on display-message to be target-pane for the #[A-Z] replacements
  and add -c as target-client.
* The attach-session command now prefers the most recently used unattached
  session.
* Add -s option to detach-client to detach all clients attached to a session.
* Add -t to list-clients.
* Change window with mouse wheel over status line if mouse-select-window is on.
* When mode-mouse is on, automatically enter copy mode when the mouse is
  dragged or the mouse wheel is used. Also exit copy mode when the mouse wheel
  is scrolled off the bottom.
* Provide #h character pair for short hostname (no domain).
* Don't use strnvis(3) for the title as it breaks UTF-8.
* Use the tsl and fsl terminfo(5) capabilities to update terminal title and
  automatically fill them in on terminals with the XT capability (which means
  their title setting is xterm-compatible).
* Add a new option, mouse-resize-pane. When on, panes may be resized by
  dragging their borders.
* Fix crash by resetting last pane on {break,swap}-pane across windows.
* Add three new copy-mode commands - select-line, copy-line, copy-end-of-line.
* Support setting the xterm clipboard when copying from copy mode using the
  xterm escape sequence for the purpose (if xterm is configured to allow it).
* Support xterm(1) cursor colour change sequences through terminfo(5) Cc
  (set) and Cr (reset) extensions.
* Support DECSCUSR sequence to set the cursor style with two new terminfo(5)
  extensions, Cs and Csr.
* Make the command-prompt custom prompts recognize the status-left option
  character pairs.
* Add a respawn-pane command.
* Add a couple of extra xterm-style keys that gnome terminal provides.
* Allow the initial context on prompts to be set with the new -I option to
  command-prompt. Include the current window and session name in the prompt
  when renaming and add a new key binding ($) for rename session.
* Option bell-on-alert added to trigger the terminal bell when there is an
  alert.
* Change the list-keys format so that it shows the keys using actual tmux
  commands which should be able to be directly copied into the config file.
* Show full targets for lsp/lsw -a.
* Make confirm-before prompt customizable with -p option like command-prompt
  and add the character pairs #W and #P to the default kill-{pane,window}
  prompts.
* Avoid sending data to suspended/locked clients.
* Small memory leaks in error paths plugged.
* Vi mode improvements.

CHANGES FROM 1.3 TO 1.4, 27 December 2010

* Window bell reporting fixed.
* Show which pane is active in the list-panes output.
* Backoff reworked.
* Prevent the server from dying when switching into copy mode when already
  in a different mode.
* Reset running jobs when the status line is enabled or disabled.
* Simplify xterm modifier detection.
* Avoid crashing in copy mode if the screen size is too small for the
  indicator.
* Flags -n and -p added to switch-client.
* Use UTF-8 line drawing characters on UTF-8 terminals, thus fixing some
  terminals (eg putty) which disable the vt100 ACS mode switching sequences
  in UTF-8 mode. On terminals without ACS, use ASCII equivalents.
* New server option exit-unattached added.
* New session option destroy-unattached added.
* Fall back on normal session choice method if $TMUX exists but is invalid
  rather than rejecting.
* Mark repeating keys with "(repeat)" in the key list.
* When removing a pane, don't change the active pane unless the active pane
  is actually the one being removed.
* New command last-pane added.
* AIX fixes.
* Flag -a added to unbind-key.
* Add XAUTHORITY to update-environment.
* More info regarding window and pane flags is now shown in list-*.
* If VISUAL or EDITOR contains "vi" configure mode-keys and status-key to vi.
* New window option monitor-silence and session option visual-silence added.
* In the built-in layouts distribute the panes more evenly.
* Set the default value of main-pane-width to 80 instead of 81.
* Command-line flag -V added.
* Instead of keeping a per-client prompt history make it global.
* Fix rectangle copy to behave like emacs (the cursor is not part of the
  selection on the right edge but on the left it is).
* Flag -l added to switch-client.
* Retrieve environment variables from the global environment rather than
  getenv(3), thus allowing them to be updated during the configuration file.
* New window options other-pane-{height,width} added.
* More minor bugs fixed and manpage improvements.

CHANGES FROM 1.2 TO 1.3, 18 July 2010

* New input parser.
* Flags to move through panes -UDLR added to select-pane.
* Commands up-pane, and down-pane removed, since equivalent behaviour is now
  available through the target flag (-t:+ and -t:-).
* Jump-forward/backward in copy move (based on vi's F, and f commands).
* Make paste-buffer accept a pane as a target.
* Flag -a added to new-window to insert a window after an existing one, moving
  windows up if necessary.
* Merge more mode into copy mode.
* Run job commands explicitly in the global environment (which can be modified
  with setenv -g), rather than with the environment tmux started with.
* Use the machine's hostname as the default title, instead of an empty string.
* Prevent double free if the window option remain-on-exit is set.
* Key string conversions rewritten.
* Mark zombie windows as dead in the choose-window list.
* Tiled layout added.
* Signal handling reworked.
* Reset SIGCHLD after fork to fix problems with some shells.
* Select-prompt command removed. Therefore, bound ' to command-prompt -p index
  "select-window -t:%%" by default.
* Catch SIGHUP and terminate if running as a client, thus avoiding clients from
  being left hanging around when, for instance, a SSH session is disconnected.
* Solaris 9 fixes (such as adding compat {get,set}env(3) code).
* Accept none instead of default for attributes.
* Window options window-status-alert-{alert,bg,fg} added.
* Flag -s added to the paste-buffer command to specify a custom separator.
* Allow dragging to make a selection in copy mode if the mode-mouse option is
  set.
* Support the mouse scroll wheel.
* Make pipe-pane accept special character sequences (eg #I).
* Fix problems with window sizing when starting tmux from .xinitrc.
* Give tmux sockets (but not the containing folder) group permissions.
* Extend the target flags (ie -t) to accept an offset (for example -t:+2), and
  make it wrap windows, and panes.
* New command choose-buffer added.
* New server option detach-on-destroy to set what happens to a client when the
  session it is attached to is destroyed. If on (default), the client is
  detached. Otherwise, the client is switched to the most recently active of
  the remaining sessions.
* The commands load-buffer, and save-buffer now accept a dash (-) as the file
  to read from stdin, or write to stdout.
* Custom layouts added.
* Additional code reduction, bug fixes, and manpage enhancements.

CHANGES FROM 1.1 TO 1.2, 10 March 2010

* Switch to libevent.
* Emulate the ri (reverse index) capability, ergo allowing tmux to at least
  start on Sun consoles (TERM=sun, or sun-color).
* Assign each entry a number, or lowercase letter in choose mode, and accept
  that as a shortcut key.
* Permit top-bit-set characters to be entered in the status line.
* Mark no-prefix keys with (no prefix), rather than [] in list-keys.
* New command show-messages (alias showmsgs), and new session option
  message-limit, to show a per-client log of status lines messages up to the
  number defined by message-limit.
* Do not interpret #() for display-message to avoid leaking commands.
* New window options window-status-format, and window-status-current-format to
  control the format of each window in the status line.
* Add a -p flag to display-message to print the output, instead of displaying
  it in the status line.
* Emulate il1, dl1, ich1 to run with vt100 feature set.
* New command capture-pane (alias capturep) to copy the entire pane contents
  to a paste buffer.
* Avoid duplicating code by adding a -w flag to set-option, and show-options to
  set, and show window options. The commands set-window-option, and
  show-window-options are now aliases.
* Panes can now be referred to as top, bottom, top-left, etc.
* Add server-wide options, which can be set with set-option -s, and shown with
  show-options -s.
* New server option quiet (like -q from the command line).
* New server option escape-time to set the timeout used to detect if escapes
  are alone, part of a function key, or meta sequence.
* New session options pane-active-border-bg, pane-active-border-fg,
  pane-border-bg, and pane-border-fg to set pane colours.
* Make split-window accept a pane target, instead of a window.
* New command join-pane (alias joinp) to split, and move an existing pane into
  the space (the opposite of break-pane), thus simplifying calls to
  split-window, followed by move-window.
* Permit S- prefix on keys for shift when the terminal/terminfo supports them.
* Window targets (-t flag) can now refer to the last window (!), next (+), and
  previous (-) window by number.
* Mode keys to jump to the bottom/top of history, end of the next word, scroll
  up/down, and reverse search in copy mode.
* New session option display-panes-active-colour to display the active pane in
  a different colour with the display-panes command.
* Read the socket path from $TMUX if it's present, and -L, and -S are not
  given.
* Vi-style mode keys B, W, and E to navigate between words in copy mode.
* Start in more mode when configuration file errors are detected.
* Rectangle copy support added.
* If attach-session was specified with the -r flag, make the client read-only.
* Per-window alternate-screen option.
* Make load-buffer work with FIFOs.
* New window option word-separators to set the characters considered as word
  separators in copy mode.
* Permit keys in copy mode to be prefixed by a repeat count, entered with [1-9]
  in vi mode, or M-[1-9] in emacs mode.
* utf8 improvements.
* As usual, additional code reduction, bug fixes, and manpage enhancements.

CHANGES FROM 1.0 TO 1.1, 05 November 2009

* New run-shell (alias run) command to run an external command without a
  window, capture it's stdout, and send it to output mode.
* Ability to define multiple prefix keys.
* Internal locking mechanism removed. Instead, detach each client and run the
  external command specified in the new session option lock-command (by default
  lock -np), thus allowing the system password to be used.
* set-password command, and -U command line flag removed per the above change.
* Add support for -c command line flag to execute a shell command.
* New lock-client (alias lockc), and lock-session (alias locks) commands to
  lock a particular client, or all clients attached to a session.
* Support C-n/C-p/C-v/M-v with emacs keys in choice mode.
* Use : for goto line rather than g in vi mode.
* Try to guess which client to use when no target client was specified. Finds
  the current session, and if only one client is present, use it. Otherwise,
  return the most recently used client.
* Make C-Down/C-Up in copy mode scroll the screen down/up one line without
  moving the cursor.
* Scroll mode superseded by copy mode.
* New synchronize-panes window option to send all input to all other panes in
  the same window.
* New lock-server session option to lock, when off (on by default), each
  session when it has been idle for the lock-after-time setting. When on, the
  entire server locks when all sessions have been idle for their individual
  lock-after-time setting.
* Add support for grouped sessions which have independent name, options,
  current window, but where the linked windows are synchronized (ie creating,
  killing windows are mirrored between the sessions). A grouped session may be
  created by passing -t to new-session.
* New mouse-select-pane session option to select the current pane with the
  mouse.
* Queue, and run commands in the background for if-shell, status-left,
  status-right, and #() by starting each once every status-interval. Adds the
  capability to call some programs which would previously cause the server to
  hang (eg sleep/tmux). It also avoids running commands excessively (ie if used
  multiple times, it will be run only once).
* When a window is zombified and automatic-rename is on, append [dead] to the
  name.
* Split list-panes (alias lsp) off from list-windows.
* New pipe-pane (alias pipep) to redirect a pane output to an external command.
* Support for automatic-renames for Solaris.
* Permit attributes to be turned off in #[] by prefixing with no (eg nobright).
* Add H/M/L in vi mode, and M-R/M-r in emacs to move the cursor to the top,
  middle, and bottom of the screen.
* -a option added to kill-pane to kill all except current pane.
* The -d command line flag is now gone (can be replaced by terminal-overrides).
  Just use op/AX to detect default colours.
* input/tty/utf8 improvements.
* xterm-keys rewrite.
* Additional code reduction, and bug fixes.

CHANGES FROM 0.9 TO 1.0, 20 September 2009

* Option to alter the format of the window title set by tmux.
* Backoff for a while after multiple incorrect password attempts.
* Quick display of pane numbers (C-b q).
* Better choose-window, choose-session commands and a new choose-client command.
* Option to request multiple responses when using command-prompt.
* Improved environment handling.
* Combine wrapped lines when pasting.
* Option to override terminal settings (terminal-overrides).
* Use the full range of ACS characters for drawing pane separator lines.
* Customisable mode keys.
* Status line colour options, with embedded colours in status-left/right, and
  an option to centre the window list.
* Much improved layouts, including both horizontal and vertical splitting.
* Optional visual bell, activity and content indications.
* Set the utf8 and status-utf8 options when the server is started with -u.
* display-message command to show a message in the status line, by default some
  information about the current window.
* Improved current process detection on NetBSD.
* unlink-window -k is now the same as kill-window.
* attach-session now works from inside tmux.
* A system-wide configuration file, /etc/tmux.conf.
* A number of new commands in copy mode, including searching.
* Panes are now specified using the target (-t) notation.
* -t now accepts fnmatch(3) patterns and looks for prefixes.
* Translate \r into \n when pasting.
* Support for binding commands to keys without the prefix key
* Support for alternate screen (terminfo smcup/rmcup).
* Maintain data that goes off screen after reducing the window size, so it can
  be restored when the size is increased again.
* New if-shell command to test a shell command before running a tmux command.
* tmux now works as the shell.
* Man page reorganisation.
* Many minor additions, much code tidying and several bug fixes.

CHANGES FROM 0.8 TO 0.9, 01 July 2009

* Major changes to build infrastructure: cleanup of makefiles and addition
  of a configure script.
* monitor-content window option to monitor a window for a specific fnmatch(3)
  pattern. The find-window command also now accepts fnmatch(3) patterns.
* previous-layout and select-layout commands, and a main-horizontal layout.
* Recreate the server socket on SIGUSR1.
* clear-history command.
* Use ACS line drawing characters for pane separator lines.
* UTF-8 improvements, and code to detect UTF-8 support by looking at
  environment variables.
* The resize-pane-up and resize-pane-down commands are now merged together
  into a new resize-pane command with -U and -D flags.
* confirm-before command to request a yes/no answer before executing dangerous
  commands.
* Status line bug fixes, support for UTF-8 (status-utf8 option), and a key to
  paste from the paste buffer.
* Support for some additional escape sequences and terminal features, including
  better support for insert mode and tab stops.
* Improved window resizing behaviour, modelled after xterm.
* Some code reduction and a number of miscellaneous bug fixes.

================================================================================

On 01 June 2009, tmux was imported into the OpenBSD base system. From this date
onward changes are logged as part of the normal CVS commit message to either
OpenBSD or SourceForge CVS. This file will be updated to contain a summary of
major changes with each release, and to mention important configuration or
command syntax changes during development.

The list of older changes is below.

================================================================================

21 May 2009

* stat(2) files before trying to load them to avoid problems, for example
  with "source-file /dev/zero".

19 May 2009

* Try to guess if the window is UTF-8 by outputting a three-byte UTF-8 wide
  character and seeing how much the cursor moves. Currently tries to figure out
  if this works by some stupid checks on the terminal, these need to be
  rethought. Also might be better using a width 1 character rather than width 2.
* If LANG contains "UTF-8", assume the terminal supports UTF-8, on the grounds
  that anyone who configures it probably wants UTF-8. Not certain if this is
  a perfect idea but let's see if it causes any problems.
* New window option: monitor-content. Searches for a string in a window and if
  it matches, highlight the status line.

18 May 2009

* main-horizontal layout and main-pane-height option to match vertical.
* New window option main-pane-width to set the width of the large left pane with
  main-vertical (was left-vertical) layout.
* Lots of layout cleanup. manual layout is now manual-vertical.

16 May 2009

* select-layout command and a few default key bindings (M-0, M-1, M-2, M-9) to
  select layouts.
* Recreate server socket on SIGUSR1, per SF feature request 2792533.

14 May 2009

* Keys in status line (p in vi mode, M-y in emacs) to paste the first line
  of the upper paste buffer. Suggested by Dan Colish.
* clear-history command to clear a pane's history.
* Don't force wrapping with \n when asked, let the cursor code figure it out.
  Should fix terminals which use this to detect line breaks.
* Major cleanup and restructuring of build infrastructure. Still separate files
  for GNU and BSD make, but they are now hugely simplified at the expense of
  adding a configure script which must be run before make. Now build and
  install with:

	$ ./configure && make && sudo make install

04 May 2009

* Use ACS line drawing characters for pane separator lines.

30 April 2009

* Support command sequences without a space before the semicolon, for example
  "neww; neww" now works as well as "neww ; neww". "neww;neww" is still an
  error.
* previous-layout command.
* Display the layout name in window lists.
* Merge resize-pane-up and resize-pane-down into resize-pane with -U and -D
  flags.

29 April 2009

* Get rid of compat/vis.* - only one function was used which is easily
  replaced,and less compat code == good.

27 April 2009

* Avoid using the prompt history when the server is locked, and prevent any
  input entered from being added to the client's prompt history.
* New command, confirm-before (alias confirm), which asks for confirmation
  before executing a command. Bound "&" and "x" by default to confirm-before
  "kill-window" and confirm-before "kill-pane", respectively.

23 April 2009

* Support NEL, yet another way of making newline. Fixes the output from some
  Gentoo packaging thing. Reported by someone on SF then logs that allowed a
  fix sent by tcunha.
* Use the xenl terminfo flag to detect early-wrap terminals like the FreeBSD
  console. Many thanks for a very informative email from Christian Weisgerber.

21 April 2009

* tmux 0.8 released.

17 April 2009

* Remove the right number of characters from the buffer when escape then
  a cursor key (or other key prefixed by \033) is pressed. Reported by
  Stuart Henderson.

03 April 2009

* rotate-window command. -U flag (default) for up, -D flag for down.

02 April 2009

* Change scroll/pane redraws to only redraw the single pane affected rather
  than the entire window.
* If redrawing the region would mean redrawing > half the pane, just schedule
  to redraw the entire window. Also add a flag to skip updating the window any
  further if it is scheduled to be redrawn. This has the effect of batching
  multiple redraws together.

01 April 2009

* Basic horizontal splitting and layout management. Still some redraw and other
  issues - particularly, don't mix with manual pane resizing, be careful when
  viewing from multiple clients and don't expect shell windows to redraw very
  well after the layout is changed; generally cycling the layout a few times
  will fix most problems. Getting this in for testing while I think about how
  to deal with manual mode.

  Split window as normal and cycle the layouts with C-b space. Some of the
  layouts will work better when swap-pane comes along.

31 March 2009

* AIX port, thanks to cmihai for access to a box. Only tested on 6.1 with xlc
  10.1 (make sure CC is set). Needs GNU make and probably ncurses (didn't try
  plain curses). Also won't build with DEBUG, so comment the FDEBUG=1 line in
  GNUmakefile.
* Draw a vertical line on the right when the window size is less than the
  terminal size. This is partly to shake out any horizontal limit bugs on the
  way to horizontal splitting/pane tiling. Currently a bit slow since it has to
  do a lot of redrawing but hopefully that will improve as I get some better
  ideas for how to do it.
* Fix remaining problems with copy and paste and UTF-8.

28 March 2009

* Better UTF-8 support, including combined characters. Unicode data is now
  stored as UTF-8 in a separate array, the code does a lookup into this every
  time it gets to a UTF-8 cell. Zero width characters are just appended onto
  the UTF-8 data for the previous cell. This also means that almost no bytes
  extra are wasted non-Unicode data (yay).

  Still some oddities, such as copy mode skips over wide characters in a
  strange way, and the code could do with some tidying.
* Key repeating is now a property of the key binding not of the command.
  Repeat is turned on when the key is bound with the -r flag to bind-key.
  next/previous-window no longer repeat by default as it turned out to annoy
  me.

27 March 2009

* Clear using ED when redrawing the screen. I foolishly assumed using spaces
  would be equivalent and terminals would pick up on this, but apparently not.
  This fixes copy and paste in xterm/rxvt.
* Sockets in /tmp are now created in a subdirectory named, tmux-UID, eg
  tmux-1000. The default socket is thus /tmp/tmux-UID/default. To start a
  separate server, the new -L command line option should be used: this creates
  a socket in the same directory with a different name ("-L main" will create
  socket called "main"). -S should only be used to place the socket outside
  /tmp. This makes sockets a little more secure and a bit more convenient to
  use multiple servers.

21 March 2009

* New session flag "set-remain-on-exit" to set remain-on-exit flag for new
  windows created in that session (like "remain-by-default" used to do). Not
  perfectly happy about this, but until I can think of a good way to introduce
  it generically (maybe a set of options in the session) this will do. Fixes
  SF request 2527847.

07 March 2009

* Support for 88 colour terminals.
* break-pane command to create a new window using an existing pane.

02 March 2009

* Make escape key timer work properly so escape+key can be used without
  lightning fast key presses.

13 February 2009

* Redo mode keys slightly more cleanly and apply them to command prompt
  editing. vi or emacs mode is controlled by the session option status-keys.

12 February 2009

* Looking up argv[0] is expensive, so just use p_comm for the window name which
  is good enough. Also increase name update time to 500 ms.

11 February 2009

* Only use ri when actually at the top of the screen; just move the cursor up
  otherwise.
* FreeBSD's console wraps lines at $COLUMNS - 1 rather than $COLUMNS (the
  cursor can never be beyond $COLUMNS - 1) and does not appear to support
  changing this behaviour, or any of the obvious possibilities (turning off
  right margin wrapping, insert mode). This is irritating, most notably because
  it impossible to write to the very bottom-right of the screen without
  scrolling. To work around this, if built on FreeBSD and run with a "cons"
  $TERM, the bottom-right cell on the screen is omitted.
* Emulate scroll regions (slowly) to support the few terminals which don't have
  it (some of which don't really have any excuse).

10 February 2009

* No longer redraw the status line every status-interval unless it has actually
  changed.

08 February 2009

* Don't treat empty arguments ("") differently when parsing configuration
  file/command prompt rather than command line.
* tmux 0.7 released.

03 February 2009

* New command, copy-buffer (alias copyb), to copy a session paste buffer to
  another session.

01 February 2009

* The character pair #(command) may now contain (escaped) right parenthesis.

30 January 2009

* . now bound to "command-prompt 'move-window %%'" by default, from joshe.

29 January 2009

* Window options to set status line fg, bg and attributes for a single
  window. Options are: window-status-fg, window-status-bg,
  window-status-attr. Set to "default" to use the session status colours.

  This allows quite neat things like:

	$ cat ~/bin/xssh
	#!/bin/sh

	if [ ! -z "$TMUX" ]; then
	case "$1" in
    	natalya)
	        tmux setw window-status-fg red >/dev/null
		;;
	natasha)
        	tmux setw window-status-fg yellow >/dev/null
		;;
	esac
	fi
	ssh "$@"
	[ ! -z "$TMUX" ] && tmux setw -u window-status-fg >/dev/null
	$ alias ssh="~/bin/xssh"

* Support #(command) in status-left, and status-right, which is displayed as
  the first line of command's output (e.g. set -g status-right
  "#(whoami)@#(hostname -s)"). Commands with )s aren't supported.

28 January 2009

* Support mouse in copy mode to move cursor. Can't do anything else at the
  moment until other mouse modes are handled.
* Better support for at least the most common variant of mouse input: parse it
  and adjust for different panes. Also support mouse in window/session choice
  mode.

27 January 2009

* Bring back the fancy window titles with session/window names: it is easy to
  work around problems with elinks (see FAQ).
* -u flag to scroll-mode and copy-mode to start scrolled one page
  up. scroll-mode -u is bound to prefix,page-up (ppage) by default.
* Allow status, mode and message attributes to be changed by three new options:
  status-attr, mode-attr, message-attr. A comma-separated list is accepted
  containing: bright, dim, underscore, blink, reverse, hidden, italics, for
  example:

	set -g status-attr bright,blink

  From Josh Elsasser, thanks!

26 January 2009

* Be more clever about picking the right process to create the window name.
* Don't balls up the terminal on UTF-8 combined characters. Don't support them
  properly either - they are just discarded for the moment.

25 January 2009

* load-buffer command

23 January 2009

* Use reverse colours rather than swapping fg and bg for message, mode and
  status line. This makes these usable on black and white terminals.
* Better error messages when creating a session or window fails.
* Oops. Return non-zero on error. Reported by Will Maier.

21 January 2009

* Handle SIGTERM (and kill-server which uses it), a bit more neatly - tidy
  up properly and print a nicer message. Same effect though :-).
* new-window now supports -k to kill target window if it exists.
* Bring back split-window -p and -l options to specify the height a percentage
  or as a number of lines.
* Make window and session choice modes allow you to choose items in vi keys
  mode (doh!). As a side-effect, this makes enter copy selection (as well
  as C-w/M-w) when using emacs keys in copy mode. Reported by merdely.

20 January 2009

* Darwin support for automatic-rename from joshe; Darwin doesn't seem to have
  a sane method of getting argv[0] and searching for the precise insane way
  is too frustrating, so this just uses the executable name.
* Try to change the window title to match the command running it in. This is
  done by reading argv[0] from the process group leader of the group that owns
  the tty (tcgetpgrp()). This can't be done portably so some OS-dependent code
  is introduced (ugh); OpenBSD, FreeBSD and Linux are supported at the moment.

  A new window flag, automatic-rename, is available: if this is set to off, the
  window name is not changed. Specifying a name with the new-window,
  new-session or rename-window commands will automatically set this flag to off
  for the window in question. To disable it entirely set the option to off
  globally (setw -g automatic-rename off).

19 January 2009

* Fix various stupid issues when the status line is turned off. Grr.
* Use reverse attributes for clock and cursor, otherwise they do not
  appear on black and white terminals.
* An error in a command sequence now stops execution of that sequence.
  Internally, each command code now passes a return code back rather than
  talking to the calling client (if any) directly.
* attach-session now tries to start the server if it isn't already started - if
  no sessions are created in .tmux.conf this will cause an error.
* Clean up starting server by making initial client get a special socketpair.

18 January 2009

* Unbreak UTF-8.
* -a flag to next-window and previous-window to select the next or previous
  window with activity or bell. Bound to M-n and M-p.
* find-window command to search window names, titles and visible content (but
  not history) for a string. If only one is found, the window is selected
  otherwise a choice list is shown. This (as with the other choice commands)
  only works from a key. Bound to "f" by default.
* Cleaned up command printing code, also enclose arguments with spaces in "s.
* Added command sequences. These are entered by separating each argument by a ;
  argument (spaces on both sides), for example:

	lsk ; lsc

  To use a literal ; as the argument prefix it with \, for example:

	bind x lsk \; lsc

  Commands are executed from left to right. Also note that command sequences do
  not support repeat-time repetition unless all commands making up the sequence
  support it.
* suspend-client command to suspend a client. Don't try to background it
  though...
* Mark attached sessions in sessions lists. Suggested by Simon Kuhnle.

17 January 2009

* tmux 0.6 released.

15 January 2009

* Support #H for hostname and #S for session name in status-left/right.
* Two new commands, choose-window and choose-session which work only when bound
  to a key and allow the window or session to be selected from a list. These
  are now bound to "w" and "s" instead of the list commands.

14 January 2009

* Rework the prefix-time stuff. The option is now called repeat-time and
  defaults to 500 ms. It only applies to a small subset of commands, currently:
  up-pane, down-pane, next-window, previous-window, resize-pane-up,
  resize-pane-down. These are the commands for which it is obviously useful,
  having it for everything else was just bloody annoying.
* The alt-up and alt-down keys now resize a pane by five lines at a time.
* switch-pane is now select-pane and requires -p to select a pane. The
  "o" key binding is changed to down-pane.
* up-pane and down-pane commands, bound to arrow up and down by default.
* Multiple vertical window splitting. Minimum pane size is four lines, an
  (unhelpful) error will be shown if attempting to split a window with less
  that eight lines. If the window is resized, as many panes are shown as can
  fit without reducing them below four lines. There is (currently!) not a way
  to show a hidden pane without making the window larger.

  Note the -p and -l options to split-window are now gone, these may reappear
  once I think them through again.
* Server locking on inactivity (lock-after-time) is now disabled by default.

13 January 2009

* kill-pane command.

12 January 2009

* command-prompt now accepts a single argument, a template string. Any
  occurrences of %% in this string are replaced by whatever is entered at the
  prompt and the result is executed as a command. This allows things like (now
  bound by default):

  	 bind , command-prompt "rename-window %%"

  Or my favourite:

         bind x command-prompt "split-window 'man %%'"

* Option to set prefix time, allowing multiple commands to be entered without
  pressing the prefix key again, so long as they each typed within this time of
  each other.
* Yet more hacks for key handling. Think it is just about working now.
* Two commands, resize-pane-up and resize-pane-down to resize a pane.
* Make the window pane code handle panes of different sizes, and add a -l
  and -p arguments to split-window to specify the new window size in lines
  or as a percentage.

11 January 2009

* Vertical window splitting. Currently can only split a window into two panes.
  New split-window command splits (bound to ") and switch-pane command (bound to
  o) switches between panes.

  close-pane, swap-pane commands are to follow. Also to come are pane resizing,
  >2 panes, the ability to break a pane out to a full window and vice versa and
  possibly horizontal splitting.

  Panes are subelements of windows rather than being windows in their own
  right. I tried to make them windows (so the splitting was at the session or
  client level) but this rapidly became very complex and invasive. So in the
  interests of having something working, I just made it so each window can have
  two child processes instead of one (and it still took me 12 hours straight
  coding). Now the concept is proven and much of the support code is there,
  this may change in future if more flexibility is needed.
* save-buffer command, from Tiago Cunha.

10 January 2009

* New option, lock-after-time. If there is no activity in the period specified
  by this option (in seconds), tmux will lock the server. Default is 1800 (30
  minutes), set to 0 to disable.
* Server locking. Two new commands: set-password to set a password (a
  preencrypted password may be specified with -c); and lock-server to lock the
  server until the password is entered. Also an additional command line flag,
  -U, to unlock from the shell. The default password is blank (any password
  accepted). If specifying an encrypted password from encrypt(1) in .tmux.conf
  with -c, don't forget to enclose it in single-quotes (') to prevent shell
  variable expansion.
* If a window is created from the command line, tmux will now use the same
  current working directory for the new process. A new default-path option to
  sets the working directory for processes created from keys or interactively
  from the prompt.
* New mode to display a large clock. Entered with clock-mode command (bound to
  C-b t by default); two window options: clock-mode-colour and clock-mode-style
  (12 or 24). This will probably be used as the basis for window locking.
* New command, server-info, to show some server information and terminal
  details.

09 January 2009

* Stop using ncurses variables and instead build a table of the codes we want
  into an array for each terminal type. This makes the code a little more
  untidy in places but gets rid of the awful global variables and calling
  setterm all the time, and shoves all the ncurses-dependent mess into a single
  file, tty-term.c. It also allows overriding single terminal codes, this is
  used to fix rxvt on some platforms (where it is missing dch) and in future
  may allow user customisation a la vim.
* Update key handling code. Simplify, support ctrl properly and add a new
  window option (xterm-keys) to output xterm key codes including ctrl and,
  if available, alt and shift.

08 January 2009

* If built without DEBUG (the release versions), don't cause a fatal error if
  the grid functions notice an input error, just log and ignore the
  request. This might mean me getting shouted at less often when bugs kill
  long-running sessions, at least in release versions.
* Hopefully fix cursor out-of-bounds checking when writing to grid. When I
  wrote the code I must have forgotten that the cursor can be one cell off the
  right of the screen (yes, I know), so there were number of out-of-bounds/
  overflow problems.

07 January 2009

* New flag to set and setw, -u, to unset an option (allowing it to inherit from)
  the global options again.
* Added more info messages for options changes.
* A bit of tidying and reorganisation of options code.

06 January 2009

* Don't crash when backspacing if cursor is off the right of the screen,
  reported by David Chisnall.
* Complete words at any point inside command in prompt, also use option name
  as well as command names.
* Per-client prompt history of up to 100 items.
* Use a splay tree for key bindings instead of an array. As a side-effect this
  sorts them when listed.

22 December 2008

* Use the right keys for home and end.

20 December 2008

* Add vim mode for tmux configuration file to examples/, from Tiago Cunha.

15 December 2008

* New command, source-file (alias source), to load a configuration
  file. Written by Tiago Cunha, many thanks.

13 December 2008

* Work around lack of dch. On Linux, the rxvt termcap doesn't have it (it is
  lying, but we can't really start disbelieving termcaps...). This is a bit
  horrible - I can see no way to do it without pretty much redrawing the whole
  line, but it works...

10 December 2008

* glibc's getopt(3) is useless: it is not POSIX compliant without jumping
  through non-portable hoops, and the method of resetting it is unclear (the
  man page on my system says set optind to 1, but other sources say 0). So,
  import OpenBSD's getopt_long.c into compat/ for use on Linux and use the
  clearly documented optreset = optind = 1 method. This fixes some strange
  issues with command parsing (getting the syntax wrong would prevent any
  further commands being parsed).

06 December 2008

* Bring set/setw/show/showw into line with other commands. This means that by
  default they now affect the current window (if any); the new -g flag must be
  passed to set the global options. This changes the behaviour of set/show and
  WILL BREAK CURRENT CONFIGURATIONS.

  In summary, whether in the configuration file, the command prompt, or a key
  binding, use -g to set a global option, use -t to specify a particular window
  or session, or omit both to try and use the current window or session.

  This makes set/show a bit of a pain but is the correct behaviour for
  setw/showw and is the same as every other command, so we can put up with a
  bit of pain for consistency.
* Redo window options. They now work in the same way to session options with a
  global options set. showw/setw commands now have similar syntax to show/set
  (including the ability to use abbreviations).

  PLEASE NOTE this includes the following configuration-breaking changes:

  - remain-by-default is now GONE, use "setw -g remain-on-exit" to apply the
    global window option instead;
  - mode-keys is now a window option rather than session - use "setw [-g]
    mode-keys" instead of set.

  There are also some additions:

  - message-fg and message-bg session options to control status line message
    colours;
  - mode-fg and mode-bg window options to set colours in window modes such as
    copy mode.

  The options code still a mess and now there is twice as much of it :-(.

02 December 2008

* Add support for including the window title in status-left or status-right
  strings by including the character pair "#T". This may be prefixed with
  a number to specify a maximum length, for example "#24T" to use at most
  24 characters of the title.
* Introduce two new options, status-left-length and status-right-length,
  control the maximum length of left and right components of the status bar.
* elinks (and possibly others) bypass the terminal and talk directly to X to
  restore the window title when exiting. tmux can't know about this particular
  bit of stupidity so the title ends up strange - the prefix isn't terribly
  important and elinks is quite useful so just get rid of it.

27 November 2008

* Tweaks to support Dragonfly.

17 November 2008

* tmux 0.5 released.

16 November 2008

* New window option: "utf8"; this must be on (it is off by default) for UTF-8
  to be parsed. The global/session option "utf8-default" controls the setting
  for new windows.

  This means that by default tmux does not handle UTF-8. To use UTF-8 by
  default it is necessary to a) "set utf8-default on" in .tmux.conf b) start
  tmux with -u on any terminal which support UTF-8.

  It seems a bit unnecessary for this to be a per-window option but that is
  the easiest way to do it, and it can't do any harm...
* Enable default colours if op contains \033[39;49m, based on a report from
  fulvio ciriaco.

12 November 2008

* Keep stack of last windows rather than just most recent; based on a diff from
  joshe.

04 November 2008

* Don't try to redraw status line when showing a prompt or message; if it does,
  the status timer is never reset so it redraws on every loop. Spotted by
  joshe.

09 October 2008

* Translate 256 colours into 16 if 256 is not available, same as screen does.
* Better support for OSC command (only to set window title now), and also
  support using APC for the same purpose (some Linux default shell profiles do
  this).

25 September 2008

* Large internal rewrite to better support 256 colours and UTF-8. Screen data
  is now stored as single two-way array of structures rather than as multiple
  separate arrays. Also simplified a lot of code.

  Only external changes are three new flags, -2, -d and -u, which force tmux to
  assume the terminal supports 256 colours, default colours (useful for
  xterm-256color which lacks the AX flag), or UTF-8 respectively.

10 September 2008

* Split off colour conversion code from screen code.

09 September 2008

* Initial UTF-8 support. A bit ugly and with a limit of 4096 UTF-8
  characters per window.

08 September 2008

* 256 colour support. tmux attempts to autodetect the terminal by looking
  both at what ncurses reports (usually wrong for xterm) and checking if
  the TERM contains "256col". For xterm TERM=xterm-256color is needed (as
  well as a build that support 256 colours); this seems to work for rxvt
  as well. On non-256 colour terminals, high colours are translated to white
  foreground and black background.

28 August 2008

* Support OS X/Darwin thanks to bsd-poll.c from OpenSSH. Also convert
  from clock_gettime(2) to gettimeofday(2) as OS X doesn't support the
  former; microsecond accuracy will have to be sufficient ;-).

07 August 2008

* Lose some unused/useless wrapper functions.

25 July 2008

* Shell variables may now be defined and used in configuration file. Define
  variables with:

	VAR=1

  And use with:

        renamew ${VAR}
	renamew "x${VAR}x"

 Also some other fixes to make, for example, "abc""abc" work similarly to
 the shell.

24 July 2008

* Finally lose inconsistently-used SCREEN_DEF* defines.
* If cursor mode is on, switch the arrow keys from \033[A to \033OA.
* Support the numeric keypad in both application and numbers mode. This is
  different from screen which always keeps it in application mode.

19 July 2008

* Unbreak "set status" - tmux thought it was ambiguous, reported by rivo nurges.

02 July 2008

* Split vi and emacs mode keys into two tables and add an option (mode-keys)
  to select between them. Default is emacs, use,

     tmux set mode-keys vi

  to change to vi.

  vi mode uses space to start selection, enter to copy selection and escape
  to clear selection.

01 July 2008

* Protocol versioning. Clients which identify as a different version from the
  server will be rejected.
* tmux 0.4 released.

29 June 2008

* Zombie windows. These are not closed when the child process dies. May be
  set for a window with the new "remain-on-exit" option; the default setting
  of this flag for new windows may be set with the "remain-by-default" session
  option.

  A window may be restarted with the respawn-window command:

  	respawn-window [-k] [command]

  If -k is given, any existing process running in the window is killed;
  if command is omitted, the same command as when the window was first
  created is used.

27 June 2008

* Handle nonexistent session or client to -t properly.

25 June 2008

* select-prompt command to allow a window to be selected at a prompt. Only
  windows in the current session may be selected. Bound to ' by default.
  Suggested by merdely.
* move-window command. Requested by merdely.
* Support binding alt keys (prefixed with M-). Change default to use
  C- for ctrl keys (^ is still accepted as an alternative).
* Slim down default key bindings: support lowercase only.
* Handle escaped keys properly (parse eg \033b into a single key code) and
  use this to change copy mode next/previous work to M-f and M-b to match
  emacs.

24 June 2008

* Next word (C-n/w) and previous word (C-b/b) in copy mode.

23 June 2008

* list-commands command (alias lscm).
* Split information about options into a table and use it to parse options
  on input (allowing abbreviations) and to print them with show-options
  (meaning that bell-action gets a proper string). This turned out a bit ugly
  though :-/.

22 June 2008

* Do not translate black and white into default if the terminal supports
  default colours. This was nice to force programs which didn't use default
  colours to be properly transparent in rxvt/aterm windows with a background
  image, but it causes trouble if someone redefines the default foreground and
  background (to have black on white or something).

21 June 2008

* Naive tab completion in the command prompt. This only completes command
  names if a) they are at the start of the text b) the cursor is at
  the end of the text c) the text contains no spaces.
* Only attempt to set the title where TERM looks like an xterm (contains
  "xterm", "rxvt" or is "screen"). I hate this but I don't see a better way:
  setting the title actually kills some other terminals pretty much dead.
* Strip padding out of terminfo(5) strings. Currently the padding is just
  ignored, this may need to be altered if there are any software terminals
  out there that actually need it.

20 June 2008

* buffer-limit option to set maximum size of buffer stack. Default is 9.
* Initial buffer improvements. Each session has a stack of buffers and each
  buffer command takes a -b option to manipulate items on the stack. If -b
  is omitted, the top entry is used. The following commands are currently
  available:

	set-buffer [-b index] [-t target-session] string
	paste-buffer [-d] [-b index] [-t target-window]
	delete-buffer [-b index] [-t target-session]
	show-buffers [-t target-session]
	show-buffer [-b index] [-t target-session]

  -d to paste-buffer deletes the buffer after pasting it.
* New option, display-time, sets the time status line messages stay on screen
  (unless a key is pressed). Set in milliseconds, default is 750 (0.75 seconds).
  The timer is only checked every 100 ms or so.

19 June 2008

* Use "status" consistently for status line option, and prefix for "prefix" key
  option.
* Allow commands to be entered at a prompt. This is triggered with the
  command-prompt command, bound to : by default.
* Show status messages properly, without blocking the server.

18 June 2008

* New option, set-titles. On by default, this attempts to set the window title
  using the \e]2;...\007 xterm code.

  Note that elinks requires the STY environment variable (used by screen) to be
  set before it will set the window title. So, if you want window titles set by
  elinks, set STY before running it (any value will do). I can't do this for all
  windows since setting it to an invalid value breaks screen.
* Show arrows at either end of status line when scrolled if more windows
  exist. Highlight the arrow if a hidden window has activity or bell.
* Scroll the status line to show the current window if necessary. Also handle
  windows smaller than needed better (show a blank status line instead of
  hanging or crashing).

17 June 2008

* tmux 0.3 released.

16 June 2008

* Add some information messages when window options are changed, suggested by
  Mike Erdely. Also add a -q command-line option to suppress them.
* show-window-options (showw) command.

15 June 2008

* show-options (show) command to show one or all options.

14 June 2008

* New window options: force-width and force-height. This will force a window
  to an arbitrary width and height (0 for the default unlimited). This is
  neat for emacs which doesn't have a sensible way to force hard wrapping at 80
  columns. Also, don't try to be clever and use clr_eol when redrawing the
  whole screen, it causes trouble since the redraw functions are used to draw
  the blank areas too.
* Clear the blank area below windows properly when they are smaller than client,
  also add an indicator line to show the vertical limit.
* Don't die on empty strings in config file, reported by Will Maier.

08 June 2008

* Set socket mode +x if any sessions are attached and -x if not.

07 June 2008

* Make status-interval actually changeable.

06 June 2008

* New window option: aggressive-resize. Normally, windows are resized to the
  size of the smallest attached session to which they are linked. This means a
  window only changes size when sessions are detached or attached, or they are
  linked or unlinked from a session. This flag changes a window to be the size
  of the smallest attached session for which it is the current window - it is
  resized every time a session changes to it or away from it. This is nice for
  things that handle SIGWINCH well (like irssi) and bad for things like shells.
* The server now exits when no sessions remain.
* Fix bug with inserting characters with TERM=xterm-color.

05 June 2008

* Completely reorganise command parsing. Much more common code in cmd-generic.c
  and a new way of specifying windows, clients or sessions. Now, most commands
  take a -t argument, which specifies a client, a session, or a window target.
  Clients and sessions are given alone (sessions are fnmatch(3)d and
  clients currently not), windows are give by (client|session):index. For
  example, if a user is in session "1" window 0 on /dev/ttypi, these should all
  be equivalent:

	tmux renamew newname			(current session and window)
	tmux renamew -t: newname		(current session and window)
	tmux renamew -t:0 newname		(current session, window 0)
	tmux renamew -t0 newname		(current session, window 0)
	tmux renamew -t1:0 newname		(session 1, window 0)
	tmux renamew -t1: newname		(session 1's current window)
	tmux renamew -t/dev/ttypi newname	(client /dev/ttypi's current
						 session and window)
	tmux renamew -t/dev/ttypi: newname	(client /dev/ttypi's current
						 session and window)
	tmux renamew -t/dev/ttypi:0 newname	(client /dev/ttypi's current
						 session, window 0)

  This does have some downsides, for example, having to use -t on selectw,

	tmux selectw -t7

  is annoying. But then using non-flagged arguments would mean renaming the
  current window would need to be something like:

	tmux renamew : newname

  It might be better not to try and be so consistent; comments to the usual
  address ;-).
* Infrastructure for printing arguments in list-keys output. Easy ones only for
  now.

04 June 2008

* Add some vi(1) key bindings in copy mode, and support binding ^[, ^\, ^]
  ^^ and ^_. Both from/prompted by Will Maier.
* setw monitor-activity and set status without arguments now toggle the current
  value; suggested by merdely.
* New command set-window-option (alias setw) to set the single current window
  option: monitor-activity to determine whether window activity is shown in
  the status bar for that window (default off).
* Change so active/bell windows are inverted in status line.
* Activity monitoring - window with activity are marked in status line. No
  way to disable this/filter windows yet.
* Brought select-window command into line with everything else; it now uses
  -i for the window index.
* Strings to display on the left and right of the status bar may now be set
  with the status-left and status-right options. These are passed through
  strftime(3) before being displayed. The status bar is automatically updated
  at an interval set by the status-interval option. The default is to display
  nothing on the left and the date and time on the left; the default update
  interval is 15 seconds.

03 June 2008

* Per session options. Setting options without specifying a session sets the
  global options as normal (global options are inherited by all sessions);
  passing -c or -s will set the option only for that session.
* Because a client has a session attached, any command needing a session can
  take a client and use its session. So, anything that used to accept -s now
  accepts -c as well.
* -s to specify session name now supports fnmatch(3) wildcards; if multiple
  sessions are found, or if no -s is specified, the most newly created is used.
* If no command is specified, assume new-session. As a byproduct, clean up
  command default values into separate init functions.
* kill-server command.

02 June 2008

* New command, start-server (alias "start"), to start the tmux server and do
  nothing else. This is good if you have a configuration file which creates
  windows or sessions (like me): in that case, starting the server the first
  time tmux new is run is bad since it creates a new session and window (as
  it is supposed to - starting the server is a side-effect).

  Instead, I have a little script which does the equivalent of:

  	tmux has -s0 2>/dev/null || tmux start
  	tmux attach -d -s0

  And I use it to start the server if necessary and attach to my primary
  session.
* Basic configuration file in ~/.tmux.conf or specified with -f. This is file
  contains a set of tmux commands that are run the first time the server is
  started. The configuration commands are executed before any others, so
  if you have a configuration file that contains:

	new -d
	neww -s0

  And you do the following without an existing server running:

	tmux new

  You will end up with two sessions, session 0 with two windows (created by
  the configuration file) and your client attached to session 1 with one
  window (created by the command-line command). I'm not completely happy with
  this, it seems a little non-obvious, but I haven't yet decided what to do
  about it.

  There is no environment variable handling or other special stuff yet.

  In the future, it might be nice to be able to have per-session configuration
  settings, probably by having conditionals in the file (so you could, for
  example, have commands to define a particular window layout that would only
  be invoked if you called tmux new -smysession and mysession did not already
  exist).
* BIG CHANGE: -s and -c to specify session name and client name are now passed
  after the command rather than before it. So, for example:

	tmux -s0 neww

  Becomes:

	tmux neww -s0

  This is to allow them to be used in the (forthcoming) configuration file
  THIS WILL BREAK ANY CURRENT SCRIPTS OR ALIASES USING -s OR -c.

01 June 2008

* Bug fix: don't die if -k passed to link-window and the destination doesn't
  exist.
* New command, send-keys, will send a set of keys to a window.

31 May 2008

* Fix so tmux doesn't hang if the initial window fails for some reason. This
  was highlighted by problems on Darwin, thanks to Elias Pipping for the report
  and access to a test account. (tmux still won't work on Darwin since its
  poll(2) is broken.)

02 January 2008

* Don't attempt to reset the tty on exit if it has been closed externally.

06 December 2007

* Restore checks for required termcap entries and add a few more obvious
  emulations.
* Another major reorganisation, this time of screen handling. A new set of
  functions, screen_write_*, are now used to write to a screen and a tty
  simultaneously. These are used by the input parser to update the base
  window screen and also by the different modes which now interpose their own
  screen.

30 November 2007

* Support \ek...\e\ to set window name.

27 November 2007

* Enable/disable mouse when asked, if terminal claims to support it. Mouse
  sequences are just passed through unaltered for the moment.
* Big internal reorganisation. Rather than leaving control of the tty solely in
  the client and piping all data through a socket to it, change so that the
  server opens the tty again and reads and writes to it directly. This avoids
  a lot of buffering and copying. Also reorganise the redrawing stuff so that
  everything goes through screen_draw_* - this makes the code simpler, but
  still needs broken up more, and all the ways of writing to screens should be
  more consistent.

26 November 2007

* Rather than shifting up one line at a time once the history is full,
  shift by 10% of the history each time. This is faster.
* Add ^A and ^E to copy mode to move to start-of-line/end-of-line.

24 November 2007

* Support for alt charset mode (VT100 graphics characters).

23 November 2007

* Mostly complete copy & paste. Copy mode entered with C-b [ (copy-mode
  command). In copy mode, arrow keys/page up/page down/hjkl/C-u/C-f navigate,
  space or C-space starts selection, and enter or C-w copies and (important!)
  exits copy mode. C-b ] (paste-buffer) pastes into current window. No
  extra utility keys (bol/eol/clear selection/etc), only one single buffer,
  and no buffer manipulation commands (clear/view/etc) yet. The code is also
  fugly :-(.
* history-limit option to set maximum history. Does not apply retroactively to
  existing windows! Lines take up a variable amount of space, but a reasonable
  guess for an 80-column terminal is 250 KB per 1000 lines (of history used,
  an empty history takes no space).

21 November 2007

* Create every line as zero length and only expand it as data is written,
  rather than creating at full size immediately.
* Make command output (eg list-keys) go to a scrollable window similar to
  scroll mode.
* Redo screen redrawing so it is a) readable b) split into utility functions
  that can be used outside screen.c. Use these to make scroll mode only
  redraw what it has to which gets rid of irritating flickering status box and
  makes it much faster.
* Full line width memory and horizontal scrolling in history.
* Initial support for scroll history. = to enter scrolling mode, and then
  vi keys or up/down/pgup/pgdown to navigate. Q to exit. No horizontal history
  yet (need per-line sizes) and a few kinks to be worked out (resizing while in
  history mode will probably cause trouble).

20 November 2007

* Fix format string error with "must specify a client" message. Also
  sprinkle some printflike tags.
* tmux 0.1 released.

17 November 2007

* (nicm) Add -k option to link-window to kill target window if it exists.

16 November 2007

* (nicm) Split in-client display into two columns. This is a hack but not a lot
  more so than that bit is already and it helps with lots of keys.
* (nicm) switch-client command to switch client between different sessions. This
  is pretty cool:

	$ tmux bind q switch 0
	$ tmux bind w switch 1

  Then you can switch between sessions 0 and 1 with a key :-).
* (nicm) Accept "-c client-tty" on command line to allow client manipulation
  commands, and change detach-/refresh-session to detach-/refresh-client (this
  loses the -a behaviour, but at some point -session versions may return, and
  -c will allow fnmatch(3)).
* (nicm) List available commands on ambiguous command.

12 November 2007

* (nicm) If the terminal supports default colours (AX present), force black
  background and white foreground to default. This is useful on transparent
  *terms for programs which don't do it themselves (like most(1)).
* (nicm) Fill in the rest of the man page.
* (nicm) kill-session command.

09 November 2007

* (nicm) C-space is now "^ " not "^@".
* (nicm) Support tab (\011).
* (nicm) Initial man page outline.
* (nicm) -V to show version.
* (nicm) rename-session command.

08 November 2007

* (nicm) Check for required terminal capabilities on start.

31 October 2007

* (nicm) Linux port.

30 October 2007

* (nicm) swap-window command. Same as link-window but swaps windows.

26 October 2007

* (nicm) Saving scroll region on \e7 causes problems with ncmpc so I guess
  it is not required.
* (nicm) unlink-window command.
* (nicm) link-window command to link an existing window into another session
  (or another index in the same session). Syntax:

	tmux -s dstname link-window [-i dstidx] srcname srcidx

* (nicm) Redo window data structures. The global array remains, but each per-
  session list is now a RB tree of winlink structures. This disassociates the
  window index from the array size (allowing arbitrary indexes) which still
  allowing windows to have multiple indexes.

25 October 2007

* (nicm) has-session command: checks if session exists.

24 October 2007

* (nicm) Support for \e6n to request cursor position. resize(1) now works.
* (nicm) Support for \e7, \e8 save/restore cursor and attribute sequences.
  Currently don't save mode (probably should). Also change some cases where
  out-of-bound values are ignored to limit them to within range (there are
  others than need to be checked too).

23 October 2007

* (nicm) Lift limit on session name passed with -s.
* (nicm) Show size in session/window lists.
* (nicm) Pass tty up to server when client identifies and add a list-clients
  command to list connected clients.

20 October 2007

* (nicm) Add default-command option and change default to be $SHELL rather than
  $SHELL -l. Also try to read shell from passwd db if $SHELL isn't present.

19 October 2007

* (nicm) -n on new-session is now -s, and -n is now the initial window name.
  This was documented but not implemented :-/.
* (nicm) kill-window command, bound to & by default (because it should be hard
  to hit accidentally).
* (nicm) bell-style option with three choices: "none" completely ignore bell;
  "any" pass through a bell in any window to current; "current" ignore bells
  except in current window. This applies only to the bell terminal signal,
  the status bar always reflects any bells.
* (nicm) Refresh session command.

12 October 2007

* (nicm) Add a warning if $TMUX exists on new/attach.
* (nicm) send-prefix command. Bound to C-b by default.
* (nicm) set status, status-fg, status-bg commands. fg and bg are as a number
  from 0 to 8 or a string ("red", "blue", etc). status may be 1/0, on/off,
  yes/no.
* (nicm) Make status line mark window in yellow on bell.

04 October 2007

* (nicm) -d option to attach to detach all other clients on the same session.
* (nicm) Partial resizing support. Still buggy. A C-b S and back sometimes fixes
  it when it goes wonky.
* (mxey) Added my tmux start script as an example (examples/start-tmux.sh).
* (mxey) New sessions can now be given a command for their first window.
* (mxey) Fixed usage statement for new-window.
* (nicm) attach-session (can't believe I forgot it until now!) and list-windows
  commands.
* (nicm) rename-window and select-window commands.
* (nicm) set-option command (alias set): "tmux set-option prefix ^A".
* (nicm) Key binding and unbinding is back.

03 October 2007

* (nicm) {new,next,last,previous}-window.
* (nicm) Rewrite command handling so commands are much more generic and the
  same commands are used for command line and keys (although most will probably
  need to check how they are called). Currently incomplete (only new/detach/ls
  implemented). Change: -s is now passed before command again!
* (nicm) String number arguments. So you can do: tmux bind ^Q create "blah".
* (nicm) Key binding. tmux bind key command [argument] and tmux unbind key.
  Key names are in a table in key-string.c, plus A is A, ^A is ctrl-A.
  Possible commands are in cmd.c (look at cmd_bind_table).
* (nicm) Move command parsing into the client. Also rename some messages and
  tidy up a few bits. Lots more tidying up needed :-/.

02 October 2007

* (nicm) Redraw client status lines on rename.
* (nicm) Error on ambiguous command.

01 October 2007

* (nicm) Restore window title handling.
* (nicm) Simple uncustomisable status line with window list.

30 September 2007

* (nicm) Window info command for debugging, C-b I.

29 September 2007

* (nicm) Deleting/inserting lines should follow scrolling region. Fix.
* (nicm) Allow creation of detached sessions: "tmux new-session -d".
* (nicm) Permit error messages to be passed back for transient clients like
  rename. Also make rename -i work.
* (nicm) Pass through bell in any window to current.

28 September 2007

* (nicm) Major rewrite of input parser:
	- Lose the old weirdness in favour of a state machine.
	- Merge in parsing from screen.c.
	- Split key parsing off into a separate file.
  This is step one towards hopefully allowing a status line. It requires
  that we output data as if the terminal had one line less than it really does -
  a serious problem when it comes to things like scrolling. This change
  consolidates all the range checking and limiting together which should make
  it easier.
* (mxey) Added window renaming, like "tmux rename [-s session] [-i index] name"

27 September 2007

* Split "tmux list" into "tmux list-sessions" (ls) and "list-windows" (lsw).
* New command session selection:
	- if name is specified, look for it and use it if it exists, otherwise
	  error
	- if no name specified, try the current session from $TMUX
	- if $TMUX doesn't exist, and there is only one session, use it,
	  otherwise error

26 September 2007

* Add command aliases, so "ls" is an alias for "list".
* Rename some commands and alter syntax to take options after a la CVS. Also
  change some flags. So:

	tmux -s/socket -nabc new

  Becomes:

	tmux -S/socket new -sabc

* Major tidy and split of client/server code.

22 September 2007

* Window list command (C-b W). Started by Maximilian Gass, finished by me.

20 September 2007

* Specify meta via environment variable (META).
* Record last window and ^L key to switch to it. Largely from Maximilian Gass.
* Reset ignored signals in child after forkpty, makes ^C work.
* Wrap on next/previous. From Maximilian Gass.

19 September 2007

* Don't renumber windows on close.

28 August 2007

* Scrolling region (\e[r) support.

27 August 2007

* Change screen.c to work more logically and hopefully fix heap corruption.

09 July 2007

* Initial import to CVS. Basic functions are working, albeit with a couple of
  showstopper memory bugs and many missing features. Detaching, reattaching,
  creating new sessions, listing sessions work acceptably for using with shells.
  Simple curses programs (top, systat, tetris) and more complicated ones (mutt,
  emacs) that don't require scrolling regions (ESC[r) mostly work fine
  (including mutt, emacs). No status bar yet and no key remapping or other
  customisation.
